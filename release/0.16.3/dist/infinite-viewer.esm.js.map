{"version":3,"file":"infinite-viewer.esm.js","sources":["../src/consts.ts","../src/utils.ts","../src/ScrollBar.ts","../src/InfiniteViewerManager.tsx","../src/InfiniteViewer.tsx"],"sourcesContent":["import styled from \"css-styled\";\nimport { InfiniteViewerOptions } from \"./types\";\nimport getAgent from \"@egjs/agent\";\nimport { prefixCSS } from \"framework-utils\";\n\nexport const agent = getAgent();\nexport const IS_SAFARI = agent.browser.name === \"safari\";\n\nexport const PREFIX = \"infinite-viewer-\";\n\nexport const WRAPPER_CLASS_NAME = `${PREFIX}wrapper`;\nexport const SCROLL_AREA_CLASS_NAME = `${PREFIX}scroll-area`;\n\nexport const SCROLL_BAR_CLASS_NAME = `${PREFIX}scroll-bar`;\nexport const HORIZONTAL_SCROLL_BAR_CLASS_NAME = `${PREFIX}horizontal-scroll-bar`;\nexport const VERTICAL_SCROLL_BAR_CLASS_NAME = `${PREFIX}vertical-scroll-bar`;\nexport const SCROLL_THUMB_CLASS_NAME = `${PREFIX}scroll-thumb`;\n\nexport const injector = styled(prefixCSS(PREFIX, `\n{\n    position: relative;\n    overscroll-behavior: none;\n}\n.wrapper {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    top: 0;\n    left: 0;\n    will-change: scroll-position;\n}\n.wrapper::-webkit-scrollbar {\n    display: none;\n}\n.scroll-area {\n    position:absolute;\n    top:0;\n    left:0;\n    transform-origin: 0 0;\n}\n.scroll-bar {\n    position:absolute;\n    width: 10px;\n    height: 10px;\n    box-sizing: border-box;\n    right: 0;\n    bottom: 0;\n    overflow: hidden;\n}\n.horizontal-scroll-bar {\n    width: 100%;\n    height: 14px;\n}\n.vertical-scroll-bar {\n    height: 100%;\n    width: 14px;\n}\n.scroll-thumb {\n    position:relative;\n    opacity: 0.7;\n    background: #333;\n    border-radius: 3px;\n    left: 0px;\n    top: 0px;\n    z-index: 10;\n    width: 6px;\n    height: 6px;\n    transition: all ease 0.2s;\n}\n.horizontal-scroll-bar .scroll-thumb {\n    margin: 4px 0px;\n    transition-property: margin, height, border-radius;\n}\n.vertical-scroll-bar .scroll-thumb {\n    margin: 0px 4px;\n    transition-property: margin, width, border-radius;\n}\n.horizontal-scroll-bar:hover .scroll-thumb {\n    height: 10px;\n    margin: 2px 0px;\n    border-radius: 5px;\n}\n.vertical-scroll-bar:hover .scroll-thumb {\n    width: 10px;\n    margin: 0px 2px;\n    border-radius: 5px;\n}\n`));\n\nexport const DEFAULT_OPTIONS = {\n    margin: 500,\n    threshold: 100,\n    zoom: 1,\n    rangeX: [-Infinity, Infinity],\n    rangeY: [-Infinity, Infinity],\n    rangeOffsetX: [0, 0],\n    rangeOffsetY: [0, 0],\n    wrapperElement: null,\n    scrollAreaElement: null,\n    horizontalScrollElement: null,\n    verticalScrollElement: null,\n    usePinch: false,\n    useAutoZoom: false,\n    useMouseDrag: false,\n    pinchThreshold: 30,\n    cspNonce: \"\",\n    maxPinchWheel: Infinity,\n    wheelScale: 0.01,\n    displayHorizontalScroll: true,\n    displayVerticalScroll: true,\n    useTransform: true,\n    useWheelPinch: true,\n    zoomRange: [0.001, Infinity],\n    wheelPinchKey: \"ctrl\" as const,\n    useWheelScroll: IS_SAFARI,\n    zoomOffsetX: \"50%\",\n    zoomOffsetY: \"50%\",\n    translateZ: 0,\n    useGesture: true,\n    useResizeObserver: false,\n};\nexport const NAMES = {\n    horizontal: {\n        pos: \"Left\",\n        coord: \"X\",\n        size: \"Width\",\n    },\n    vertical: {\n        pos: \"Top\",\n        coord: \"Y\",\n        size: \"Height\",\n    },\n} as const;\n/**\n * @memberof InfiniteViewer\n */\nexport const CLASS_NAME = injector.className;\n\n/**\n * @memberof InfiniteViewer\n */\nexport const PROPERTIES = [\n    \"margin\",\n    \"threshold\",\n    \"zoomOffsetX\",\n    \"zoomOffsetY\",\n    \"zoom\",\n    \"rangeX\",\n    \"rangeY\",\n    \"rangeOffsetX\",\n    \"rangeOffsetY\",\n    \"usePinch\",\n    \"useMouseDrag\",\n    \"pinchThreshold\",\n    \"maxPinchWheel\",\n    \"wheelScale\",\n    \"displayVerticalScroll\",\n    \"displayHorizontalScroll\",\n    \"useWheelScroll\",\n    \"translateZ\",\n    \"useAutoZoom\",\n    \"wheelPinchKey\",\n    \"zoomRange\",\n] as const;\n\n/**\n * @memberof InfiniteViewer\n */\nexport const OPTIONS = [\n    // ignore target, container,\n    ...PROPERTIES,\n    \"useWheel\",\n    \"useGesture\",\n    \"cspNonce\",\n    \"wrapperElement\",\n    \"scrollAreaElement\",\n    \"verticalScrollElement\",\n    \"horizontalScrollElement\",\n    \"useResizeObserver\",\n] as const;\n\n/**\n * @memberof InfiniteViewer\n */\nexport const EVENTS = [\n    \"scroll\",\n    \"abortPinch\",\n    \"dragStart\",\n    \"dragEnd\",\n    \"pinchStart\",\n    \"pinch\",\n] as const;\n\n/**\n * @memberof InfiniteViewer\n */\nexport const METHODS = [\n    \"getScrollLeft\",\n    \"getScrollTop\",\n    \"getScrollWidth\",\n    \"getScrollHeight\",\n    \"scrollTo\",\n    \"scrollBy\",\n    \"scrollCenter\",\n    \"getContainer\",\n    \"getViewport\",\n    \"getWrapper\",\n    \"setZoom\",\n    \"getRangeX\",\n    \"getRangeY\",\n    \"resize\",\n] as const;\n\nexport const TINY_NUM = 0.000001;\n","import { OnDrag } from \"gesto\";\nimport { TINY_NUM } from \"./consts\";\n\nexport function measureSpeed(e: OnDrag) {\n    const { deltaX, deltaY, datas } = e;\n    const time = Date.now();\n    const prevSpeed = datas.speed;\n\n    if (!prevSpeed) {\n        datas.speed = [0, 0];\n        datas.time = time;\n        return;\n    }\n    const dt = time - datas.time;\n    datas.speed = [prevSpeed[0] / 2 + deltaX / dt, prevSpeed[1] / 2 + deltaY / dt];\n}\n\nexport function getDuration(speed: number[], a: number) {\n    const normalSpeed = Math.sqrt(speed[0] * speed[0] + speed[1] * speed[1]);\n\n    return Math.abs(normalSpeed / a);\n}\nexport function getDestPos(speed: number[], a: number) {\n    const duration = getDuration(speed, a);\n\n    return [\n        speed[0] / 2 * duration,\n        speed[1] / 2 * duration,\n    ];\n}\nexport function minmax(value: number, min: number, max: number) {\n    return Math.min(max, Math.max(min, value));\n}\n\nexport function abs(v: number) {\n    return Math.abs(v);\n}\n\nexport function getRange(\n    pos: number,\n    margin: number,\n    range: number[],\n    threshold: number,\n    isReal: boolean,\n) {\n    const min = isReal || isFinite(range[0])\n        ? range[0]\n        : Math.min(-1, Math.floor(pos / margin)) * margin - threshold;\n    const max = isReal || isFinite(range[1])\n        ? range[1]\n        : Math.max(1, Math.ceil(pos / margin)) * margin + threshold;\n\n    return [min, max];\n}\n\nexport function throttle(value: number) {\n    return Math.round(value / TINY_NUM) * TINY_NUM;\n}\n\n\nexport function checkDefault<T>(value: T | undefined | null, defaultValue: T): T {\n    return value != null ? value : defaultValue;\n}\n","import Gesto from \"gesto\";\nimport {\n    SCROLL_BAR_CLASS_NAME, SCROLL_THUMB_CLASS_NAME,\n    HORIZONTAL_SCROLL_BAR_CLASS_NAME, VERTICAL_SCROLL_BAR_CLASS_NAME\n} from \"./consts\";\nimport { addClass, removeEvent, addEvent } from \"@daybrush/utils\";\nimport EventEmitter from \"@scena/event-emitter\";\n\nexport default class ScrollBar extends EventEmitter {\n    public isAppend: boolean = false;\n    public thumbElement!: HTMLElement;\n    public barElement!: HTMLElement;\n    private gesto!: Gesto;\n    private pos: number = 0;\n    private size: number = 0;\n    private scrollSize: number = 0;\n    private isHorizontal = false;\n\n    constructor(\n        private type: \"horizontal\" | \"vertical\",\n        container?: HTMLElement,\n    ) {\n        super();\n        const isHorizontal = type === \"horizontal\";\n        let thumbElement: HTMLElement;\n        let barElement: HTMLElement = container;\n\n        if (!container) {\n            barElement = document.createElement(\"div\");\n            thumbElement = document.createElement(\"div\");\n\n            barElement.insertBefore(thumbElement, null);\n            this.isAppend = true;\n        } else {\n            thumbElement = container.querySelector(`.${SCROLL_THUMB_CLASS_NAME}`);\n        }\n        addClass(\n            barElement,\n            isHorizontal ? HORIZONTAL_SCROLL_BAR_CLASS_NAME\n                : VERTICAL_SCROLL_BAR_CLASS_NAME,\n        );\n        addClass(barElement, SCROLL_BAR_CLASS_NAME);\n        addClass(thumbElement, SCROLL_THUMB_CLASS_NAME);\n\n        this.thumbElement = thumbElement;\n        this.barElement = barElement;\n        this.isHorizontal = isHorizontal;\n        this.gesto = new Gesto(barElement, {\n            container: window,\n        }).on(\"dragStart\", e => {\n            const target = e.inputEvent.target;\n            const datas = e.datas;\n            const isThumb = this.thumbElement === target;\n\n            if (!isThumb) {\n                setTimeout(() => {\n                    requestAnimationFrame(() => {\n                        const thumbRect = this.thumbElement.getBoundingClientRect();\n                        const pos1 = thumbRect[isHorizontal ? \"left\" : \"top\"];\n                        const thumbSize = thumbRect[isHorizontal ? \"width\" : \"height\"];\n                        const pos2 = pos1 + thumbSize;\n                        const clientPos = e[isHorizontal ? \"clientX\" : \"clientY\"];\n\n                        if (pos1 <= clientPos && clientPos <= pos2) {\n                            return;\n                        }\n                        const size = this.size;\n                        const delta = size * size / this.scrollSize;\n\n                        this.scrollBy(pos1 < clientPos ? delta : -delta);\n                    });\n                }, 100);\n\n            }\n            datas.isThumb = isThumb;\n            e.inputEvent.stopPropagation();\n            e.inputEvent.preventDefault();\n        }).on(\"drag\", e => {\n            if (!e.datas.isThumb) {\n                return;\n            }\n            this.scrollBy(this.isHorizontal ? e.deltaX : e.deltaY);\n        });\n        addEvent(this.barElement, \"wheel\", this.onWheel, {\n            passive: false,\n        });\n    }\n    public scrollBy(delta: number) {\n        const ratio = delta / this.size;\n\n        this.trigger(\"scroll\", {\n            delta: this.scrollSize * ratio,\n        });\n    }\n    public render(isDisplay: boolean, pos: number, size: number, scrollSize: number) {\n        this.pos = pos;\n        this.size = size;\n        this.scrollSize = scrollSize;\n\n        const display = isDisplay && (scrollSize > size) ? \"block\" : \"none\";\n        const [dirName1, sizeName] = this.isHorizontal ? [\"X\", \"width\"] : [\"Y\", \"height\"];\n\n        this.barElement.style.cssText = `display: ${display};`;\n        this.thumbElement.style.cssText\n            += `${sizeName}: ${size * size / scrollSize}px;`\n            + `transform: translate${dirName1}(${pos / scrollSize * size}px)`;\n    }\n    public destroy() {\n        removeEvent(this.barElement, \"wheel\", this.onWheel);\n        this.gesto.off();\n        this.off();\n    }\n    private onWheel = (e: WheelEvent) => {\n        const delta = this.isHorizontal ? e.deltaX : e.deltaY;\n\n        if (delta) {\n            e.preventDefault();\n        }\n        this.trigger(\"scroll\", {\n            delta,\n        });\n    }\n}\n","import EventEmitter from \"@scena/event-emitter\";\nimport Gesto from \"gesto\";\nimport { InjectResult } from \"css-styled\";\nimport { Properties } from \"framework-utils\";\nimport { camelize, IObject, addEvent, removeEvent, addClass, convertUnitSize, between } from \"@daybrush/utils\";\nimport { InfiniteViewerOptions, InfiniteViewerProperties, InfiniteViewerEvents, OnPinch } from \"./types\";\nimport {\n    PROPERTIES, injector, CLASS_NAME, TINY_NUM,\n    DEFAULT_OPTIONS,\n    WRAPPER_CLASS_NAME, SCROLL_AREA_CLASS_NAME,\n    HORIZONTAL_SCROLL_BAR_CLASS_NAME, VERTICAL_SCROLL_BAR_CLASS_NAME, NAMES\n} from \"./consts\";\nimport { measureSpeed, getDuration, getDestPos, abs, getRange, checkDefault } from \"./utils\";\nimport ScrollBar from \"./ScrollBar\";\n\n@Properties(PROPERTIES as any, (prototype, property) => {\n    const attributes: IObject<any> = {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this.options[property];\n        },\n    };\n    const setter = camelize(`set ${property}`);\n    if (prototype[setter]) {\n        attributes.set = function (value) {\n            this[setter](value, true);\n        };\n    } else {\n        attributes.set = function (value) {\n            this.options[property] = value;\n        };\n    }\n    Object.defineProperty(prototype, property, attributes);\n})\n/**\n * @sort 1\n */\nclass InfiniteViewer extends EventEmitter<InfiniteViewerEvents> {\n    public options: InfiniteViewerOptions;\n    private injectResult!: InjectResult;\n    private wrapperElement!: HTMLElement;\n    private scrollAreaElement!: HTMLElement;\n    private horizontalScrollbar: ScrollBar;\n    private verticalScrollbar: ScrollBar;\n    private gesto!: Gesto;\n    private offsetX: number = 0;\n    private offsetY: number = 0;\n    private containerWidth: number = 0;\n    private containerHeight: number = 0;\n    private viewportWidth: number = 0;\n    private viewportHeight: number = 0;\n    private scrollLeft: number = 0;\n    private scrollTop: number = 0;\n    private timer: number = 0;\n    private dragFlag: boolean = false;\n    private isLoop: boolean = false;\n    private _tempScale: number = 1;\n    private _tempRect: { top: number, left: number, width: number, height: number } | null = null;\n    private _tempRectTimer: number | null = null;\n    private _onDestroys: Array<() => void> = [];\n    private _asLeft = 0;\n    private _asTop = 0;\n    /**\n     * @sort 1\n     */\n    constructor(\n        private containerElement: HTMLElement,\n        private viewportElement: HTMLElement,\n        options: Partial<InfiniteViewerOptions> = {},\n    ) {\n        super();\n        this.options = {\n            ...DEFAULT_OPTIONS,\n            ...options,\n        };\n        this.init();\n    }\n    /**\n     * Get Container Element\n     */\n    public getContainer(): HTMLElement {\n        return this.containerElement;\n    }\n    /**\n     * Get Viewport Element\n     */\n    public getViewport(): HTMLElement {\n        return this.viewportElement;\n    }\n    /**\n     * Get Wrapper Element\n     */\n    public getWrapper(): HTMLElement {\n        return this.wrapperElement;\n    }\n    /**\n     * Get Scroll Area Element\n     */\n    public geScrollArea(): HTMLElement {\n        return this.scrollAreaElement;\n    }\n    /**\n     * Destroy elements, properties, and events.\n     */\n    public destroy(): void {\n        this.off();\n        this.gesto.unset();\n        this.verticalScrollbar.destroy();\n        this.horizontalScrollbar.destroy();\n        this.injectResult.destroy();\n        const containerElement = this.containerElement;\n\n        this._onDestroys.forEach(callback => {\n            callback();\n        });\n        removeEvent(this.wrapperElement, \"scroll\", this.onScroll);\n        removeEvent(containerElement, \"wheel\", this.onWheel);\n        removeEvent(containerElement, \"gesturestart\", this.onGestureStart);\n        removeEvent(containerElement, \"gesturechange\", this.onGestureChange);\n        removeEvent(containerElement, \"gesturesend\", this.onGestureEnd);\n\n        this.gesto = null;\n        this.injectResult = null;\n        this.containerElement = null;\n        this.viewportElement = null;\n        this.options = null;\n    }\n    /**\n     * Gets the number of pixels that an element's content is scrolled vertically.\n     * @param - Get absolute top position\n     */\n    public getScrollTop(isAbsolute?: boolean) {\n        return this.scrollTop / this.zoom + this.offsetY\n            + (isAbsolute ? abs(this.getRangeY()[0]) : 0);\n    }\n    /**\n     * Gets the number of pixels that an element's content is scrolled vertically.\n     * @param - Get absolute left position\n     */\n    public getScrollLeft(isAbsolute?: boolean) {\n        return this.scrollLeft / this.zoom + this.offsetX\n            + (isAbsolute ? abs(this.getRangeX()[0]) : 0);\n    }\n    /**\n     * Gets measurement of the width of an element's content with overflow\n     */\n    public getScrollWidth(isZoom?: boolean) {\n        const range = this.getRangeX(isZoom);\n\n        return this.containerWidth + abs(range[0]) + abs(range[1]);\n    }\n    /**\n     * Gets measurement of the height of an element's content with overflow\n     */\n    public getScrollHeight(isZoom?: boolean) {\n        const range = this.getRangeY(isZoom);\n\n        return this.containerHeight + abs(range[0]) + abs(range[1]);\n    }\n\n    /**\n     * Scroll the element to the center\n     */\n    public scrollCenter() {\n        this.resize();\n\n        const zoom = this.zoom;\n        const left = -(this.containerWidth / zoom - this.viewportWidth) / 2;\n        const top = -(this.containerHeight / zoom - this.viewportHeight) / 2;\n\n        return this.scrollTo(left, top);\n    }\n    /**\n     * Update Viewer Sizes\n     * @method\n     */\n    public resize = () => {\n        const {\n            offsetWidth: containerWidth,\n            offsetHeight: containerHeight,\n        } = this.containerElement;\n        const {\n            offsetWidth: viewportWidth,\n            offsetHeight: viewportHeight,\n        } = this.viewportElement;\n\n        this.containerWidth = containerWidth;\n        this.containerHeight = containerHeight;\n        this.viewportWidth = viewportWidth;\n        this.viewportHeight = viewportHeight;\n\n        this.render();\n        this.scrollBy(0, 0);\n    }\n    /**\n     * Scrolls the container by the given amount.\n     */\n    public scrollBy(deltaX: number, deltaY: number) {\n        return this.scrollTo(this.getScrollLeft() + deltaX, this.getScrollTop() + deltaY);\n    }\n    /**\n     * Scrolls the container to set of coordinates.\n     * @param scrollLeft\n     * @param scrollTop\n     */\n    public scrollTo(x: number, y: number) {\n        const {\n            scrollLeft: prevScrollLeft,\n            scrollTop: prevScrollTop,\n        } = this;\n        this._scrollTo(\"horizontal\", x);\n        this._scrollTo(\"vertical\", y);\n\n        const scrollLeft = this.scrollLeft;\n        const scrollTop = this.scrollTop;\n        this.render();\n        const nextScrollAbsoluteLeft = this.getScrollLeft();\n        const nextScrollAbsoluteTop = this.getScrollTop();\n\n        this._emitScrollEvent(nextScrollAbsoluteLeft, nextScrollAbsoluteTop);\n\n        if (Math.round(prevScrollLeft) !== scrollLeft || Math.round(prevScrollTop) !== scrollTop) {\n            this.isLoop = true;\n            this.move(scrollLeft, scrollTop);\n            requestAnimationFrame(() => {\n                if (!this.isLoop) {\n                    return;\n                }\n                this.isLoop = false;\n                const {\n                    scrollLeft: requestScrollLeft,\n                    scrollTop: requestScrollTop,\n                } = this.wrapperElement;\n\n                this.scrollLeft = requestScrollLeft;\n                this.scrollTop = requestScrollTop;\n\n                if (\n                    scrollLeft !== Math.round(requestScrollLeft)\n                    || scrollTop !== Math.round(requestScrollTop)\n                ) {\n                    this.scrollTo(nextScrollAbsoluteLeft, nextScrollAbsoluteTop);\n                }\n            });\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Set viewer zoom\n     */\n    public setZoom(zoom: number, isSetter?: boolean) {\n        if (isSetter && this.useAutoZoom) {\n            return;\n        }\n        const {\n            containerWidth,\n            containerHeight,\n            zoom: prevZoom,\n            zoomRange\n        } = this;\n        let {\n            zoomOffsetX = DEFAULT_OPTIONS.zoomOffsetX,\n            zoomOffsetY = DEFAULT_OPTIONS.zoomOffsetY,\n        } = this;\n\n\n        const scrollLeft = this.getScrollLeft();\n        const scrollTop = this.getScrollTop();\n        const nextZoom = between(zoom, zoomRange[0], zoomRange[1]);\n\n        this.options.zoom = nextZoom;\n\n\n\n        const nextScrollLeft = this.getScrollLeft();\n        const nextScrollTop = this.getScrollTop();\n\n        const zoomX = convertUnitSize(`${zoomOffsetX}`, containerWidth);\n        const zoomY = convertUnitSize(`${zoomOffsetY}`, containerHeight);\n\n        const centerX = scrollLeft + zoomX / prevZoom;\n        const centerY = scrollTop + zoomY / prevZoom;\n\n        const nextCenterX = nextScrollLeft + zoomX / nextZoom;\n        const nextCenterY = nextScrollTop + zoomY / nextZoom;\n\n        this.scrollBy(centerX - nextCenterX, centerY - nextCenterY);\n        this.render();\n    }\n    /**\n     * get x ranges\n     */\n    public getRangeX(isZoom?: boolean, isReal?: boolean) {\n        return this._getRangeCoord(\"horizontal\", isZoom, isReal);\n    }\n    /**\n     * get y ranges\n     */\n    public getRangeY(isZoom?: boolean, isReal?: boolean) {\n        return this._getRangeCoord(\"vertical\", isZoom, isReal);\n    }\n\n    private init() {\n        // infinite-viewer(container)\n        // viewport\n        // children\n        const containerElement = this.containerElement;\n        const options = this.options;\n\n        // vanilla\n        let wrapperElement = options.wrapperElement\n            || containerElement.querySelector(`.${WRAPPER_CLASS_NAME}`);\n        let scrollAreaElement = options.scrollAreaElement\n            || containerElement.querySelector(`.${SCROLL_AREA_CLASS_NAME}`);\n        const horizontalScrollElement = options.horizontalScrollElement\n            || containerElement.querySelector(`.${HORIZONTAL_SCROLL_BAR_CLASS_NAME}`);\n        const verticalScrollElement = options.verticalScrollElement\n            || containerElement.querySelector(`.${VERTICAL_SCROLL_BAR_CLASS_NAME}`);\n\n        if (wrapperElement) {\n            this.wrapperElement = wrapperElement;\n        } else {\n            wrapperElement = document.createElement(\"div\");\n            wrapperElement.insertBefore(this.viewportElement, null);\n            containerElement.insertBefore(wrapperElement, null);\n\n            this.wrapperElement = wrapperElement;\n        }\n\n        if (scrollAreaElement) {\n            this.scrollAreaElement = scrollAreaElement;\n        } else {\n            scrollAreaElement = document.createElement(\"div\");\n\n            wrapperElement.insertBefore(scrollAreaElement, wrapperElement.firstChild);\n\n            this.scrollAreaElement = scrollAreaElement;\n        }\n        addClass(containerElement, CLASS_NAME);\n        addClass(wrapperElement, WRAPPER_CLASS_NAME);\n        addClass(scrollAreaElement, SCROLL_AREA_CLASS_NAME);\n\n        this.horizontalScrollbar = new ScrollBar(\"horizontal\", horizontalScrollElement);\n        this.verticalScrollbar = new ScrollBar(\"vertical\", verticalScrollElement);\n\n        this.horizontalScrollbar.on(\"scroll\", e => {\n            this.scrollBy(e.delta / this.zoom, 0);\n        });\n\n        this.verticalScrollbar.on(\"scroll\", e => {\n            this.scrollBy(0, e.delta / this.zoom);\n        });\n\n        if (this.horizontalScrollbar.isAppend) {\n            containerElement.insertBefore(this.horizontalScrollbar.barElement, null);\n        }\n        if (this.verticalScrollbar.isAppend) {\n            containerElement.insertBefore(this.verticalScrollbar.barElement, null);\n        }\n        this.injectResult = injector.inject(containerElement, {\n            nonce: this.options.cspNonce,\n        });\n        /**\n         * the `dragStart` event fires when `touchstart` does occur.\n         * @memberof InfiniteViewer\n         * @event dragStart\n         * @param {InfiniteViewer.OnDragStart} - Parameters for the `dragStart` event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         * ).on(\"dragStart\", e => {\n         *   console.log(e.inputEvent);\n         * });\n         */\n        /**\n         * the `drag` event fires when `touch` does occur.\n         * @memberof InfiniteViewer\n         * @event drag\n         * @param {InfiniteViewer.OnDrag} - Parameters for the `drag` event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         * ).on(\"drag\", e => {\n         *   console.log(e.inputEvent);\n         * });\n         */\n        /**\n         * the `dragEnd` event fires when `touchend` does occur.\n         * @memberof InfiniteViewer\n         * @event dragEnd\n         * @param {InfiniteViewer.OnDragEnd} - Parameters for the `dragEnd` event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         * ).on(\"dragEnd\", e => {\n         *   console.log(e.inputEvent);\n         * });\n         */\n        /**\n         * the `abortPinch` event fires when `pinch` event does not occur by dragging a certain area.\n         * @memberof InfiniteViewer\n         * @event abortPinch\n         * @param {InfiniteViewer.OnAbortPinch} - Parameters for the abortPinch event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         *   {\n         *     usePinch: true,\n         *   }\n         * ).on(\"abortPinch\", e => {\n         *   console.log(e.inputEvent);\n         * });\n         */\n        /**\n         * the `pinch` event fires when two points pinch the viewer\n         * The pinchStart and abortPinch events do not occur when pinching through the wheel.\n         * @memberof InfiniteViewer\n         * @event pinch\n         * @param {InfiniteViewer.OnPinch} - Parameters for the `pinch` event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         *   {\n         *     usePinch: true,\n         *   }\n         * ).on(\"pinch\", e => {\n         *   console.log(e.zoom, e.inputEvent);\n         * });\n         */\n        this.gesto = new Gesto(containerElement, {\n            container: document.body,\n            events: [\"touch\", \"mouse\"],\n        }).on(\"dragStart\", ({ inputEvent, datas, stop, isMouseEvent }) => {\n            if (!this.useMouseDrag && isMouseEvent) {\n                stop();\n                return;\n            }\n            this.pauseAnimation();\n            this.dragFlag = false;\n            const result = this.trigger(\"dragStart\", {\n                inputEvent,\n            });\n            if (result === false) {\n                stop();\n                return;\n            }\n\n            inputEvent.preventDefault();\n\n            datas.startEvent = inputEvent;\n        }).on(\"drag\", e => {\n            if (!this.options.usePinch || e.isPinch) {\n                this.trigger(\"drag\", {\n                    ...e,\n                    inputEvent: e.inputEvent,\n                });\n                measureSpeed(e);\n                const zoom = this.zoom;\n                this.scrollBy(-e.deltaX / zoom, -e.deltaY / zoom);\n            } else if (!this.dragFlag && e.movement > options.pinchThreshold) {\n                this.dragFlag = true;\n\n                this.trigger(\"abortPinch\", {\n                    inputEvent: e.datas.startEvent || e.inputEvent,\n                });\n            }\n        }).on(\"dragEnd\", e => {\n            this.trigger(\"dragEnd\", {\n                isDrag: e.isDrag,\n                isDouble: e.isDouble,\n                inputEvent: e.inputEvent,\n            });\n            this.startAnimation(e.datas.speed);\n        }).on(\"pinchStart\", ({ inputEvent, datas, stop }) => {\n            inputEvent.preventDefault();\n            this.pauseAnimation();\n            datas.startZoom = this.zoom;\n\n            const result = this.trigger(\"pinchStart\", {\n                inputEvent,\n            });\n            if (result === false) {\n                stop();\n            }\n            this._setClientRect();\n        }).on(\"pinch\", e => {\n            this._triggerPinch({\n                rotation: e.rotation,\n                distance: e.distance,\n                scale: e.scale,\n                inputEvent: e.inputEvent,\n                isWheel: false,\n                zoom: e.datas.startZoom * e.scale,\n                clientX: e.clientX,\n                clientY: e.clientY,\n                ratioX: 0,\n                ratioY: 0,\n            });\n        }).on(\"pinchEnd\", () => {\n            this._tempRect = null;\n        });\n\n        addEvent(wrapperElement, \"scroll\", this.onScroll);\n\n        if (options.useResizeObserver) {\n            const observer = new ResizeObserver(() => {\n                this.resize();\n            });\n\n            observer.observe(this.viewportElement);\n            observer.observe(this.containerElement);\n\n\n            this._onDestroys.push(() => {\n                observer.disconnect();\n            });\n        } else {\n            addEvent(window, \"resize\", this.resize);\n\n            this._onDestroys.push(() => {\n                removeEvent(window, \"resize\", this.resize);\n            })\n        }\n\n        if (options.useWheelPinch || options.useWheelScroll) {\n            addEvent(containerElement, \"wheel\", this.onWheel, {\n                passive: false,\n            });\n        }\n        if (options.useGesture) {\n            addEvent(containerElement, \"gesturestart\", this.onGestureStart, {\n                passive: false,\n            });\n            addEvent(containerElement, \"gesturechange\", this.onGestureChange, {\n                passive: false,\n            });\n        }\n        this.resize();\n    }\n    private render() {\n        const {\n            offsetX,\n            offsetY,\n            zoom = DEFAULT_OPTIONS.zoom,\n            translateZ = 0,\n        } = this;\n        const {\n            useTransform = DEFAULT_OPTIONS.useTransform,\n        } = this.options;\n        const nextOffsetX = -offsetX * zoom;\n        const nextOffsetY = -offsetY * zoom;\n\n        this.scrollAreaElement.style.cssText\n            = `width:calc(100% + ${this.getScrollAreaWidth()}px);`\n            + `height:calc(100% + ${this.getScrollAreaHeight()}px);`;\n\n        const viewportStyle = this.viewportElement.style;\n\n        if (useTransform === false) {\n            viewportStyle.cssText += `position: relative; top: ${nextOffsetY}px; left: ${nextOffsetX}px;`;\n        } else {\n            viewportStyle.cssText += `transform-origin: 0 0;transform:translate3d(${nextOffsetX}px, ${nextOffsetY}px, ${translateZ}px) scale(${zoom});`;\n        }\n        this.renderScroll();\n    }\n    private renderScroll() {\n        const {\n            containerWidth,\n            containerHeight,\n            zoom,\n        } = this;\n        const scrollLeft = this.getScrollLeft(true) * zoom;\n        const scrollTop = this.getScrollTop(true) * zoom;\n        const scrollWidth = this.getScrollWidth(true);\n        const scrollHeight = this.getScrollHeight(true);\n\n        this.horizontalScrollbar.render(\n            this.displayHorizontalScroll,\n            scrollLeft,\n            containerWidth,\n            scrollWidth,\n        );\n        this.verticalScrollbar.render(\n            this.displayVerticalScroll,\n            scrollTop,\n            containerHeight,\n            scrollHeight,\n        );\n    }\n    private move(scrollLeft: number, scrollTop: number) {\n        const wrapperElement = this.wrapperElement;\n\n        wrapperElement.scrollLeft = scrollLeft;\n        wrapperElement.scrollTop = scrollTop;\n    }\n    private onScroll = () => {\n        const { scrollLeft, scrollTop } = this.wrapperElement;\n        const {\n            zoom = DEFAULT_OPTIONS.zoom,\n        } = this;\n        const deltaX = scrollLeft - this.scrollLeft;\n        const deltaY = scrollTop - this.scrollTop;\n        const viewerScrollLeft = this.getScrollLeft();\n        const viewerScrollTop = this.getScrollTop();\n\n        if (this.isLoop) {\n            this.isLoop = false;\n        }\n        this.scrollLeft = scrollLeft;\n        this.scrollTop = scrollTop;\n        this.scrollTo(\n            viewerScrollLeft + deltaX / zoom,\n            viewerScrollTop + deltaY / zoom,\n        );\n    }\n    private onWheel = (e: WheelEvent) => {\n        const options = this.options;\n        const maxPinchWheel = options.maxPinchWheel || Infinity;\n\n        const isKeydown = e[`${this.wheelPinchKey}Key`];\n\n        if (options.useWheelPinch && isKeydown) {\n            let deltaY = e.deltaY;\n            const sign = deltaY >= 0 ? 1 : -1;\n            const distance = Math.min(maxPinchWheel, Math.abs(deltaY));\n\n\n            deltaY = sign * distance;\n            const delta = -deltaY;\n            const scale = Math.max(1 + delta * (options.wheelScale || 0.01), TINY_NUM);\n\n            clearTimeout(this._tempRectTimer);\n            this._tempRectTimer = window.setTimeout(() => {\n                this._tempRect = null;\n            }, 100);\n            this._triggerPinch({\n                distance,\n                scale,\n                rotation: 0,\n                zoom: this.zoom * scale,\n                inputEvent: e,\n                isWheel: true,\n                clientX: e.clientX,\n                clientY: e.clientY,\n                ratioX: 0,\n                ratioY: 0,\n            });\n        } else if (options.useWheelScroll) {\n            const zoom = this.zoom;\n\n            let deltaX = e.deltaX;\n            let deltaY = e.deltaY;\n\n            if (e.shiftKey && !deltaX) {\n                deltaX = deltaY;\n                deltaY = 0;\n            }\n            this.scrollBy(deltaX / zoom, deltaY / zoom);\n        } else {\n            return;\n        }\n        e.preventDefault();\n    }\n    private onGestureStart = (e: any) => {\n        this._tempScale = this.zoom;\n        this._setClientRect();\n        e.preventDefault();\n    }\n    private onGestureChange = (e: any) => {\n        e.preventDefault();\n        if (this.gesto.isFlag() || !this._tempScale) {\n            this._tempScale = 0;\n            return;\n        }\n        const scale = e.scale;\n\n        this._triggerPinch({\n            distance: 0,\n            scale,\n            rotation: e.rotation,\n            inputEvent: e,\n            isWheel: true,\n            zoom: this._tempScale * scale,\n            clientX: e.clientX,\n            clientY: e.clientY,\n            ratioX: 0,\n            ratioY: 0,\n        });\n    }\n    private onGestureEnd = () => {\n\n    }\n    private startAnimation(speed: number[]) {\n        if (!speed || (!speed[0] && !speed[1])) {\n            return;\n        }\n        const a = -0.0006;\n        const easing = x => 1 - Math.pow(1 - x, 3);\n        const duration = getDuration(speed, a);\n        const destPos = getDestPos(speed, a);\n        const startTime = Date.now();\n        let prevTime = startTime;\n\n        const next = () => {\n            const now = Date.now();\n            let t = now - startTime;\n\n            if (duration < t) {\n                t = duration;\n            }\n            const ratio = easing(t / duration);\n            const prevRatio = easing((prevTime - startTime) / duration);\n\n            prevTime = now;\n\n            this.scrollBy(\n                -destPos[0] * (ratio - prevRatio),\n                -destPos[1] * (ratio - prevRatio),\n            );\n\n            if (t >= duration) {\n                return;\n            }\n            this.timer = requestAnimationFrame(next);\n        };\n        this.timer = requestAnimationFrame(next);\n    }\n    private pauseAnimation() {\n        cancelAnimationFrame(this.timer);\n    }\n    private getScrollAreaWidth() {\n        const [min, max] = this.getRangeX(true);\n        return min || max ? this.margin * 2 : 0;\n    }\n    private getScrollAreaHeight() {\n        const [min, max] = this.getRangeY(true);\n        return min || max ? this.margin * 2 : 0;\n    }\n    private _triggerPinch(event: OnPinch) {\n        const {\n            clientX,\n            clientY,\n            zoom,\n        } = event;\n        if (this.useAutoZoom) {\n            this._zoomByClient(event.zoom, clientX, clientY);\n        }\n        if (!this._tempRect) {\n            this._setClientRect();\n        }\n        const zoomRange = this.zoomRange;\n        const {\n            left,\n            top,\n            width,\n            height,\n        } = this._tempRect;\n        const ratioX = (clientX - left) / width * 100;\n        const ratioY = (clientY - top) / height * 100;\n\n        this.trigger(\"pinch\", {\n            ...event,\n            zoom: between(zoom, zoomRange[0], zoomRange[1]),\n            ratioX,\n            ratioY,\n        });\n    }\n    private _setClientRect() {\n        const rect = this.getContainer().getBoundingClientRect();\n        this._tempRect = {\n            left: rect.left,\n            top: rect.top,\n            width: rect.width,\n            height: rect.height,\n        };\n    }\n    private _zoomByClient(zoom: number, clientX: number, clientY: number) {\n        if (!this._tempRect) {\n            this._setClientRect();\n        }\n        const {\n            left,\n            top,\n            width,\n            height,\n        } = this._tempRect;\n        const options = this.options;;\n\n        const originalZoomOffsetX = options.zoomOffsetX;\n        const originalZoomOffsetY = options.zoomOffsetY;\n\n        options.zoomOffsetX = `${(clientX - left) / width * 100}%`;\n        options.zoomOffsetY = `${(clientY - top) / height * 100}%`;\n\n        this.setZoom(zoom);\n\n        options.zoomOffsetX = originalZoomOffsetX;\n        options.zoomOffsetY = originalZoomOffsetY;\n    }\n    private _scrollTo(type: \"horizontal\" | \"vertical\", coord: number) {\n        const names = NAMES[type];\n        const {\n            zoom = DEFAULT_OPTIONS.zoom,\n            margin = DEFAULT_OPTIONS.margin,\n            threshold = DEFAULT_OPTIONS.threshold,\n        } = this;\n        const prevScrollPos = this[`scroll${names.pos}`];\n        const [minCoord, maxCoord] = this[`getRange${names.coord}`](true, true);\n\n        let scrollPos = Math.round(prevScrollPos);\n\n        const scrollAreaSize = this[`getScrollArea${names.size}`]();\n        const zoomCoord = coord * zoom;\n\n        if (minCoord === maxCoord) {\n            scrollPos = minCoord;\n            coord = minCoord / zoom;\n        } else if (zoomCoord - threshold <= minCoord) {\n            const minThreshold = Math.max(0, zoomCoord - minCoord);\n\n            scrollPos = minThreshold;\n            coord = (minCoord + minThreshold) / zoom;\n        } else if (zoomCoord + threshold >= maxCoord) {\n            const maxThreshold = Math.max(0, maxCoord - zoomCoord);\n\n            scrollPos = scrollAreaSize - maxThreshold;\n            coord = (maxCoord - maxThreshold) / zoom;\n        } else if (scrollPos < threshold) {\n            scrollPos += margin;\n        } else if (scrollPos > scrollAreaSize - threshold) {\n            scrollPos -= margin;\n        }\n\n        scrollPos = Math.round(scrollPos);\n\n        this[`scroll${names.pos}`] = scrollPos;\n        this[`offset${names.coord}`] = Math.round(coord - scrollPos / zoom);\n    }\n    private _getRangeCoord(type: \"vertical\" | \"horizontal\", isZoom?: boolean, isReal?: boolean) {\n        const {\n            margin = DEFAULT_OPTIONS.margin,\n            zoom = DEFAULT_OPTIONS.zoom,\n            threshold,\n        } = this;\n        const names = NAMES[type];\n        const rangeCoord = checkDefault(this[`range${names.coord}`], DEFAULT_OPTIONS[`range${names.coord}`]);\n        const rangeOffsetCoord = checkDefault(this[`rangeOffset${names.coord}`], DEFAULT_OPTIONS[`rangeOffset${names.coord}`]);\n        const range = getRange(\n            this[`getScroll${names.pos}`](),\n            margin,\n            rangeCoord,\n            threshold,\n            isReal,\n        );\n\n        if (!isZoom) {\n            return [range[0] + rangeOffsetCoord[0], range[1] + rangeOffsetCoord[1]];\n        }\n        return [\n            range[0] * zoom + rangeOffsetCoord[0],\n            Math.max(this[`viewport${names.size}`] * zoom - this[`container${names.size}`], range[1] * zoom + rangeOffsetCoord[1]),\n        ];\n    }\n    private _emitScrollEvent(scrollLeft: number, scrollTop: number) {\n        const prevScrollLeft = this._asLeft;\n        const prevScrollTop = this._asTop;\n\n        if (prevScrollLeft === scrollLeft && prevScrollTop === scrollTop) {\n            return;\n        }\n        this._asLeft = scrollLeft;\n        this._asTop = scrollTop;\n\n        /**\n         * The `scroll` event fires when the document view or an element has been scrolled.\n         * @memberof InfiniteViewer\n         * @event scroll\n         * @param {InfiniteViewer.OnScroll} - Parameters for the scroll event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         * ).on(\"scroll\", () => {\n         *   console.log(viewer.getScrollLeft(), viewer.getScrollTop());\n         * });\n         */\n         this.trigger(\"scroll\", {\n            scrollLeft,\n            scrollTop,\n        });\n    }\n}\n\ninterface InfiniteViewer extends InfiniteViewerProperties { }\n\nexport default InfiniteViewer;\n","import InfiniteViewerManager from \"./InfiniteViewerManager\";\n\nexport default class InfiniteViewer extends InfiniteViewerManager {}\n"],"names":["agent","getAgent","IS_SAFARI","browser","name","PREFIX","WRAPPER_CLASS_NAME","SCROLL_AREA_CLASS_NAME","SCROLL_BAR_CLASS_NAME","HORIZONTAL_SCROLL_BAR_CLASS_NAME","VERTICAL_SCROLL_BAR_CLASS_NAME","SCROLL_THUMB_CLASS_NAME","injector","styled","prefixCSS","DEFAULT_OPTIONS","margin","threshold","zoom","rangeX","Infinity","rangeY","rangeOffsetX","rangeOffsetY","wrapperElement","scrollAreaElement","horizontalScrollElement","verticalScrollElement","usePinch","useAutoZoom","useMouseDrag","pinchThreshold","cspNonce","maxPinchWheel","wheelScale","displayHorizontalScroll","displayVerticalScroll","useTransform","useWheelPinch","zoomRange","wheelPinchKey","useWheelScroll","zoomOffsetX","zoomOffsetY","translateZ","useGesture","useResizeObserver","NAMES","horizontal","pos","coord","size","vertical","CLASS_NAME","className","PROPERTIES","OPTIONS","__spreadArray","EVENTS","METHODS","TINY_NUM","measureSpeed","e","deltaX","deltaY","datas","time","Date","now","prevSpeed","speed","dt","getDuration","a","normalSpeed","Math","sqrt","abs","getDestPos","duration","v","getRange","range","isReal","min","isFinite","floor","max","ceil","checkDefault","value","defaultValue","__extends","type","container","_super","_this","delta","isHorizontal","preventDefault","trigger","thumbElement","barElement","document","createElement","insertBefore","isAppend","querySelector","addClass","gesto","Gesto","window","on","target","inputEvent","isThumb","setTimeout","requestAnimationFrame","thumbRect","getBoundingClientRect","pos1","thumbSize","pos2","clientPos","scrollSize","scrollBy","stopPropagation","addEvent","onWheel","passive","ratio","isDisplay","display","_a","dirName1","sizeName","style","cssText","removeEvent","off","EventEmitter","containerElement","viewportElement","options","containerWidth","containerHeight","_b","viewportWidth","viewportHeight","render","scrollLeft","scrollTop","viewerScrollLeft","getScrollLeft","viewerScrollTop","getScrollTop","isLoop","scrollTo","isKeydown","sign","distance","scale","clearTimeout","_tempRectTimer","_tempRect","_triggerPinch","rotation","isWheel","clientX","clientY","ratioX","ratioY","shiftKey","_tempScale","_setClientRect","isFlag","init","unset","verticalScrollbar","destroy","horizontalScrollbar","injectResult","_onDestroys","forEach","callback","onScroll","onGestureStart","onGestureChange","onGestureEnd","isAbsolute","offsetY","getRangeY","offsetX","getRangeX","isZoom","resize","left","top","x","y","prevScrollLeft","prevScrollTop","_scrollTo","nextScrollAbsoluteLeft","nextScrollAbsoluteTop","_emitScrollEvent","round","move","requestScrollLeft","requestScrollTop","isSetter","prevZoom","_c","_d","nextZoom","between","nextScrollLeft","nextScrollTop","zoomX","convertUnitSize","zoomY","centerX","centerY","nextCenterX","nextCenterY","_getRangeCoord","firstChild","ScrollBar","inject","nonce","body","events","stop","isMouseEvent","pauseAnimation","dragFlag","result","startEvent","isPinch","movement","isDrag","isDouble","startAnimation","startZoom","observer_1","ResizeObserver","observe","push","disconnect","nextOffsetX","nextOffsetY","getScrollAreaWidth","getScrollAreaHeight","viewportStyle","renderScroll","scrollWidth","getScrollWidth","scrollHeight","getScrollHeight","easing","pow","destPos","startTime","prevTime","next","t","prevRatio","timer","cancelAnimationFrame","event","_zoomByClient","width","height","rect","getContainer","originalZoomOffsetX","originalZoomOffsetY","setZoom","names","prevScrollPos","_e","minCoord","maxCoord","scrollPos","scrollAreaSize","zoomCoord","minThreshold","maxThreshold","rangeCoord","rangeOffsetCoord","_asLeft","_asTop","InfiniteViewer","Properties","prototype","property","attributes","enumerable","configurable","get","setter","camelize","set","Object","defineProperty","InfiniteViewerManager"],"mappings":"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"}