{"version":3,"file":"infinite-viewer.esm.js","sources":["../src/consts.ts","../src/utils.ts","../src/ScrollBar.ts","../src/InfiniteViewerManager.tsx","../src/InfiniteViewer.tsx"],"sourcesContent":["import styled from \"css-styled\";\nimport { InfiniteViewerOptions } from \"./types\";\nimport getAgent from \"@egjs/agent\";\nimport { prefixCSS } from \"framework-utils\";\n\nexport const agent = getAgent();\nexport const IS_SAFARI = agent.browser.name === \"safari\";\n\nexport const PREFIX = \"infinite-viewer-\";\n\nexport const WRAPPER_CLASS_NAME = `${PREFIX}wrapper`;\nexport const SCROLL_AREA_CLASS_NAME = `${PREFIX}scroll-area`;\n\nexport const SCROLL_BAR_CLASS_NAME = `${PREFIX}scroll-bar`;\nexport const HORIZONTAL_SCROLL_BAR_CLASS_NAME = `${PREFIX}horizontal-scroll-bar`;\nexport const VERTICAL_SCROLL_BAR_CLASS_NAME = `${PREFIX}vertical-scroll-bar`;\nexport const SCROLL_THUMB_CLASS_NAME = `${PREFIX}scroll-thumb`;\n\nexport const injector = styled(prefixCSS(PREFIX, `\n{\n    position: relative;\n    overscroll-behavior: none;\n}\n.wrapper {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    scrollbar-width: none;\n    top: 0;\n    left: 0;\n    will-change: scroll-position;\n}\n.restrict-wrapper {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n}\n.wrapper::-webkit-scrollbar {\n    display: none;\n}\n.scroll-area {\n    position:absolute;\n    top:0;\n    left:0;\n    transform-origin: 0 0;\n}\n.scroll-bar {\n    position:absolute;\n    width: 10px;\n    height: 10px;\n    box-sizing: border-box;\n    right: 0;\n    bottom: 0;\n    overflow: hidden;\n}\n.horizontal-scroll-bar {\n    width: calc(100% - 20px);\n    right: 10px;\n    height: 14px;\n}\n.vertical-scroll-bar {\n    height: calc(100% - 20px);\n    bottom: 10px;\n    width: 14px;\n}\n.scroll-thumb {\n    position:relative;\n    opacity: 0.7;\n    background: #333;\n    border-radius: 3px;\n    left: 0px;\n    top: 0px;\n    z-index: 10;\n    width: 6px;\n    height: 6px;\n    transition: all ease 0.2s;\n    opacity: 0;\n}\n.scroll-bar:hover .scroll-thumb {\n    border-radius: 5px;\n    opacity: 1;\n}\n.horizontal-scroll-bar .scroll-thumb {\n    margin: 4px 0px;\n    transition-property: opacity, margin, height, border-radius;\n}\n.vertical-scroll-bar .scroll-thumb {\n    margin: 0px 4px;\n    transition-property: opacity, margin, width, border-radius;\n}\n.horizontal-scroll-bar:hover .scroll-thumb {\n    height: 10px;\n    margin: 2px 0px;\n}\n.vertical-scroll-bar:hover .scroll-thumb {\n    width: 10px;\n    margin: 0px 2px;\n}\n`));\n\nexport const DEFAULT_OPTIONS = {\n    margin: 500,\n    threshold: 100,\n    zoom: 1,\n    zoomX: 1,\n    zoomY: 1,\n    rangeX: [-Infinity, Infinity],\n    rangeY: [-Infinity, Infinity],\n    rangeOffsetX: [0, 0],\n    rangeOffsetY: [0, 0],\n    wrapperElement: null,\n    scrollAreaElement: null,\n    horizontalScrollElement: null,\n    verticalScrollElement: null,\n    usePinch: false,\n    useAutoZoom: false,\n    useMouseDrag: false,\n    pinchThreshold: 30,\n    cspNonce: \"\",\n    maxPinchWheel: Infinity,\n    wheelScale: 0.01,\n    displayHorizontalScroll: true,\n    displayVerticalScroll: true,\n    useTransform: true,\n    useWheelPinch: true,\n    zoomRange: [0.001, Infinity],\n    wheelPinchKey: \"ctrl\" as const,\n    useWheelScroll: IS_SAFARI,\n    zoomOffsetX: \"50%\",\n    zoomOffsetY: \"50%\",\n    translateZ: 0,\n    useGesture: true,\n    useResizeObserver: false,\n    pinchDirection: \"all\" as const,\n    preventWheelClick: true,\n    useBounceScrollBar: false,\n    useOverflowScroll: false,\n};\n\nexport const DEFAULT_EASING = (x: number) => 1 - Math.pow(1 - x, 3);\nexport const NAMES = {\n    horizontal: {\n        pos: \"Left\",\n        coord: \"X\",\n        size: \"Width\",\n    },\n    vertical: {\n        pos: \"Top\",\n        coord: \"Y\",\n        size: \"Height\",\n    },\n} as const;\n/**\n * @memberof InfiniteViewer\n */\nexport const CLASS_NAME = injector.className;\n\n/**\n * @memberof InfiniteViewer\n */\nexport const PROPERTIES = [\n    \"margin\",\n    \"threshold\",\n    \"zoomOffsetX\",\n    \"zoomOffsetY\",\n    \"zoom\",\n    \"zoomX\",\n    \"zoomY\",\n    \"rangeX\",\n    \"rangeY\",\n    \"rangeOffsetX\",\n    \"rangeOffsetY\",\n    \"usePinch\",\n    \"useMouseDrag\",\n    \"pinchThreshold\",\n    \"maxPinchWheel\",\n    \"wheelScale\",\n    \"displayVerticalScroll\",\n    \"displayHorizontalScroll\",\n    \"translateZ\",\n    \"useAutoZoom\",\n    \"wheelPinchKey\",\n    \"zoomRange\",\n    \"pinchDirection\",\n    \"useOverflowScroll\",\n] as const;\n\n/**\n * @memberof InfiniteViewer\n */\nexport const OPTIONS = [\n    // ignore target, container,\n    ...PROPERTIES,\n    \"preventWheelClick\",\n    \"useWheelPinch\",\n    \"useWheelScroll\",\n    \"useGesture\",\n    \"cspNonce\",\n    \"wrapperElement\",\n    \"scrollAreaElement\",\n    \"verticalScrollElement\",\n    \"horizontalScrollElement\",\n    \"useResizeObserver\",\n    \"wheelContainer\",\n    \"useBounceScrollBar\",\n] as const;\n\n/**\n * @memberof InfiniteViewer\n */\nexport const EVENTS = [\n    \"scroll\",\n    \"abortPinch\",\n    \"dragStart\",\n    \"dragEnd\",\n    \"pinchStart\",\n    \"pinch\",\n] as const;\n\n/**\n * @memberof InfiniteViewer\n */\nexport const METHODS = [\n    \"getScrollLeft\",\n    \"getScrollTop\",\n    \"getScrollWidth\",\n    \"getScrollHeight\",\n    \"getContainerWidth\",\n    \"getContainerHeight\",\n    \"getViewportWidth\",\n    \"getViewportHeight\",\n    \"getViewportScrollWidth\",\n    \"getViewportScrollHeight\",\n    \"scrollTo\",\n    \"scrollBy\",\n    \"zoomBy\",\n    \"scrollCenter\",\n    \"getContainer\",\n    \"getViewport\",\n    \"getWrapper\",\n    \"setZoom\",\n    \"getRangeX\",\n    \"getRangeY\",\n    \"resize\",\n    \"getZoom\",\n    \"getZoomX\",\n    \"getZoomY\",\n    \"getWheelContainer\",\n    \"setTo\",\n    \"setBy\",\n] as const;\n\nexport const TINY_NUM = 0.000001;\n","import { OnDrag } from \"gesto\";\nimport { TINY_NUM } from \"./consts\";\nimport { AnimationOptions } from \"./types\";\n\nexport function measureSpeed(e: OnDrag) {\n    const { deltaX, deltaY, datas } = e;\n    const time = Date.now();\n    const prevSpeed = datas.speed;\n\n    if (!prevSpeed) {\n        datas.speed = [0, 0];\n        datas.time = time;\n        return;\n    }\n    const dt = time - datas.time;\n    datas.speed = [prevSpeed[0] / 2 + deltaX / dt, prevSpeed[1] / 2 + deltaY / dt];\n}\n\nexport function getDuration(speed: number[], a: number) {\n    const normalSpeed = Math.sqrt(speed[0] * speed[0] + speed[1] * speed[1]);\n\n    return Math.abs(normalSpeed / a);\n}\nexport function getDestPos(speed: number[], a: number) {\n    const duration = getDuration(speed, a);\n\n    return [\n        -speed[0] / 2 * duration,\n        -speed[1] / 2 * duration,\n    ];\n}\nexport function minmax(value: number, min: number, max: number) {\n    return Math.min(max, Math.max(min, value));\n}\n\nexport function abs(v: number) {\n    return Math.abs(v);\n}\n\nexport function getRange(\n    pos: number,\n    margin: number,\n    range: number[],\n    threshold: number,\n    isReal: boolean,\n) {\n    const min = isReal || isFinite(range[0])\n        ? range[0]\n        : Math.min(-1, Math.floor(pos / margin)) * margin - threshold;\n    const max = isReal || isFinite(range[1])\n        ? range[1]\n        : Math.max(1, Math.ceil(pos / margin)) * margin + threshold;\n\n    return [min, max];\n}\n\nexport function throttle(value: number) {\n    return Math.round(value / TINY_NUM) * TINY_NUM;\n}\n\n\nexport function checkDefault<T>(value: T | undefined | null, defaultValue: T): T {\n    return value != null ? value : defaultValue;\n}\n\n\n\nexport function startAnimation(\n    callback: (ratioDist: number) => void,\n    timerCallback: (next: () => void) => void,\n    options: AnimationOptions,\n) {\n    const duration = options.duration;\n    const easing = options.easing || ((x: number) => 1 - Math.pow(1 - x, 3));\n    const startTime = Date.now();\n    let prevTime = startTime;\n\n    const next = () => {\n        const now = Date.now();\n        let t = now - startTime;\n\n        if (duration < t) {\n            t = duration;\n        }\n        const ratio = easing(t / duration);\n        const prevRatio = easing((prevTime - startTime) / duration);\n\n        prevTime = now;\n\n        callback(ratio - prevRatio);\n\n        if (t >= duration) {\n            return;\n        }\n        timerCallback(next);\n    };\n    timerCallback(next);\n}\n","import Gesto, { OnDrag, OnDragStart } from \"gesto\";\nimport {\n    SCROLL_BAR_CLASS_NAME, SCROLL_THUMB_CLASS_NAME,\n    HORIZONTAL_SCROLL_BAR_CLASS_NAME, VERTICAL_SCROLL_BAR_CLASS_NAME\n} from \"./consts\";\nimport { addClass, removeEvent, addEvent, throttle, getDocument, getWindow } from \"@daybrush/utils\";\nimport EventEmitter from \"@scena/event-emitter\";\nimport { abs } from \"./utils\";\n\nexport default class ScrollBar extends EventEmitter {\n    public isAppend: boolean = false;\n    public thumbElement!: HTMLElement;\n    public barElement!: HTMLElement;\n    protected gesto!: Gesto;\n    protected size: number = 0;\n    protected scrollSize: number = 0;\n    protected isHorizontal = false;\n\n    constructor(\n        containerElement: HTMLElement,\n        public type: \"horizontal\" | \"vertical\",\n        container?: HTMLElement,\n    ) {\n        super();\n        const isHorizontal = type === \"horizontal\";\n        const doc = getDocument(containerElement);\n\n        let thumbElement: HTMLElement;\n        let barElement: HTMLElement = container;\n\n        if (!container) {\n            barElement = doc.createElement(\"div\");\n            thumbElement = doc.createElement(\"div\");\n\n            barElement.insertBefore(thumbElement, null);\n            this.isAppend = true;\n        } else {\n            thumbElement = container.querySelector(`.${SCROLL_THUMB_CLASS_NAME}`);\n        }\n        addClass(\n            barElement,\n            isHorizontal ? HORIZONTAL_SCROLL_BAR_CLASS_NAME\n                : VERTICAL_SCROLL_BAR_CLASS_NAME,\n        );\n        addClass(barElement, SCROLL_BAR_CLASS_NAME);\n        addClass(thumbElement, SCROLL_THUMB_CLASS_NAME);\n\n        this.thumbElement = thumbElement;\n        this.barElement = barElement;\n        this.isHorizontal = isHorizontal;\n        this.gesto = new Gesto(barElement, {\n            container: getWindow(doc),\n        }).on(\n            \"dragStart\",\n            e => this._onDragStart(e),\n        ).on(\n            \"drag\",\n            e => this._onDrag(e),\n        );\n        addEvent(this.barElement, \"wheel\", this._onWheel, {\n            passive: false,\n        });\n    }\n    public scrollBy(delta: number, isAbsolute?: boolean) {\n        const ratio = delta / this.size;\n\n        this.trigger(\"scroll\", {\n            delta: isAbsolute ? delta : this.scrollSize * ratio,\n        });\n    }\n    public render(\n        isDisplay: boolean,\n        pos: number,\n        size: number,\n        scrollSize: number,\n    ) {\n        this.size = size;\n        this.scrollSize = scrollSize;\n\n        const opacity = isDisplay && (throttle(scrollSize - size, 0.001) > 0) ? 1 : 0;\n        const [dirName1, sizeName] = this.isHorizontal ? [\"X\", \"width\"] : [\"Y\", \"height\"];\n        const sizeP = size / scrollSize * 100;\n        const posP = Math.max(0, pos) / scrollSize * 100;\n\n        this.thumbElement.style.cssText\n            += `${sizeName}: ${sizeP}%;opacity: ${opacity};`\n            + `transform: translate${dirName1}(${100 / sizeP * posP}%)`;\n    }\n    public destroy() {\n        removeEvent(this.barElement, \"wheel\", this._onWheel);\n        this.gesto.off();\n        this.off();\n    }\n    protected _onDragStart = (e: OnDragStart<Gesto>) => {\n        const isHorizontal = this.isHorizontal;\n        const target = e.inputEvent.target;\n        const datas = e.datas;\n        const isThumb = this.thumbElement === target;\n\n        if (!isThumb) {\n            setTimeout(() => {\n                requestAnimationFrame(() => {\n                    const thumbRect = this.thumbElement.getBoundingClientRect();\n                    const pos1 = thumbRect[isHorizontal ? \"left\" : \"top\"];\n                    const thumbSize = thumbRect[isHorizontal ? \"width\" : \"height\"];\n                    const pos2 = pos1 + thumbSize;\n                    const clientPos = e[isHorizontal ? \"clientX\" : \"clientY\"];\n\n                    if (pos1 <= clientPos && clientPos <= pos2) {\n                        return;\n                    }\n                    const size = this.size;\n                    const delta = size * size / this.scrollSize;\n\n                    this.scrollBy(pos1 < clientPos ? delta : -delta);\n                });\n            }, 100);\n        }\n        datas.isThumb = isThumb;\n        e.inputEvent.stopPropagation();\n        e.inputEvent.preventDefault();\n    }\n    protected _onDrag = (e: OnDrag) => {\n        if (!e.datas.isThumb) {\n            return;\n        }\n        this.scrollBy(this.isHorizontal ? e.deltaX : e.deltaY);\n    };\n    protected _onWheel = (e: WheelEvent) => {\n        const delta = this.isHorizontal ? e.deltaX : e.deltaY;\n\n        if (delta) {\n            e.preventDefault();\n        }\n        this.trigger(\"scroll\", {\n            delta,\n        });\n    }\n}\n","import EventEmitter from \"@scena/event-emitter\";\nimport Gesto from \"gesto\";\nimport { InjectResult } from \"css-styled\";\nimport { Properties } from \"framework-utils\";\nimport { camelize, IObject, addEvent, removeEvent, addClass, convertUnitSize, between, isObject, isArray, isString, isNode, getDocument, getWindow } from \"@daybrush/utils\";\nimport { InfiniteViewerOptions, InfiniteViewerProperties, InfiniteViewerEvents, OnPinch, AnimationOptions, ScrollOptions, ZoomOptions, GetScollPosOptions, InnerScrollOptions, ScrollCenterOptions, SetOptions } from \"./types\";\nimport {\n    PROPERTIES, injector, CLASS_NAME, TINY_NUM,\n    DEFAULT_OPTIONS,\n    WRAPPER_CLASS_NAME, SCROLL_AREA_CLASS_NAME,\n    HORIZONTAL_SCROLL_BAR_CLASS_NAME, VERTICAL_SCROLL_BAR_CLASS_NAME, NAMES, DEFAULT_EASING,\n} from \"./consts\";\nimport { measureSpeed, getDuration, getDestPos, abs, getRange, checkDefault, startAnimation } from \"./utils\";\nimport ScrollBar from \"./ScrollBar\";\n\n@Properties(PROPERTIES as any, (prototype, property) => {\n    const attributes: IObject<any> = {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this.options[property];\n        },\n    };\n    const setter = camelize(`set ${property}`);\n    if (prototype[setter]) {\n        attributes.set = function (value) {\n            this[setter](value);\n        };\n    } else {\n        attributes.set = function (value) {\n            this.options[property] = value;\n        };\n    }\n    Object.defineProperty(prototype, property, attributes);\n})\n/**\n * @sort 1\n */\nclass InfiniteViewer extends EventEmitter<InfiniteViewerEvents> {\n    public options: InfiniteViewerOptions;\n    private injectResult!: InjectResult;\n    private wrapperElement!: HTMLElement;\n    private scrollAreaElement!: HTMLElement;\n    private horizontalScrollbar: ScrollBar;\n    private verticalScrollbar: ScrollBar;\n    private gesto!: Gesto;\n    private offsetX: number = 0;\n    private offsetY: number = 0;\n    private containerWidth: number = 0;\n    private containerHeight: number = 0;\n    private viewportWidth: number = 0;\n    private viewportHeight: number = 0;\n    private viewportScrollWidth: number = 0;\n    private viewportScrollHeight: number = 0;\n    private scrollLeft: number = 0;\n    private scrollTop: number = 0;\n    private _scrollTimer = 0;\n    private _zoomTimer = 0;\n\n    private _viewportElement: HTMLElement | null = null;\n    private _wheelContainerElement: HTMLElement | null = null;\n    private dragFlag: boolean = false;\n    private isLoop: boolean = false;\n    private _tempScale: number[] = [1, 1];\n    private _tempRect: { top: number, left: number, width: number, height: number } | null = null;\n    private _tempRectTimer: number | null = null;\n    private _onDestroys: Array<() => void> = [];\n    private _asLeft = 0;\n    private _asTop = 0;\n    /**\n     * @sort 1\n     */\n    constructor(\n        private _containerElement: HTMLElement,\n        viewportElement: HTMLElement | Partial<InfiniteViewerOptions> = {},\n        options: Partial<InfiniteViewerOptions> = {},\n    ) {\n        super();\n\n\n        if (isNode(viewportElement)) {\n            this._viewportElement = viewportElement;\n            this.options = {\n                ...DEFAULT_OPTIONS,\n                ...options,\n            };\n        } else {\n            this._viewportElement = _containerElement.children[0] as HTMLElement;\n            this.options = {\n                ...DEFAULT_OPTIONS,\n                ...viewportElement,\n            };\n        }\n        this.init();\n    }\n    /**\n     * Get Container Element\n     */\n    public getContainer(): HTMLElement {\n        return this._containerElement;\n    }\n    /**\n     * Get Wheel Container Element\n     */\n    public getWheelContainer(): HTMLElement {\n        return this._wheelContainerElement;\n    }\n    /**\n     * Get Viewport Element\n     */\n    public getViewport(): HTMLElement {\n        return this._viewportElement;\n    }\n    /**\n     * Get Wrapper Element\n     */\n    public getWrapper(): HTMLElement {\n        return this.wrapperElement;\n    }\n    /**\n     * Get Scroll Area Element\n     */\n    public geScrollArea(): HTMLElement {\n        return this.scrollAreaElement;\n    }\n    /**\n     * Destroy elements, properties, and events.\n     */\n    public destroy(): void {\n        this.off();\n        this.gesto.unset();\n        this.verticalScrollbar.destroy();\n        this.horizontalScrollbar.destroy();\n        this.injectResult.destroy();\n        const containerElement = this._containerElement;\n\n        this._onDestroys.forEach(callback => {\n            callback();\n        });\n        removeEvent(this.wrapperElement, \"scroll\", this._onScroll);\n        removeEvent(this._wheelContainerElement, \"wheel\", this.onWheel);\n        removeEvent(containerElement, \"gesturestart\", this.onGestureStart);\n        removeEvent(containerElement, \"gesturechange\", this.onGestureChange);\n        removeEvent(containerElement, \"gesturesend\", this.onGestureEnd);\n\n        this.gesto = null;\n        this.injectResult = null;\n        this._containerElement = null;\n        this._viewportElement = null;\n        this.options = null;\n    }\n    /**\n     * Gets the number of pixels that an element's content is scrolled vertically.\n     */\n    public getScrollTop(options: GetScollPosOptions | boolean = {}) {\n        let range = false;\n        let absolute = false;\n\n        if (isObject(options)) {\n            range = options.range;\n            absolute = options.absolute;\n        } else {\n            range = options;\n        }\n        const zoom = this.zoomY;\n        const pos = this.scrollTop / zoom + this.offsetY\n            + (range ? abs(this.getRangeY()[0]) : 0);\n\n        return absolute ? pos * zoom : pos;\n    }\n    /**\n     * Gets the number of pixels that an element's content is scrolled vertically.\n     */\n    public getScrollLeft(options: GetScollPosOptions | boolean = {}) {\n        let range = false;\n        let absolute = false;\n\n        if (isObject(options)) {\n            range = options.range;\n            absolute = options.absolute;\n        } else {\n            range = options;\n        }\n        const zoom = this.zoomX;\n        const pos = this.scrollLeft / zoom + this.offsetX\n            + (range ? abs(this.getRangeX()[0]) : 0);\n\n        return absolute ? pos * zoom : pos;\n    }\n    /**\n     * Gets measurement of the width of an element's content with overflow\n     */\n    public getScrollWidth(isZoom?: boolean) {\n        const range = this._getScrollRangeX();\n        const zoom = this.zoomX;\n        const size = this.containerWidth / zoom + abs(range[0]) + range[1];\n\n        return isZoom ? size : size * zoom;\n    }\n    /**\n     * Gets measurement of the height of an element's content with overflow\n     */\n    public getScrollHeight(isZoom?: boolean) {\n        const range = this._getScrollRangeY();\n        const zoom = this.zoomY;\n        const size = this.containerHeight / zoom + abs(range[0]) + range[1];\n\n        return isZoom ? size : size * zoom;\n    }\n\n    /**\n     * Scroll the element to the center\n     */\n    public scrollCenter(options: ScrollCenterOptions = {}) {\n        this.resize();\n\n        const zoomX = this.zoomX;\n        const zoomY = this.zoomY;\n\n        let left = -(this.containerWidth / zoomX - this.viewportWidth) / 2;\n        let top = -(this.containerHeight / zoomY - this.viewportHeight) / 2;\n\n        if (options.absolute) {\n            left *= zoomX;\n            top *= zoomY;\n        }\n        if (options.horizontal === false) {\n            left = this.getScrollLeft();\n        }\n        if (options.vertical === false) {\n            top = this.getScrollTop();\n        }\n\n        return this.scrollTo(left, top, options);\n    }\n    /**\n     * Update Viewer Sizes\n     * @method\n     */\n    public resize = () => {\n        const {\n            offsetWidth: containerWidth,\n            offsetHeight: containerHeight,\n        } = this._containerElement;\n        const {\n            offsetWidth: viewportWidth,\n            offsetHeight: viewportHeight,\n            scrollWidth: viewportScrollWidth,\n            scrollHeight: viewportScrollHeight,\n        } = this._viewportElement;\n\n        this.containerWidth = containerWidth;\n        this.containerHeight = containerHeight;\n        this.viewportWidth = viewportWidth;\n        this.viewportHeight = viewportHeight;\n        this.viewportScrollWidth = Math.max(viewportWidth, viewportScrollWidth);\n        this.viewportScrollHeight = Math.max(viewportHeight, viewportScrollHeight);\n\n        this.render();\n        this._scrollBy(0, 0);\n    }\n    /**\n     * Move to that position or zoom.\n     * @since 0.25.0\n     */\n    public setTo(options: SetOptions) {\n        const {\n            x = this.getScrollLeft(),\n            y = this.getScrollTop(),\n            zoom = [this.getZoomX(), this.getZoomY()],\n            duration,\n        } = options;\n        const {\n            zoomX: prevZoomX,\n            zoomY: prevZoomY,\n            zoomRange,\n        } = this;\n        let {\n            zoomOffsetX = DEFAULT_OPTIONS.zoomOffsetX,\n            zoomOffsetY = DEFAULT_OPTIONS.zoomOffsetY,\n        } = this;\n        if (\"zoomOffsetX\" in options) {\n            zoomOffsetX = options.zoomOffsetX;\n        }\n        if (\"zoomOffsetY\" in options) {\n            zoomOffsetY = options.zoomOffsetY;\n        }\n\n        const [zoomX, zoomY] = isArray(zoom) ? zoom : [zoom, zoom];\n        const nextZoomX = between(zoomX, zoomRange[0], zoomRange[1]);\n        const nextZoomY = between(zoomY, zoomRange[0], zoomRange[1]);\n        const zoomXPos = convertUnitSize(`${zoomOffsetX}`, this.viewportWidth) * (1 / prevZoomX - 1 / nextZoomX);\n        const zoomYPos = convertUnitSize(`${zoomOffsetY}`, this.viewportHeight) * (1 / prevZoomY - 1 / nextZoomY);\n\n        this.scrollTo(x - zoomXPos, y - zoomYPos, {\n            duration,\n        });\n        this.setZoom(zoom, {\n            zoomOffsetX,\n            zoomOffsetY,\n            duration,\n            zoomBase: \"fixed\",\n        });\n    }\n    /**\n     * Move by the position or zoom delta value.\n     * @since 0.25.0\n     */\n    public setBy(options: SetOptions) {\n        const {\n            x = 0,\n            y = 0,\n            zoom = [0, 0],\n        } = options;\n        const [zoomX, zoomY] = isArray(zoom) ? zoom : [zoom, zoom];\n\n        this.setTo({\n            ...options,\n            x: this.getScrollLeft() + x,\n            y: this.getScrollTop() + y,\n            zoom: [this.zoomX + zoomX, this.zoomY + zoomY],\n        });\n    }\n    /**\n     * Scrolls the container by the given amount.\n     */\n    public scrollBy(deltaX: number, deltaY: number, options?: ScrollOptions) {\n        this._pauseScrollAnimation();\n        if (!options || !options.duration) {\n            let scrollLeft = this.getScrollLeft();\n            let scrollTop = this.getScrollTop();\n\n            if (options?.absolute) {\n                scrollLeft *= this.zoomX;\n                scrollTop *= this.zoomY;\n            }\n            return this._scrollTo(scrollLeft + deltaX, scrollTop + deltaY, options);\n        } else {\n            this._startScrollAnimation([deltaX, deltaY], options);\n            return true;\n        }\n    }\n    /**\n     * Scrolls the container to set of coordinates.\n     * @param scrollLeft\n     * @param scrollTop\n     */\n    public scrollTo(x: number, y: number, options?: ScrollOptions) {\n        this._pauseScrollAnimation();\n        if (!options || !options.duration) {\n            return this._scrollTo(x, y, options);\n        } else {\n            let scrollLeft = this.getScrollLeft();\n            let scrollTop = this.getScrollTop();\n\n            if (options?.absolute) {\n                scrollLeft *= this.zoomX;\n                scrollTop *= this.zoomY;\n            }\n            return this.scrollBy(x - scrollLeft, y - scrollTop, options);\n        }\n    }\n    /**\n     * Set viewer zoom by the given amount\n     */\n    public zoomBy(deltaZoom: number | number[], options?: ZoomOptions) {\n        this._pauseZoomAnimation();\n        const [deltaX, deltaY] = isArray(deltaZoom)\n        ? deltaZoom\n        : [deltaZoom, deltaZoom];\n\n        if (!options || !options.duration) {\n            this._setZoom([\n                this.zoomX + deltaX,\n                this.zoomY + deltaY,\n            ], options);\n        } else {\n            this._startZoomAnimation([deltaX, deltaY], options);\n        }\n    }\n    /**\n     * Set viewer zoom\n     */\n    public setZoom(zoom: number | number[], options?: ZoomOptions) {\n        this._pauseZoomAnimation();\n\n        if (!options || !options.duration) {\n            this._setZoom(zoom, options);\n        } else {\n            const [zoomX, zoomY] = isArray(zoom)\n            ? zoom\n            : [zoom, zoom];\n            this._startZoomAnimation([\n                zoomX - this.zoomX,\n                zoomY - this.zoomY,\n            ], options);\n        }\n    }\n    public getViewportWidth() {\n        return this.viewportWidth;\n    }\n    public getViewportHeight() {\n        return this.viewportWidth;\n    }\n    public getViewportScrollWidth() {\n        return this.viewportScrollWidth;\n    }\n    public getViewportScrollHeight() {\n        return this.viewportScrollHeight;\n    }\n    public getContainerWidth() {\n        return this.containerWidth;\n    }\n    public getContainerHeight() {\n        return this.containerHeight;\n    }\n    /**\n     * Get viewer zoom\n     */\n    public getZoom() {\n        return (this.zoomX + this.zoomY) / 2;\n    }\n    /**\n     * Get viewer zoomX\n     * @since 0.20.0\n     */\n    public getZoomX() {\n        return this.zoomX;\n    }\n    /**\n     * Get viewer zoom\n     * @since 0.20.0\n     */\n    public getZoomY() {\n        return this.zoomY;\n    }\n    /**\n     * get x ranges\n     */\n    public getRangeX(isZoom?: boolean, isReal?: boolean) {\n        return this._getRangeCoord(\"horizontal\", isZoom, isReal);\n    }\n    /**\n     * get y ranges\n     */\n    public getRangeY(isZoom?: boolean, isReal?: boolean) {\n        return this._getRangeCoord(\"vertical\", isZoom, isReal);\n    }\n\n    private init() {\n        // infinite-viewer(container)\n        // viewportㅌ\n        // children\n        const containerElement = this._containerElement;\n        const options = this.options;\n        const doc = getDocument(containerElement);\n        const win = getWindow(containerElement);\n\n        // vanilla\n        let wrapperElement = options.wrapperElement\n            || containerElement.querySelector(`.${WRAPPER_CLASS_NAME}`);\n        let scrollAreaElement = options.scrollAreaElement\n            || containerElement.querySelector(`.${SCROLL_AREA_CLASS_NAME}`);\n        const horizontalScrollElement = options.horizontalScrollElement\n            || containerElement.querySelector(`.${HORIZONTAL_SCROLL_BAR_CLASS_NAME}`);\n        const verticalScrollElement = options.verticalScrollElement\n            || containerElement.querySelector(`.${VERTICAL_SCROLL_BAR_CLASS_NAME}`);\n\n        if (!wrapperElement) {\n            wrapperElement = doc.createElement(\"div\");\n            wrapperElement.insertBefore(this._viewportElement, null);\n            containerElement.insertBefore(wrapperElement, null);\n        }\n        this.wrapperElement = wrapperElement;\n\n        if (!scrollAreaElement) {\n            scrollAreaElement = doc.createElement(\"div\");\n\n            wrapperElement.insertBefore(scrollAreaElement, wrapperElement.firstChild);\n        }\n        this.scrollAreaElement = scrollAreaElement;\n\n        addClass(containerElement, CLASS_NAME);\n        addClass(wrapperElement, WRAPPER_CLASS_NAME);\n        // addClass(restrictElement, RESTRICT_WRAPPER_CLASS_NAME);\n        addClass(scrollAreaElement, SCROLL_AREA_CLASS_NAME);\n\n        const horizontalBar = new ScrollBar(\n            containerElement,\n            \"horizontal\",\n            horizontalScrollElement,\n        );\n        const verticalBar = new ScrollBar(\n            containerElement,\n            \"vertical\",\n            verticalScrollElement,\n        );\n\n\n        this.horizontalScrollbar = horizontalBar;\n        this.verticalScrollbar = verticalBar;\n        horizontalBar.on(\"scroll\", e => {\n            this.scrollBy(e.delta / this.zoomX, 0);\n        });\n        verticalBar.on(\"scroll\", e => {\n            this.scrollBy(0, e.delta / this.zoomY);\n        });\n\n        if (horizontalBar.isAppend) {\n            containerElement.insertBefore(horizontalBar.barElement, null);\n        }\n        if (verticalBar.isAppend) {\n            containerElement.insertBefore(verticalBar.barElement, null);\n        }\n        this.injectResult = injector.inject(containerElement, {\n            nonce: this.options.cspNonce,\n        });\n\n        const wheelContainerOption = options.wheelContainer;\n        let wheelContainerElement: HTMLElement | null = null;\n\n        if (wheelContainerOption) {\n            if (isString(wheelContainerOption)) {\n                wheelContainerElement = doc.querySelector(wheelContainerOption);\n            } else if (isNode(wheelContainerOption)) {\n                wheelContainerElement = wheelContainerOption;\n            } else if (\"value\" in wheelContainerOption || \"current\" in wheelContainerOption) {\n                wheelContainerElement = wheelContainerOption.current || wheelContainerOption.value;\n            }\n        }\n        wheelContainerElement ||= containerElement;\n        this._wheelContainerElement = wheelContainerElement;\n\n        /**\n         * the `dragStart` event fires when `touchstart` does occur.\n         * @memberof InfiniteViewer\n         * @event dragStart\n         * @param {InfiniteViewer.OnDragStart} - Parameters for the `dragStart` event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         * ).on(\"dragStart\", e => {\n         *   console.log(e.inputEvent);\n         * });\n         */\n        /**\n         * the `drag` event fires when `touch` does occur.\n         * @memberof InfiniteViewer\n         * @event drag\n         * @param {InfiniteViewer.OnDrag} - Parameters for the `drag` event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         * ).on(\"drag\", e => {\n         *   console.log(e.inputEvent);\n         * });\n         */\n        /**\n         * the `dragEnd` event fires when `touchend` does occur.\n         * @memberof InfiniteViewer\n         * @event dragEnd\n         * @param {InfiniteViewer.OnDragEnd} - Parameters for the `dragEnd` event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         * ).on(\"dragEnd\", e => {\n         *   console.log(e.inputEvent);\n         * });\n         */\n        /**\n         * the `abortPinch` event fires when `pinch` event does not occur by dragging a certain area.\n         * @memberof InfiniteViewer\n         * @event abortPinch\n         * @param {InfiniteViewer.OnAbortPinch} - Parameters for the abortPinch event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         *   {\n         *     usePinch: true,\n         *   }\n         * ).on(\"abortPinch\", e => {\n         *   console.log(e.inputEvent);\n         * });\n         */\n        /**\n         * the `pinch` event fires when two points pinch the viewer\n         * The pinchStart and abortPinch events do not occur when pinching through the wheel.\n         * @memberof InfiniteViewer\n         * @event pinch\n         * @param {InfiniteViewer.OnPinch} - Parameters for the `pinch` event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         *   {\n         *     usePinch: true,\n         *   }\n         * ).on(\"pinch\", e => {\n         *   console.log(e.zoom, e.inputEvent);\n         * });\n         */\n        this.gesto = new Gesto(containerElement, {\n            container: getWindow(containerElement),\n            events: [\"touch\", \"mouse\"],\n            preventWheelClick: this.options.preventWheelClick ?? true,\n        }).on(\"dragStart\", e => {\n            const {\n                inputEvent,\n                stop,\n                datas,\n            } = e;\n            if (!this.useMouseDrag && e.isMouseEvent) {\n                stop();\n                return;\n            }\n            this._pauseScrollAnimation();\n            this.dragFlag = false;\n            const result = this.trigger(\"dragStart\", e);\n\n            if (result === false) {\n                stop();\n                return;\n            }\n            inputEvent.preventDefault();\n            datas.startEvent = inputEvent;\n        }).on(\"drag\", e => {\n            if (!this.options.usePinch || e.isPinch || (this.useMouseDrag && e.isMouseEvent)) {\n                this.trigger(\"drag\", {\n                    ...e,\n                    inputEvent: e.inputEvent,\n                });\n                measureSpeed(e);\n                this.scrollBy(-e.deltaX / this.zoomX, -e.deltaY / this.zoomY);\n            } else if (!this.dragFlag && e.movement > options.pinchThreshold) {\n                this.dragFlag = true;\n\n                this.trigger(\"abortPinch\", {\n                    inputEvent: e.datas.startEvent || e.inputEvent,\n                });\n            }\n        }).on(\"dragEnd\", e => {\n            this.trigger(\"dragEnd\", {\n                isDrag: e.isDrag,\n                isDouble: e.isDouble,\n                inputEvent: e.inputEvent,\n            });\n            this._startScrollAnimationBySpeed(e.datas.speed);\n        }).on(\"pinchStart\", ({ inputEvent, datas, stop }) => {\n            inputEvent.preventDefault();\n            this._pauseScrollAnimation();\n            datas.startZoom = [this.zoomX, this.zoomY];\n\n            const result = this.trigger(\"pinchStart\", {\n                inputEvent,\n            });\n            if (result === false) {\n                stop();\n            }\n            this._setClientRect();\n        }).on(\"pinch\", e => {\n            const scale = e.scale;\n            const pinchDirection = this.options.pinchDirection;\n\n            this._triggerPinch({\n                rotation: e.rotation,\n                distance: e.distance,\n                scale: e.scale,\n                inputEvent: e.inputEvent,\n                isWheel: false,\n                zoom: e.datas.startZoom * scale,\n                zoomX: this.zoomX * (pinchDirection === \"vertical\" ? 1 : scale),\n                zoomY: this.zoomY * (pinchDirection === \"horizontal\" ? 1 : scale),\n                clientX: e.clientX,\n                clientY: e.clientY,\n                ratioX: 0,\n                ratioY: 0,\n            });\n        }).on(\"pinchEnd\", () => {\n            this._tempRect = null;\n        });\n\n        addEvent(wrapperElement, \"scroll\", this._onScroll);\n\n        if (options.useResizeObserver) {\n            const observer = new win.ResizeObserver(() => {\n                this.resize();\n            });\n\n            observer.observe(this._viewportElement);\n            observer.observe(this._containerElement);\n\n\n            this._onDestroys.push(() => {\n                observer.disconnect();\n            });\n        } else {\n            addEvent(win, \"resize\", this.resize);\n\n            this._onDestroys.push(() => {\n                removeEvent(win, \"resize\", this.resize);\n            })\n        }\n\n        if (options.useWheelPinch || options.useWheelScroll) {\n            addEvent(wheelContainerElement, \"wheel\", this.onWheel, {\n                passive: false,\n            });\n        }\n        if (options.useGesture) {\n            addEvent(containerElement, \"gesturestart\", this.onGestureStart, {\n                passive: false,\n            });\n            addEvent(containerElement, \"gesturechange\", this.onGestureChange, {\n                passive: false,\n            });\n        }\n        this.resize();\n    }\n    private render() {\n        const {\n            offsetX,\n            offsetY,\n            zoomX = DEFAULT_OPTIONS.zoomX,\n            zoomY = DEFAULT_OPTIONS.zoomY,\n            translateZ = 0,\n            rangeX,\n            rangeY,\n            containerWidth,\n            containerHeight,\n        } = this;\n        const {\n            useTransform = DEFAULT_OPTIONS.useTransform,\n        } = this.options;\n        let nextOffsetX = -offsetX * zoomX;\n        let nextOffsetY = -offsetY * zoomY;\n\n        this.scrollAreaElement.style.cssText\n            = `width:calc(100% + ${this.getScrollAreaWidth()}px);`\n            + `height:calc(100% + ${this.getScrollAreaHeight()}px);`;\n\n        const viewportStyle = this._viewportElement.style;\n\n        if (useTransform === false) {\n            viewportStyle.cssText += `position: relative; left: ${nextOffsetX}px; top: ${nextOffsetY}px; `;\n\n            // if (restrictOffsetX || restrictOffsetY) {\n            //     viewportStyle.cssText += `position: relative; left: ${restrictOffsetX}px; top: ${restrictOffsetY}px`;\n            // }\n        } else {\n            viewportStyle.cssText += `transform-origin: 0 0;`\n                + `transform:translate3d(${nextOffsetX}px, ${nextOffsetY}px, ${translateZ}px) scale(${zoomX}, ${zoomY});`;\n\n            // if (restrictOffsetX || restrictOffsetY) {\n            //     viewportStyle.cssText += `transform:translate3d(${restrictOffsetX}px, ${restrictOffsetY}px, 0px)`;\n            // }\n        }\n        this.renderScroll();\n    }\n    private renderScroll() {\n        const {\n            zoomX,\n            zoomY,\n            containerWidth,\n            containerHeight,\n        } = this;\n        const horizontalBar = this.horizontalScrollbar;\n        const verticalBar = this.verticalScrollbar;\n\n        if (this.options.useBounceScrollBar) {\n            const scrollLeft = this.getScrollLeft(true) * zoomX;\n            const rangeX = this.getRangeX(true);\n            const scrollWidth =  containerWidth + abs(rangeX[0]) + abs(rangeX[1]);\n            const scrollTop = this.getScrollTop(true) * zoomY;\n            const rangeY = this.getRangeY(true);\n            const scrollHeight =  containerHeight + abs(rangeY[0]) + abs(rangeY[1]);\n\n            horizontalBar.render(\n                this.displayHorizontalScroll,\n                scrollLeft,\n                containerWidth,\n                scrollWidth,\n            );\n            verticalBar.render(\n                this.displayVerticalScroll,\n                scrollTop,\n                containerHeight,\n                scrollHeight,\n            );\n        } else {\n            const scrollRangeX = this._getScrollRangeX();\n            const scrollRangeY = this._getScrollRangeY();\n            const scrollLeft = this.getScrollLeft();\n            const scrollTop = this.getScrollTop();\n            const scrollWidth = this.containerWidth + abs(scrollRangeX[0]) + scrollRangeX[1];\n            const scrollHeight = this.containerHeight + abs(scrollRangeY[0]) + scrollRangeY[1];\n\n            horizontalBar.render(\n                this.displayHorizontalScroll,\n                scrollLeft - scrollRangeX[0],\n                containerWidth,\n                scrollWidth,\n            );\n            verticalBar.render(\n                this.displayVerticalScroll,\n                scrollTop - scrollRangeY[0],\n                containerHeight,\n                scrollHeight,\n            );\n        }\n    }\n    private move(scrollLeft: number, scrollTop: number) {\n        const wrapperElement = this.wrapperElement;\n\n        wrapperElement.scrollLeft = scrollLeft;\n        wrapperElement.scrollTop = scrollTop;\n    }\n    private _onScroll = () => {\n        const { scrollLeft, scrollTop } = this.wrapperElement;\n        const {\n            zoom = DEFAULT_OPTIONS.zoom,\n        } = this;\n        const deltaX = scrollLeft - this.scrollLeft;\n        const deltaY = scrollTop - this.scrollTop;\n        const viewerScrollLeft = this.getScrollLeft();\n        const viewerScrollTop = this.getScrollTop();\n\n        if (this.isLoop) {\n            this.isLoop = false;\n        }\n        this.scrollLeft = scrollLeft;\n        this.scrollTop = scrollTop;\n        this.scrollTo(\n            viewerScrollLeft + deltaX / zoom,\n            viewerScrollTop + deltaY / zoom,\n        );\n    }\n    private onWheel = (e: WheelEvent) => {\n        const options = this.options;\n        const pinchDirection = options.pinchDirection;\n        const maxPinchWheel = options.maxPinchWheel || Infinity;\n\n        const isKeydown = e[`${this.wheelPinchKey}Key`] || e.ctrlKey;\n\n        if (options.useWheelPinch && isKeydown) {\n            let deltaY = e.deltaY;\n            const sign = deltaY >= 0 ? 1 : -1;\n            const distance = Math.min(maxPinchWheel, Math.abs(deltaY));\n\n\n            deltaY = sign * distance;\n            const delta = -deltaY;\n            const scale = Math.max(1 + delta * (options.wheelScale || 0.01), TINY_NUM);\n\n            clearTimeout(this._tempRectTimer);\n            this._tempRectTimer = window.setTimeout(() => {\n                this._tempRect = null;\n            }, 100);\n            this._triggerPinch({\n                distance,\n                scale,\n                rotation: 0,\n                zoom: this.zoom * scale,\n                zoomX: this.zoomX * (pinchDirection === \"vertical\" ? 1 : scale),\n                zoomY: this.zoomY * (pinchDirection === \"horizontal\" ? 1 : scale),\n                inputEvent: e,\n                isWheel: true,\n                clientX: e.clientX,\n                clientY: e.clientY,\n                ratioX: 0,\n                ratioY: 0,\n            });\n        } else if (options.useWheelScroll) {\n            let deltaX = e.deltaX;\n            let deltaY = e.deltaY;\n\n            if (e.shiftKey && !deltaX) {\n                deltaX = deltaY;\n                deltaY = 0;\n            }\n            this.scrollBy(deltaX / this.zoomX, deltaY / this.zoomY);\n        } else {\n            return;\n        }\n        e.preventDefault();\n    }\n    private onGestureStart = (e: any) => {\n        this._tempScale = [this.zoomX, this.zoomY];\n        this._setClientRect();\n        e.preventDefault();\n    }\n    private onGestureChange = (e: any) => {\n        e.preventDefault();\n        if (this.gesto.isFlag() || !this._tempScale) {\n            this._tempScale =  [1, 1];\n            return;\n        }\n        const scale = e.scale;\n        const zoomX = this._tempScale[0];\n        const zoomY = this._tempScale[1];\n        const pinchDirection = this.options.pinchDirection;\n\n        this._triggerPinch({\n            distance: 0,\n            scale,\n            rotation: e.rotation,\n            inputEvent: e,\n            isWheel: true,\n            zoom: (zoomX + zoomY) * scale / 2,\n            zoomX: zoomX * (pinchDirection === \"vertical\" ? 1 : scale),\n            zoomY: zoomY * (pinchDirection === \"horizontal\" ? 1 : scale),\n            clientX: e.clientX,\n            clientY: e.clientY,\n            ratioX: 0,\n            ratioY: 0,\n        });\n    }\n    private onGestureEnd = () => {\n\n    }\n    private _startZoomAnimation(dest: number[], options: ZoomOptions) {\n        if (!dest) {\n            return;\n        }\n        const duration = options.duration;\n        const easing = options.easing || DEFAULT_EASING;\n\n        startAnimation(\n            distRatio => this._setZoom(\n                [\n                    this.zoomX + dest[0] * distRatio,\n                    this.zoomY + dest[1] * distRatio,\n                ],\n                options,\n            ),\n            next => {\n                this._zoomTimer = requestAnimationFrame(next);\n            },\n            {\n                easing,\n                duration,\n            },\n        );\n    }\n    private _startScrollAnimation(dest: number[], options: AnimationOptions) {\n        if (!dest[0] && !dest[1]) {\n            return;\n        }\n        const duration = options.duration;\n        const easing = options.easing || DEFAULT_EASING;\n\n        startAnimation(\n            distRatio => this._scrollBy(\n                dest[0] * distRatio,\n                dest[1] * distRatio,\n                options,\n            ),\n            next => {\n                this._scrollTimer = requestAnimationFrame(next);\n            },\n            {\n                easing,\n                duration,\n            },\n        );\n    }\n    private _startScrollAnimationBySpeed(speed: number[]) {\n        if (!speed || (!speed[0] && !speed[1])) {\n            return;\n        }\n        const a = -0.0006;\n        const duration = getDuration(speed, a);\n        const destPos = getDestPos(speed, a);\n\n        return this._startScrollAnimation(destPos, {\n            duration,\n        })\n\n    }\n    private _pauseScrollAnimation() {\n        cancelAnimationFrame(this._scrollTimer);\n        this._scrollTimer = 0;\n    }\n    private _pauseZoomAnimation() {\n        cancelAnimationFrame(this._zoomTimer);\n        this._zoomTimer = 0;\n    }\n    private getScrollAreaWidth() {\n        const [min, max] = this.getRangeX(true);\n        return min || max ? this.margin * 2 : 0;\n    }\n    private getScrollAreaHeight() {\n        const [min, max] = this.getRangeY(true);\n        return min || max ? this.margin * 2 : 0;\n    }\n    private _triggerPinch(event: OnPinch) {\n        const {\n            clientX,\n            clientY,\n            zoomX,\n            zoomY,\n        } = event;\n        if (this.useAutoZoom) {\n            this._zoomByClient([zoomX, zoomY], clientX, clientY);\n        }\n        if (!this._tempRect) {\n            this._setClientRect();\n        }\n        const zoomRange = this.zoomRange;\n        const {\n            left,\n            top,\n            width,\n            height,\n        } = this._tempRect;\n        const ratioX = (clientX - left) / width * 100;\n        const ratioY = (clientY - top) / height * 100;\n\n        this.trigger(\"pinch\", {\n            ...event,\n            zoom: between((zoomX + zoomY) / 2, zoomRange[0], zoomRange[1]),\n            zoomX: between(zoomX, zoomRange[0], zoomRange[1]),\n            zoomY: between(zoomY, zoomRange[0], zoomRange[1]),\n            ratioX,\n            ratioY,\n        });\n    }\n    private _setClientRect() {\n        const rect = this.getContainer().getBoundingClientRect();\n        this._tempRect = {\n            left: rect.left,\n            top: rect.top,\n            width: rect.width,\n            height: rect.height,\n        };\n    }\n    private _zoomByClient(zoom: number[], clientX: number, clientY: number) {\n        if (!this._tempRect) {\n            this._setClientRect();\n        }\n        const {\n            left,\n            top,\n            width,\n            height,\n        } = this._tempRect;\n        const options = this.options;;\n\n        const originalZoomOffsetX = options.zoomOffsetX;\n        const originalZoomOffsetY = options.zoomOffsetY;\n\n        options.zoomOffsetX = `${(clientX - left) / width * 100}%`;\n        options.zoomOffsetY = `${(clientY - top) / height * 100}%`;\n\n        this._setZoom(zoom, {\n            zoomBase: \"screen\",\n        });\n\n        options.zoomOffsetX = originalZoomOffsetX;\n        options.zoomOffsetY = originalZoomOffsetY;\n    }\n    private _setZoom(\n        zoom: number | number[],\n        zoomOptions: ZoomOptions = {},\n    ) {\n        const zoomBase = zoomOptions.zoomBase;\n        const {\n            containerWidth,\n            containerHeight,\n            zoomX: prevZoomX,\n            zoomY: prevZoomY,\n            zoomRange\n        } = this;\n        let {\n            zoomOffsetX = DEFAULT_OPTIONS.zoomOffsetX,\n            zoomOffsetY = DEFAULT_OPTIONS.zoomOffsetY,\n        } = this;\n        if (\"zoomOffsetX\" in zoomOptions) {\n            zoomOffsetX = zoomOptions.zoomOffsetX;\n        }\n        if (\"zoomOffsetY\" in zoomOptions) {\n            zoomOffsetY = zoomOptions.zoomOffsetY;\n        }\n\n        const scrollLeft = this.getScrollLeft();\n        const scrollTop = this.getScrollTop();\n\n        const [zoomX, zoomY] = isArray(zoom) ? zoom : [zoom, zoom];\n        const nextZoomX = between(zoomX, zoomRange[0], zoomRange[1]);\n        const nextZoomY = between(zoomY, zoomRange[0], zoomRange[1]);\n        const options = this.options;\n\n        options.zoomX = nextZoomX;\n        options.zoomY = nextZoomY;\n        options.zoom = (nextZoomX + nextZoomY) / 2;\n\n        const nextScrollLeft = this.getScrollLeft();\n        const nextScrollTop = this.getScrollTop();\n\n\n        let zoomXPos = 0;\n        let zoomYPos = 0;\n\n        if (zoomBase === \"fixed\") {\n            zoomXPos = convertUnitSize(`${zoomOffsetX}`, this.viewportWidth);\n            zoomYPos = convertUnitSize(`${zoomOffsetY}`, this.viewportHeight);\n        } else if (zoomBase === \"viewport\") {\n            zoomXPos = (-scrollLeft + convertUnitSize(`${zoomOffsetX}`, this.viewportWidth)) * prevZoomX;\n            zoomYPos = (-scrollTop + convertUnitSize(`${zoomOffsetY}`, this.viewportHeight)) * prevZoomY;\n        } else {\n            zoomXPos = convertUnitSize(`${zoomOffsetX}`, containerWidth);\n            zoomYPos = convertUnitSize(`${zoomOffsetY}`, containerHeight);\n        }\n\n        const centerX = scrollLeft + zoomXPos / prevZoomX;\n        const centerY = scrollTop + zoomYPos / prevZoomY;\n\n        const nextCenterX = nextScrollLeft + zoomXPos / nextZoomX;\n        const nextCenterY = nextScrollTop + zoomYPos / nextZoomY;\n\n        this._scrollBy(\n            centerX - nextCenterX,\n            centerY - nextCenterY,\n            {\n                zoom: !!(nextZoomX - prevZoomX || nextZoomY - prevZoomY),\n            },\n        );\n        this.render();\n    }\n    private _scrollBy(deltaX: number, deltaY: number, options?: InnerScrollOptions) {\n        let scrollLeft = this.getScrollLeft();\n        let scrollTop = this.getScrollTop();\n\n        if (options?.absolute) {\n            scrollLeft *= this.zoomX;\n            scrollTop *= this.zoomY;\n        }\n        return this._scrollTo(scrollLeft + deltaX, scrollTop + deltaY, options);\n    }\n    private _scrollTo(x: number, y: number, options?: InnerScrollOptions) {\n        const {\n            scrollLeft: prevScrollLeft,\n            scrollTop: prevScrollTop,\n        } = this;\n\n        const isAbsolute = options?.absolute;\n        this._scrollToType(\"horizontal\", x, isAbsolute);\n        this._scrollToType(\"vertical\", y, isAbsolute);\n\n        const scrollLeft = this.scrollLeft;\n        const scrollTop = this.scrollTop;\n        this.render();\n        const nextScrollAbsoluteLeft = this.getScrollLeft();\n        const nextScrollAbsoluteTop = this.getScrollTop();\n\n        this._emitScrollEvent(nextScrollAbsoluteLeft, nextScrollAbsoluteTop, options?.zoom);\n\n        if (Math.round(prevScrollLeft) !== scrollLeft || Math.round(prevScrollTop) !== scrollTop) {\n            this.isLoop = true;\n            this.move(scrollLeft, scrollTop);\n            requestAnimationFrame(() => {\n                if (!this.isLoop) {\n                    return;\n                }\n                this.isLoop = false;\n                const {\n                    scrollLeft: requestScrollLeft,\n                    scrollTop: requestScrollTop,\n                } = this.wrapperElement;\n\n                this.scrollLeft = requestScrollLeft;\n                this.scrollTop = requestScrollTop;\n\n                if (\n                    scrollLeft !== Math.round(requestScrollLeft)\n                    || scrollTop !== Math.round(requestScrollTop)\n                ) {\n                    this._scrollTo(nextScrollAbsoluteLeft, nextScrollAbsoluteTop);\n                }\n            });\n            return false;\n        }\n        return true;\n    }\n    private _scrollToType(type: \"horizontal\" | \"vertical\", coord: number, isAbsolute?: boolean) {\n        const names = NAMES[type];\n        const {\n            margin = DEFAULT_OPTIONS.margin,\n            threshold = DEFAULT_OPTIONS.threshold,\n        } = this;\n        const prevScrollPos = this[`scroll${names.pos}`];\n        const [minCoord, maxCoord] = this[`getRange${names.coord}`](true, true);\n\n        let scrollPos = Math.round(prevScrollPos);\n\n        const scrollAreaSize = this[`getScrollArea${names.size}`]();\n        const zoom = this[`zoom${names.coord}`];\n\n        if (isAbsolute) {\n            coord = coord / zoom;\n        }\n        const zoomCoord = coord * zoom;\n\n        if (minCoord === maxCoord) {\n            scrollPos = minCoord;\n            coord = minCoord / zoom;\n        } else if (zoomCoord - threshold <= minCoord) {\n            const minThreshold = Math.max(0, zoomCoord - minCoord);\n\n            scrollPos = minThreshold;\n            coord = (minCoord + minThreshold) / zoom;\n        } else if (zoomCoord + threshold >= maxCoord) {\n            const maxThreshold = Math.max(0, maxCoord - zoomCoord);\n\n            scrollPos = scrollAreaSize - maxThreshold;\n            coord = (maxCoord - maxThreshold) / zoom;\n        } else if (scrollPos < threshold) {\n            scrollPos += margin;\n        } else if (scrollPos > scrollAreaSize - threshold) {\n            scrollPos -= margin;\n        }\n\n        scrollPos = Math.round(scrollPos);\n\n        this[`scroll${names.pos}`] = scrollPos;\n        this[`offset${names.coord}`] = coord - scrollPos / zoom;\n    }\n    private _getRangeCoord(type: \"vertical\" | \"horizontal\", isZoom?: boolean, isReal?: boolean) {\n        const {\n            margin = DEFAULT_OPTIONS.margin,\n            threshold,\n        } = this;\n\n        const names = NAMES[type];\n        const rangeCoord = checkDefault(\n            this[`range${names.coord}`],\n            DEFAULT_OPTIONS[`range${names.coord}`],\n        );\n        const rangeOffsetCoord = checkDefault(\n            this[`rangeOffset${names.coord}`],\n            DEFAULT_OPTIONS[`rangeOffset${names.coord}`],\n        );\n        const zoom = this[`zoom${names.coord}`];\n        const range = getRange(\n            this[`getScroll${names.pos}`](),\n            margin,\n            rangeCoord,\n            threshold,\n            isReal,\n        );\n\n        if (!isZoom) {\n            return [\n                range[0] + rangeOffsetCoord[0],\n                range[1] + rangeOffsetCoord[1],\n            ];\n        }\n        return [\n            range[0] * zoom + rangeOffsetCoord[0],\n            this.options.useOverflowScroll\n                ? Math.max(this[`viewport${names.size}`] * zoom - this[`container${names.size}`], range[1] * zoom + rangeOffsetCoord[1])\n                : range[1] * zoom + rangeOffsetCoord[1],\n        ];\n    }\n    private _emitScrollEvent(scrollLeft: number, scrollTop: number, zoom?: boolean) {\n        const prevScrollLeft = this._asLeft;\n        const prevScrollTop = this._asTop;\n\n        if (!zoom && prevScrollLeft === scrollLeft && prevScrollTop === scrollTop) {\n            return;\n        }\n        this._asLeft = scrollLeft;\n        this._asTop = scrollTop;\n\n        /**\n         * The `scroll` event fires when the document view or an element has been scrolled.\n         * @memberof InfiniteViewer\n         * @event scroll\n         * @param {InfiniteViewer.OnScroll} - Parameters for the scroll event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         * ).on(\"scroll\", () => {\n         *   console.log(viewer.getScrollLeft(), viewer.getScrollTop());\n         * });\n         */\n        this.trigger(\"scroll\", {\n            scrollLeft,\n            scrollTop,\n            zoomX: this.zoomX,\n            zoomY: this.zoomY,\n        });\n    }\n    private _getScrollRangeX() {\n        const pos = this.getScrollLeft();\n        const rangeX = this.rangeX;\n        const startRange = rangeX[0];\n        let endRange = rangeX[1];\n\n        if (this.useOverflowScroll && isFinite(endRange)) {\n            endRange = Math.max(endRange, this.viewportWidth - this.containerWidth / this.zoomX);\n        }\n\n        const startMargin = Math.min(0, isFinite(startRange) ? Math.min(startRange, pos) : pos);\n        const endMargin = Math.max(0, isFinite(endRange) ? Math.max(endRange, pos) : pos);\n        const viewportSize = this.viewportScrollWidth;\n        const margin = Math.max(this.containerWidth / this.zoomX, viewportSize) - viewportSize;\n        const startSizeOffset = Math.min(0, margin + startMargin);\n\n        return [\n            startSizeOffset,\n            endMargin,\n        ];\n    }\n    private _getScrollRangeY() {\n        const pos = this.getScrollTop();\n        const rangeY = this.rangeY;\n        const startRange = rangeY[0];\n        let endRange = rangeY[1];\n\n        if (this.useOverflowScroll && isFinite(endRange)) {\n            endRange = Math.max(endRange, this.viewportHeight - this.containerHeight / this.zoomY);\n        }\n\n        const startMargin = Math.min(0, isFinite(startRange) ? Math.min(startRange, pos) : pos);\n        const endMargin = Math.max(0, isFinite(endRange) ? Math.max(endRange, pos) : pos);\n        const viewportSize = this.viewportScrollHeight;\n        const margin = Math.max(this.containerHeight / this.zoomY, viewportSize) - viewportSize;\n        const startSizeOffset = Math.min(0, margin + startMargin);\n\n        return [\n            startSizeOffset,\n            endMargin,\n        ];\n    }\n}\n\ninterface InfiniteViewer extends InfiniteViewerProperties { }\n\nexport default InfiniteViewer;\n","import InfiniteViewerManager from \"./InfiniteViewerManager\";\n\nexport default class InfiniteViewer extends InfiniteViewerManager {}\n"],"names":["agent","getAgent","IS_SAFARI","browser","name","PREFIX","WRAPPER_CLASS_NAME","SCROLL_AREA_CLASS_NAME","SCROLL_BAR_CLASS_NAME","HORIZONTAL_SCROLL_BAR_CLASS_NAME","VERTICAL_SCROLL_BAR_CLASS_NAME","SCROLL_THUMB_CLASS_NAME","injector","styled","prefixCSS","DEFAULT_OPTIONS","margin","threshold","zoom","zoomX","zoomY","rangeX","Infinity","rangeY","rangeOffsetX","rangeOffsetY","wrapperElement","scrollAreaElement","horizontalScrollElement","verticalScrollElement","usePinch","useAutoZoom","useMouseDrag","pinchThreshold","cspNonce","maxPinchWheel","wheelScale","displayHorizontalScroll","displayVerticalScroll","useTransform","useWheelPinch","zoomRange","wheelPinchKey","useWheelScroll","zoomOffsetX","zoomOffsetY","translateZ","useGesture","useResizeObserver","pinchDirection","preventWheelClick","useBounceScrollBar","useOverflowScroll","DEFAULT_EASING","x","Math","pow","NAMES","horizontal","pos","coord","size","vertical","CLASS_NAME","className","PROPERTIES","OPTIONS","__spreadArray","EVENTS","METHODS","TINY_NUM","measureSpeed","e","deltaX","deltaY","datas","time","Date","now","prevSpeed","speed","dt","getDuration","a","normalSpeed","sqrt","abs","getDestPos","duration","v","getRange","range","isReal","min","isFinite","floor","max","ceil","checkDefault","value","defaultValue","startAnimation","callback","timerCallback","options","easing","startTime","prevTime","next","t","ratio","prevRatio","__extends","containerElement","type","container","_super","_this","isHorizontal","target","inputEvent","isThumb","thumbElement","setTimeout","requestAnimationFrame","thumbRect","getBoundingClientRect","pos1","thumbSize","pos2","clientPos","delta","scrollSize","scrollBy","stopPropagation","preventDefault","trigger","doc","getDocument","barElement","createElement","insertBefore","isAppend","querySelector","addClass","gesto","Gesto","getWindow","on","_onDragStart","_onDrag","addEvent","_onWheel","passive","isAbsolute","isDisplay","opacity","throttle","_a","dirName1","sizeName","sizeP","posP","style","cssText","removeEvent","off","EventEmitter","_containerElement","viewportElement","containerWidth","containerHeight","_b","_viewportElement","viewportWidth","viewportHeight","viewportScrollWidth","viewportScrollHeight","render","_scrollBy","scrollLeft","scrollTop","viewerScrollLeft","getScrollLeft","viewerScrollTop","getScrollTop","isLoop","scrollTo","isKeydown","ctrlKey","sign","distance","scale","clearTimeout","_tempRectTimer","window","_tempRect","_triggerPinch","rotation","isWheel","clientX","clientY","ratioX","ratioY","shiftKey","_tempScale","_setClientRect","isFlag","isNode","children","init","_wheelContainerElement","unset","verticalScrollbar","destroy","horizontalScrollbar","injectResult","_onDestroys","forEach","_onScroll","onWheel","onGestureStart","onGestureChange","onGestureEnd","absolute","isObject","offsetY","getRangeY","offsetX","getRangeX","isZoom","_getScrollRangeX","_getScrollRangeY","resize","left","top","y","_c","getZoomX","getZoomY","_d","prevZoomX","prevZoomY","_e","_f","_g","_h","isArray","nextZoomX","between","nextZoomY","zoomXPos","convertUnitSize","zoomYPos","setZoom","zoomBase","setTo","_pauseScrollAnimation","_scrollTo","_startScrollAnimation","deltaZoom","_pauseZoomAnimation","_setZoom","_startZoomAnimation","_getRangeCoord","win","firstChild","horizontalBar","ScrollBar","verticalBar","inject","nonce","wheelContainerOption","wheelContainer","wheelContainerElement","isString","current","events","stop","isMouseEvent","dragFlag","result","startEvent","isPinch","movement","isDrag","isDouble","_startScrollAnimationBySpeed","startZoom","observer_1","ResizeObserver","observe","push","disconnect","nextOffsetX","nextOffsetY","getScrollAreaWidth","getScrollAreaHeight","viewportStyle","renderScroll","scrollWidth","scrollHeight","scrollRangeX","scrollRangeY","dest","distRatio","_zoomTimer","_scrollTimer","destPos","cancelAnimationFrame","event","_zoomByClient","width","height","rect","getContainer","originalZoomOffsetX","originalZoomOffsetY","zoomOptions","nextScrollLeft","nextScrollTop","centerX","centerY","nextCenterX","nextCenterY","prevScrollLeft","prevScrollTop","_scrollToType","nextScrollAbsoluteLeft","nextScrollAbsoluteTop","_emitScrollEvent","round","move","requestScrollLeft","requestScrollTop","names","prevScrollPos","minCoord","maxCoord","scrollPos","scrollAreaSize","zoomCoord","minThreshold","maxThreshold","rangeCoord","rangeOffsetCoord","_asLeft","_asTop","startRange","endRange","startMargin","endMargin","viewportSize","startSizeOffset","InfiniteViewer","Properties","prototype","property","attributes","enumerable","configurable","get","setter","camelize","set","Object","defineProperty","InfiniteViewerManager"],"mappings":"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"}