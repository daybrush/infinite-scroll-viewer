{"version":3,"file":"infinite-viewer.js","sources":["../src/consts.ts","../src/utils.ts","../src/ScrollBar.ts","../src/InfiniteViewerManager.tsx","../src/InfiniteViewer.tsx","../src/index.umd.ts"],"sourcesContent":["import styled from \"css-styled\";\nimport { InfiniteViewerOptions } from \"./types\";\nimport getAgent from \"@egjs/agent\";\nimport { prefixCSS } from \"framework-utils\";\n\nexport const agent = getAgent();\nexport const IS_SAFARI = agent.browser.name === \"safari\";\n\nexport const PREFIX = \"infinite-viewer-\";\n\nexport const WRAPPER_CLASS_NAME = `${PREFIX}wrapper`;\nexport const SCROLL_AREA_CLASS_NAME = `${PREFIX}scroll-area`;\n\nexport const SCROLL_BAR_CLASS_NAME = `${PREFIX}scroll-bar`;\nexport const HORIZONTAL_SCROLL_BAR_CLASS_NAME = `${PREFIX}horizontal-scroll-bar`;\nexport const VERTICAL_SCROLL_BAR_CLASS_NAME = `${PREFIX}vertical-scroll-bar`;\nexport const SCROLL_THUMB_CLASS_NAME = `${PREFIX}scroll-thumb`;\n\nexport const injector = styled(prefixCSS(PREFIX, `\n{\n    position: relative;\n    overscroll-behavior: none;\n}\n.wrapper {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    scrollbar-width: none;\n    top: 0;\n    left: 0;\n    will-change: scroll-position;\n}\n.restrict-wrapper {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n}\n.wrapper::-webkit-scrollbar {\n    display: none;\n}\n.scroll-area {\n    position:absolute;\n    top:0;\n    left:0;\n    transform-origin: 0 0;\n}\n.scroll-bar {\n    position:absolute;\n    width: 10px;\n    height: 10px;\n    box-sizing: border-box;\n    right: 0;\n    bottom: 0;\n    overflow: hidden;\n}\n.horizontal-scroll-bar {\n    width: calc(100% - 20px);\n    right: 10px;\n    height: 14px;\n}\n.vertical-scroll-bar {\n    height: calc(100% - 20px);\n    bottom: 10px;\n    width: 14px;\n}\n.scroll-thumb {\n    position:relative;\n    opacity: 0.7;\n    background: #333;\n    border-radius: 3px;\n    left: 0px;\n    top: 0px;\n    z-index: 10;\n    width: 6px;\n    height: 6px;\n    transition: all ease 0.2s;\n    opacity: 0;\n}\n.scroll-bar:hover .scroll-thumb {\n    border-radius: 5px;\n    opacity: 1;\n}\n.horizontal-scroll-bar .scroll-thumb {\n    margin: 4px 0px;\n    transition-property: opacity, margin, height, border-radius;\n}\n.vertical-scroll-bar .scroll-thumb {\n    margin: 0px 4px;\n    transition-property: opacity, margin, width, border-radius;\n}\n.horizontal-scroll-bar:hover .scroll-thumb {\n    height: 10px;\n    margin: 2px 0px;\n}\n.vertical-scroll-bar:hover .scroll-thumb {\n    width: 10px;\n    margin: 0px 2px;\n}\n`));\n\nexport const DEFAULT_OPTIONS = {\n    margin: 500,\n    threshold: 100,\n    zoom: 1,\n    zoomX: 1,\n    zoomY: 1,\n    rangeX: [-Infinity, Infinity],\n    rangeY: [-Infinity, Infinity],\n    rangeOffsetX: [0, 0],\n    rangeOffsetY: [0, 0],\n    wrapperElement: null,\n    scrollAreaElement: null,\n    horizontalScrollElement: null,\n    verticalScrollElement: null,\n    usePinch: false,\n    useAutoZoom: false,\n    useMouseDrag: false,\n    pinchThreshold: 30,\n    cspNonce: \"\",\n    maxPinchWheel: Infinity,\n    wheelScale: 0.01,\n    displayHorizontalScroll: true,\n    displayVerticalScroll: true,\n    useTransform: true,\n    useWheelPinch: true,\n    zoomRange: [0.001, Infinity],\n    wheelPinchKey: \"ctrl\" as const,\n    useWheelScroll: IS_SAFARI,\n    zoomOffsetX: \"50%\",\n    zoomOffsetY: \"50%\",\n    translateZ: 0,\n    useGesture: true,\n    useResizeObserver: false,\n    pinchDirection: \"all\" as const,\n    preventWheelClick: true,\n};\n\nexport const DEFAULT_EASING = (x: number) => 1 - Math.pow(1 - x, 3);\nexport const NAMES = {\n    horizontal: {\n        pos: \"Left\",\n        coord: \"X\",\n        size: \"Width\",\n    },\n    vertical: {\n        pos: \"Top\",\n        coord: \"Y\",\n        size: \"Height\",\n    },\n} as const;\n/**\n * @memberof InfiniteViewer\n */\nexport const CLASS_NAME = injector.className;\n\n/**\n * @memberof InfiniteViewer\n */\nexport const PROPERTIES = [\n    \"margin\",\n    \"threshold\",\n    \"zoomOffsetX\",\n    \"zoomOffsetY\",\n    \"zoom\",\n    \"zoomX\",\n    \"zoomY\",\n    \"rangeX\",\n    \"rangeY\",\n    \"rangeOffsetX\",\n    \"rangeOffsetY\",\n    \"usePinch\",\n    \"useMouseDrag\",\n    \"pinchThreshold\",\n    \"maxPinchWheel\",\n    \"wheelScale\",\n    \"displayVerticalScroll\",\n    \"displayHorizontalScroll\",\n    \"translateZ\",\n    \"useAutoZoom\",\n    \"wheelPinchKey\",\n    \"zoomRange\",\n    \"pinchDirection\",\n] as const;\n\n/**\n * @memberof InfiniteViewer\n */\nexport const OPTIONS = [\n    // ignore target, container,\n    ...PROPERTIES,\n    \"preventWheelClick\",\n    \"useWheelPinch\",\n    \"useWheelScroll\",\n    \"useGesture\",\n    \"cspNonce\",\n    \"wrapperElement\",\n    \"scrollAreaElement\",\n    \"verticalScrollElement\",\n    \"horizontalScrollElement\",\n    \"useResizeObserver\",\n    \"wheelContainer\",\n] as const;\n\n/**\n * @memberof InfiniteViewer\n */\nexport const EVENTS = [\n    \"scroll\",\n    \"abortPinch\",\n    \"dragStart\",\n    \"dragEnd\",\n    \"pinchStart\",\n    \"pinch\",\n] as const;\n\n/**\n * @memberof InfiniteViewer\n */\nexport const METHODS = [\n    \"getScrollLeft\",\n    \"getScrollTop\",\n    \"getScrollWidth\",\n    \"getScrollHeight\",\n    \"getContainerWidth\",\n    \"getContainerHeight\",\n    \"getViewportWidth\",\n    \"getViewportHeight\",\n    \"getViewportScrollWidth\",\n    \"getViewportScrollHeight\",\n    \"scrollTo\",\n    \"scrollBy\",\n    \"zoomBy\",\n    \"scrollCenter\",\n    \"getContainer\",\n    \"getViewport\",\n    \"getWrapper\",\n    \"setZoom\",\n    \"getRangeX\",\n    \"getRangeY\",\n    \"resize\",\n    \"getZoom\",\n    \"getZoomX\",\n    \"getZoomY\",\n    \"getWheelContainer\",\n    \"setTo\",\n    \"setBy\",\n] as const;\n\nexport const TINY_NUM = 0.000001;\n","import { OnDrag } from \"gesto\";\nimport { TINY_NUM } from \"./consts\";\nimport { AnimationOptions } from \"./types\";\n\nexport function measureSpeed(e: OnDrag) {\n    const { deltaX, deltaY, datas } = e;\n    const time = Date.now();\n    const prevSpeed = datas.speed;\n\n    if (!prevSpeed) {\n        datas.speed = [0, 0];\n        datas.time = time;\n        return;\n    }\n    const dt = time - datas.time;\n    datas.speed = [prevSpeed[0] / 2 + deltaX / dt, prevSpeed[1] / 2 + deltaY / dt];\n}\n\nexport function getDuration(speed: number[], a: number) {\n    const normalSpeed = Math.sqrt(speed[0] * speed[0] + speed[1] * speed[1]);\n\n    return Math.abs(normalSpeed / a);\n}\nexport function getDestPos(speed: number[], a: number) {\n    const duration = getDuration(speed, a);\n\n    return [\n        -speed[0] / 2 * duration,\n        -speed[1] / 2 * duration,\n    ];\n}\nexport function minmax(value: number, min: number, max: number) {\n    return Math.min(max, Math.max(min, value));\n}\n\nexport function abs(v: number) {\n    return Math.abs(v);\n}\n\nexport function getRange(\n    pos: number,\n    margin: number,\n    range: number[],\n    threshold: number,\n    isReal: boolean,\n) {\n    const min = isReal || isFinite(range[0])\n        ? range[0]\n        : Math.min(-1, Math.floor(pos / margin)) * margin - threshold;\n    const max = isReal || isFinite(range[1])\n        ? range[1]\n        : Math.max(1, Math.ceil(pos / margin)) * margin + threshold;\n\n    return [min, max];\n}\n\nexport function throttle(value: number) {\n    return Math.round(value / TINY_NUM) * TINY_NUM;\n}\n\n\nexport function checkDefault<T>(value: T | undefined | null, defaultValue: T): T {\n    return value != null ? value : defaultValue;\n}\n\n\n\nexport function startAnimation(\n    callback: (ratioDist: number) => void,\n    timerCallback: (next: () => void) => void,\n    options: AnimationOptions,\n) {\n    const duration = options.duration;\n    const easing = options.easing || ((x: number) => 1 - Math.pow(1 - x, 3));\n    const startTime = Date.now();\n    let prevTime = startTime;\n\n    const next = () => {\n        const now = Date.now();\n        let t = now - startTime;\n\n        if (duration < t) {\n            t = duration;\n        }\n        const ratio = easing(t / duration);\n        const prevRatio = easing((prevTime - startTime) / duration);\n\n        prevTime = now;\n\n        callback(ratio - prevRatio);\n\n        if (t >= duration) {\n            return;\n        }\n        timerCallback(next);\n    };\n    timerCallback(next);\n}\n","import Gesto from \"gesto\";\nimport {\n    SCROLL_BAR_CLASS_NAME, SCROLL_THUMB_CLASS_NAME,\n    HORIZONTAL_SCROLL_BAR_CLASS_NAME, VERTICAL_SCROLL_BAR_CLASS_NAME\n} from \"./consts\";\nimport { addClass, removeEvent, addEvent, throttle } from \"@daybrush/utils\";\nimport EventEmitter from \"@scena/event-emitter\";\nimport { abs } from \"./utils\";\n\nexport default class ScrollBar extends EventEmitter {\n    public isAppend: boolean = false;\n    public thumbElement!: HTMLElement;\n    public barElement!: HTMLElement;\n    private gesto!: Gesto;\n    private size: number = 0;\n    private scrollSize: number = 0;\n    private isHorizontal = false;\n\n    constructor(\n        private type: \"horizontal\" | \"vertical\",\n        container?: HTMLElement,\n    ) {\n        super();\n        const isHorizontal = type === \"horizontal\";\n        let thumbElement: HTMLElement;\n        let barElement: HTMLElement = container;\n\n        if (!container) {\n            barElement = document.createElement(\"div\");\n            thumbElement = document.createElement(\"div\");\n\n            barElement.insertBefore(thumbElement, null);\n            this.isAppend = true;\n        } else {\n            thumbElement = container.querySelector(`.${SCROLL_THUMB_CLASS_NAME}`);\n        }\n        addClass(\n            barElement,\n            isHorizontal ? HORIZONTAL_SCROLL_BAR_CLASS_NAME\n                : VERTICAL_SCROLL_BAR_CLASS_NAME,\n        );\n        addClass(barElement, SCROLL_BAR_CLASS_NAME);\n        addClass(thumbElement, SCROLL_THUMB_CLASS_NAME);\n\n        this.thumbElement = thumbElement;\n        this.barElement = barElement;\n        this.isHorizontal = isHorizontal;\n        this.gesto = new Gesto(barElement, {\n            container: window,\n        }).on(\"dragStart\", e => {\n            const target = e.inputEvent.target;\n            const datas = e.datas;\n            const isThumb = this.thumbElement === target;\n\n            if (!isThumb) {\n                setTimeout(() => {\n                    requestAnimationFrame(() => {\n                        const thumbRect = this.thumbElement.getBoundingClientRect();\n                        const pos1 = thumbRect[isHorizontal ? \"left\" : \"top\"];\n                        const thumbSize = thumbRect[isHorizontal ? \"width\" : \"height\"];\n                        const pos2 = pos1 + thumbSize;\n                        const clientPos = e[isHorizontal ? \"clientX\" : \"clientY\"];\n\n                        const endPos = clientPos - pos2;\n                        const startPos = clientPos - pos1;\n\n                        if (0 <= startPos && endPos <= 0) {\n                            return;\n                        }\n                        const clientScrollWidth = thumbSize / this.size * this.scrollSize;\n                        const pos = (0 < endPos ? endPos : startPos) / clientScrollWidth;\n                        const delta = pos * this.size;\n\n                        this.scrollBy(delta);\n                    });\n                }, 100);\n\n            }\n            datas.isThumb = isThumb;\n            e.inputEvent.stopPropagation();\n            e.inputEvent.preventDefault();\n        }).on(\"drag\", e => {\n            if (!e.datas.isThumb) {\n                return;\n            }\n            this.scrollBy(this.isHorizontal ? e.deltaX : e.deltaY, true);\n        });\n        addEvent(this.barElement, \"wheel\", this.onWheel, {\n            passive: false,\n        });\n    }\n    public scrollBy(delta: number, isAbsolute?: boolean) {\n        const ratio = delta / this.size;\n\n        this.trigger(\"scroll\", {\n            delta: isAbsolute ? delta : this.scrollSize * ratio,\n        });\n    }\n    public render(\n        isDisplay: boolean,\n        containerSize: number,\n        scrollRange: number[],\n    ) {\n        const [startMargin, endMargin] = scrollRange;\n        const scrollSizeOffset = throttle(abs(startMargin) + endMargin, 0.001);\n        const scrollSize = containerSize + scrollSizeOffset;\n        const opacity = isDisplay && scrollSizeOffset ? \"1\" : \"\";\n        const [dirName1, sizeName] = this.isHorizontal ? [\"X\", \"width\"] : [\"Y\", \"height\"];\n        const thumbSize = containerSize / scrollSize;\n        const thumbPos = endMargin / scrollSize / thumbSize;\n\n        this.size = containerSize;\n        this.scrollSize = scrollSize;\n        this.thumbElement.style.opacity = opacity;\n        this.thumbElement.style.cssText\n            += `${sizeName}: ${thumbSize * 100}%;`\n            + `transform: translate${dirName1}(${thumbPos * 100}%)`;\n    }\n    public destroy() {\n        removeEvent(this.barElement, \"wheel\", this.onWheel);\n        this.gesto.off();\n        this.off();\n    }\n    private onWheel = (e: WheelEvent) => {\n        const delta = this.isHorizontal ? e.deltaX : e.deltaY;\n\n        if (delta) {\n            e.preventDefault();\n        }\n        this.trigger(\"scroll\", {\n            delta,\n        });\n    }\n}\n","import EventEmitter from \"@scena/event-emitter\";\nimport Gesto from \"gesto\";\nimport { InjectResult } from \"css-styled\";\nimport { Properties } from \"framework-utils\";\nimport { camelize, IObject, addEvent, removeEvent, addClass, convertUnitSize, between, isObject, isArray, isString } from \"@daybrush/utils\";\nimport { InfiniteViewerOptions, InfiniteViewerProperties, InfiniteViewerEvents, OnPinch, AnimationOptions, ScrollOptions, ZoomOptions, GetScollPosOptions, InnerScrollOptions, ScrollCenterOptions, SetOptions } from \"./types\";\nimport {\n    PROPERTIES, injector, CLASS_NAME, TINY_NUM,\n    DEFAULT_OPTIONS,\n    WRAPPER_CLASS_NAME, SCROLL_AREA_CLASS_NAME,\n    HORIZONTAL_SCROLL_BAR_CLASS_NAME, VERTICAL_SCROLL_BAR_CLASS_NAME, NAMES, DEFAULT_EASING,\n} from \"./consts\";\nimport { measureSpeed, getDuration, getDestPos, abs, getRange, checkDefault, startAnimation } from \"./utils\";\nimport ScrollBar from \"./ScrollBar\";\n\n@Properties(PROPERTIES as any, (prototype, property) => {\n    const attributes: IObject<any> = {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this.options[property];\n        },\n    };\n    const setter = camelize(`set ${property}`);\n    if (prototype[setter]) {\n        attributes.set = function (value) {\n            this[setter](value);\n        };\n    } else {\n        attributes.set = function (value) {\n            this.options[property] = value;\n        };\n    }\n    Object.defineProperty(prototype, property, attributes);\n})\n/**\n * @sort 1\n */\nclass InfiniteViewer extends EventEmitter<InfiniteViewerEvents> {\n    public options: InfiniteViewerOptions;\n    private injectResult!: InjectResult;\n    private wrapperElement!: HTMLElement;\n    private scrollAreaElement!: HTMLElement;\n    private horizontalScrollbar: ScrollBar;\n    private verticalScrollbar: ScrollBar;\n    private gesto!: Gesto;\n    private offsetX: number = 0;\n    private offsetY: number = 0;\n    private containerWidth: number = 0;\n    private containerHeight: number = 0;\n    private viewportWidth: number = 0;\n    private viewportHeight: number = 0;\n    private viewportScrollWidth: number = 0;\n    private viewportScrollHeight: number = 0;\n    private scrollLeft: number = 0;\n    private scrollTop: number = 0;\n    private _scrollTimer = 0;\n    private _zoomTimer = 0;\n\n    private _viewportElement: HTMLElement | null = null;\n    private _wheelContainerElement: HTMLElement | null = null;\n    private dragFlag: boolean = false;\n    private isLoop: boolean = false;\n    private _tempScale: number[] = [1, 1];\n    private _tempRect: { top: number, left: number, width: number, height: number } | null = null;\n    private _tempRectTimer: number | null = null;\n    private _onDestroys: Array<() => void> = [];\n    private _asLeft = 0;\n    private _asTop = 0;\n    /**\n     * @sort 1\n     */\n    constructor(\n        private _containerElement: HTMLElement,\n        viewportElement: HTMLElement | Partial<InfiniteViewerOptions> = {},\n        options: Partial<InfiniteViewerOptions> = {},\n    ) {\n        super();\n\n\n        if (viewportElement instanceof Element) {\n            this._viewportElement = viewportElement;\n            this.options = {\n                ...DEFAULT_OPTIONS,\n                ...options,\n            };\n        } else {\n            this._viewportElement = _containerElement.children[0] as HTMLElement;\n            this.options = {\n                ...DEFAULT_OPTIONS,\n                ...viewportElement,\n            };\n        }\n        this.init();\n    }\n    /**\n     * Get Container Element\n     */\n    public getContainer(): HTMLElement {\n        return this._containerElement;\n    }\n    /**\n     * Get Wheel Container Element\n     */\n    public getWheelContainer(): HTMLElement {\n        return this._wheelContainerElement;\n    }\n    /**\n     * Get Viewport Element\n     */\n    public getViewport(): HTMLElement {\n        return this._viewportElement;\n    }\n    /**\n     * Get Wrapper Element\n     */\n    public getWrapper(): HTMLElement {\n        return this.wrapperElement;\n    }\n    /**\n     * Get Scroll Area Element\n     */\n    public geScrollArea(): HTMLElement {\n        return this.scrollAreaElement;\n    }\n    /**\n     * Destroy elements, properties, and events.\n     */\n    public destroy(): void {\n        this.off();\n        this.gesto.unset();\n        this.verticalScrollbar.destroy();\n        this.horizontalScrollbar.destroy();\n        this.injectResult.destroy();\n        const containerElement = this._containerElement;\n\n        this._onDestroys.forEach(callback => {\n            callback();\n        });\n        removeEvent(this.wrapperElement, \"scroll\", this._onScroll);\n        removeEvent(this._wheelContainerElement, \"wheel\", this.onWheel);\n        removeEvent(containerElement, \"gesturestart\", this.onGestureStart);\n        removeEvent(containerElement, \"gesturechange\", this.onGestureChange);\n        removeEvent(containerElement, \"gesturesend\", this.onGestureEnd);\n\n        this.gesto = null;\n        this.injectResult = null;\n        this._containerElement = null;\n        this._viewportElement = null;\n        this.options = null;\n    }\n    /**\n     * Gets the number of pixels that an element's content is scrolled vertically.\n     */\n    public getScrollTop(options: GetScollPosOptions | boolean = {}) {\n        let range = false;\n        let absolute = false;\n\n        if (isObject(options)) {\n            range = options.range;\n            absolute = options.absolute;\n        } else {\n            range = options;\n        }\n        const zoom = this.zoomY;\n        const pos = this.scrollTop / zoom + this.offsetY\n            + (range ? abs(this.getRangeY()[0]) : 0);\n\n        return absolute ? pos * zoom : pos;\n    }\n    /**\n     * Gets the number of pixels that an element's content is scrolled vertically.\n     */\n    public getScrollLeft(options: GetScollPosOptions | boolean = {}) {\n        let range = false;\n        let absolute = false;\n\n        if (isObject(options)) {\n            range = options.range;\n            absolute = options.absolute;\n        } else {\n            range = options;\n        }\n        const zoom = this.zoomX;\n        const pos = this.scrollLeft / zoom + this.offsetX\n            + (range ? abs(this.getRangeX()[0]) : 0);\n\n        return absolute ? pos * zoom : pos;\n    }\n    /**\n     * Gets measurement of the width of an element's content with overflow\n     */\n    public getScrollWidth(isZoom?: boolean) {\n        const range = this._getScrollRangeX();\n        const zoom = this.zoomX;\n        const size = this.containerWidth / zoom + abs(range[0]) + range[1];\n\n        return isZoom ? size : size * zoom;\n    }\n    /**\n     * Gets measurement of the height of an element's content with overflow\n     */\n    public getScrollHeight(isZoom?: boolean) {\n        const range = this._getScrollRangeY();\n        const zoom = this.zoomY;\n        const size = this.containerHeight / zoom + abs(range[0]) + range[1];\n\n        return isZoom ? size : size * zoom;\n    }\n\n    /**\n     * Scroll the element to the center\n     */\n    public scrollCenter(options: ScrollCenterOptions = {}) {\n        this.resize();\n\n        const zoomX = this.zoomX;\n        const zoomY = this.zoomY;\n\n        let left = -(this.containerWidth / zoomX - this.viewportWidth) / 2;\n        let top = -(this.containerHeight / zoomY - this.viewportHeight) / 2;\n\n        if (options.absolute) {\n            left *= zoomX;\n            top *= zoomY;\n        }\n        if (options.horizontal === false) {\n            left = this.getScrollLeft();\n        }\n        if (options.vertical === false) {\n            top = this.getScrollTop();\n        }\n\n        return this.scrollTo(left, top, options);\n    }\n    /**\n     * Update Viewer Sizes\n     * @method\n     */\n    public resize = () => {\n        const {\n            offsetWidth: containerWidth,\n            offsetHeight: containerHeight,\n        } = this._containerElement;\n        const {\n            offsetWidth: viewportWidth,\n            offsetHeight: viewportHeight,\n            scrollWidth: viewportScrollWidth,\n            scrollHeight: viewportScrollHeight,\n        } = this._viewportElement;\n\n        this.containerWidth = containerWidth;\n        this.containerHeight = containerHeight;\n        this.viewportWidth = viewportWidth;\n        this.viewportHeight = viewportHeight;\n        this.viewportScrollWidth = Math.max(viewportWidth, viewportScrollWidth);\n        this.viewportScrollHeight = Math.max(viewportWidth, viewportScrollHeight);\n\n        this.render();\n        this._scrollBy(0, 0);\n    }\n    /**\n     * Move to that position or zoom.\n     * @since 0.25.0\n     */\n    public setTo(options: SetOptions) {\n        const {\n            x = this.getScrollLeft(),\n            y = this.getScrollTop(),\n            zoom = [this.getZoomX(), this.getZoomY()],\n            duration,\n        } = options;\n        const {\n            zoomX: prevZoomX,\n            zoomY: prevZoomY,\n            zoomRange,\n        } = this;\n        let {\n            zoomOffsetX = DEFAULT_OPTIONS.zoomOffsetX,\n            zoomOffsetY = DEFAULT_OPTIONS.zoomOffsetY,\n        } = this;\n        if (\"zoomOffsetX\" in options) {\n            zoomOffsetX = options.zoomOffsetX;\n        }\n        if (\"zoomOffsetY\" in options) {\n            zoomOffsetY = options.zoomOffsetY;\n        }\n\n        const [zoomX, zoomY] = isArray(zoom) ? zoom : [zoom, zoom];\n        const nextZoomX = between(zoomX, zoomRange[0], zoomRange[1]);\n        const nextZoomY = between(zoomY, zoomRange[0], zoomRange[1]);\n        const zoomXPos = convertUnitSize(`${zoomOffsetX}`, this.viewportWidth) * (1 / prevZoomX - 1 / nextZoomX);\n        const zoomYPos = convertUnitSize(`${zoomOffsetY}`, this.viewportHeight) * (1 / prevZoomY - 1 / nextZoomY);\n\n        this.scrollTo(x - zoomXPos, y - zoomYPos, {\n            duration,\n        });\n        this.setZoom(zoom, {\n            zoomOffsetX,\n            zoomOffsetY,\n            duration,\n            zoomBase: \"fixed\",\n        });\n    }\n    /**\n     * Move by the position or zoom delta value.\n     * @since 0.25.0\n     */\n    public setBy(options: SetOptions) {\n        const {\n            x = 0,\n            y = 0,\n            zoom = [0, 0],\n        } = options;\n        const [zoomX, zoomY] = isArray(zoom) ? zoom : [zoom, zoom];\n\n        this.setTo({\n            ...options,\n            x: this.getScrollLeft() + x,\n            y: this.getScrollTop() + y,\n            zoom: [this.zoomX + zoomX, this.zoomY + zoomY],\n        });\n    }\n    /**\n     * Scrolls the container by the given amount.\n     */\n    public scrollBy(deltaX: number, deltaY: number, options?: ScrollOptions) {\n        this._pauseScrollAnimation();\n        if (!options || !options.duration) {\n            let scrollLeft = this.getScrollLeft();\n            let scrollTop = this.getScrollTop();\n\n            if (options?.absolute) {\n                scrollLeft *= this.zoomX;\n                scrollTop *= this.zoomY;\n            }\n            return this._scrollTo(scrollLeft + deltaX, scrollTop + deltaY, options);\n        } else {\n            this._startScrollAnimation([deltaX, deltaY], options);\n            return true;\n        }\n    }\n    /**\n     * Scrolls the container to set of coordinates.\n     * @param scrollLeft\n     * @param scrollTop\n     */\n    public scrollTo(x: number, y: number, options?: ScrollOptions) {\n        this._pauseScrollAnimation();\n        if (!options || !options.duration) {\n            return this._scrollTo(x, y, options);\n        } else {\n            let scrollLeft = this.getScrollLeft();\n            let scrollTop = this.getScrollTop();\n\n            if (options?.absolute) {\n                scrollLeft *= this.zoomX;\n                scrollTop *= this.zoomY;\n            }\n            return this.scrollBy(x - scrollLeft, y - scrollTop, options);\n        }\n    }\n    /**\n     * Set viewer zoom by the given amount\n     */\n    public zoomBy(deltaZoom: number | number[], options?: ZoomOptions) {\n        this._pauseZoomAnimation();\n        const [deltaX, deltaY] = isArray(deltaZoom)\n        ? deltaZoom\n        : [deltaZoom, deltaZoom];\n\n        if (!options || !options.duration) {\n            this._setZoom([\n                this.zoomX + deltaX,\n                this.zoomY + deltaY,\n            ], options);\n        } else {\n            this._startZoomAnimation([deltaX, deltaY], options);\n        }\n    }\n    /**\n     * Set viewer zoom\n     */\n    public setZoom(zoom: number | number[], options?: ZoomOptions) {\n        this._pauseZoomAnimation();\n\n        if (!options || !options.duration) {\n            this._setZoom(zoom, options);\n        } else {\n            const [zoomX, zoomY] = isArray(zoom)\n            ? zoom\n            : [zoom, zoom];\n            this._startZoomAnimation([\n                zoomX - this.zoomX,\n                zoomY - this.zoomY,\n            ], options);\n        }\n    }\n    public getViewportWidth() {\n        return this.viewportWidth;\n    }\n    public getViewportHeight() {\n        return this.viewportWidth;\n    }\n    public getViewportScrollWidth() {\n        return this.viewportScrollWidth;\n    }\n    public getViewportScrollHeight() {\n        return this.viewportScrollHeight;\n    }\n    public getContainerWidth() {\n        return this.containerWidth;\n    }\n    public getContainerHeight() {\n        return this.containerHeight;\n    }\n    /**\n     * Get viewer zoom\n     */\n    public getZoom() {\n        return (this.zoomX + this.zoomY) / 2;\n    }\n    /**\n     * Get viewer zoomX\n     * @since 0.20.0\n     */\n    public getZoomX() {\n        return this.zoomX;\n    }\n    /**\n     * Get viewer zoom\n     * @since 0.20.0\n     */\n    public getZoomY() {\n        return this.zoomY;\n    }\n    /**\n     * get x ranges\n     */\n    public getRangeX(isZoom?: boolean, isReal?: boolean) {\n        return this._getRangeCoord(\"horizontal\", isZoom, isReal);\n    }\n    /**\n     * get y ranges\n     */\n    public getRangeY(isZoom?: boolean, isReal?: boolean) {\n        return this._getRangeCoord(\"vertical\", isZoom, isReal);\n    }\n\n    private init() {\n        // infinite-viewer(container)\n        // viewportㅌ\n        // children\n        const containerElement = this._containerElement;\n        const options = this.options;\n\n        // vanilla\n        let wrapperElement = options.wrapperElement\n            || containerElement.querySelector(`.${WRAPPER_CLASS_NAME}`);\n        let scrollAreaElement = options.scrollAreaElement\n            || containerElement.querySelector(`.${SCROLL_AREA_CLASS_NAME}`);\n        const horizontalScrollElement = options.horizontalScrollElement\n            || containerElement.querySelector(`.${HORIZONTAL_SCROLL_BAR_CLASS_NAME}`);\n        const verticalScrollElement = options.verticalScrollElement\n            || containerElement.querySelector(`.${VERTICAL_SCROLL_BAR_CLASS_NAME}`);\n\n        if (!wrapperElement) {\n            wrapperElement = document.createElement(\"div\");\n            wrapperElement.insertBefore(this._viewportElement, null);\n            containerElement.insertBefore(wrapperElement, null);\n        }\n        this.wrapperElement = wrapperElement;\n\n        if (!scrollAreaElement) {\n            scrollAreaElement = document.createElement(\"div\");\n\n            wrapperElement.insertBefore(scrollAreaElement, wrapperElement.firstChild);\n        }\n        this.scrollAreaElement = scrollAreaElement;\n\n        addClass(containerElement, CLASS_NAME);\n        addClass(wrapperElement, WRAPPER_CLASS_NAME);\n        // addClass(restrictElement, RESTRICT_WRAPPER_CLASS_NAME);\n        addClass(scrollAreaElement, SCROLL_AREA_CLASS_NAME);\n\n        this.horizontalScrollbar = new ScrollBar(\"horizontal\", horizontalScrollElement);\n        this.verticalScrollbar = new ScrollBar(\"vertical\", verticalScrollElement);\n\n        this.horizontalScrollbar.on(\"scroll\", e => {\n            this.scrollBy(e.delta / this.zoomX, 0);\n        });\n\n        this.verticalScrollbar.on(\"scroll\", e => {\n            this.scrollBy(0, e.delta / this.zoomY);\n        });\n\n        if (this.horizontalScrollbar.isAppend) {\n            containerElement.insertBefore(this.horizontalScrollbar.barElement, null);\n        }\n        if (this.verticalScrollbar.isAppend) {\n            containerElement.insertBefore(this.verticalScrollbar.barElement, null);\n        }\n        this.injectResult = injector.inject(containerElement, {\n            nonce: this.options.cspNonce,\n        });\n\n        const wheelContainerOption = options.wheelContainer;\n        let wheelContainerElement: HTMLElement | null = null;\n\n        if (wheelContainerOption) {\n            if (isString(wheelContainerOption)) {\n                wheelContainerElement = document.querySelector(wheelContainerOption);\n            } else if (wheelContainerOption instanceof Node) {\n                wheelContainerElement = wheelContainerOption;\n            } else if (\"value\" in wheelContainerOption || \"current\" in wheelContainerOption) {\n                wheelContainerElement = wheelContainerOption.current || wheelContainerOption.value;\n            }\n        }\n        wheelContainerElement ||= containerElement;\n        this._wheelContainerElement = wheelContainerElement;\n\n        /**\n         * the `dragStart` event fires when `touchstart` does occur.\n         * @memberof InfiniteViewer\n         * @event dragStart\n         * @param {InfiniteViewer.OnDragStart} - Parameters for the `dragStart` event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         * ).on(\"dragStart\", e => {\n         *   console.log(e.inputEvent);\n         * });\n         */\n        /**\n         * the `drag` event fires when `touch` does occur.\n         * @memberof InfiniteViewer\n         * @event drag\n         * @param {InfiniteViewer.OnDrag} - Parameters for the `drag` event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         * ).on(\"drag\", e => {\n         *   console.log(e.inputEvent);\n         * });\n         */\n        /**\n         * the `dragEnd` event fires when `touchend` does occur.\n         * @memberof InfiniteViewer\n         * @event dragEnd\n         * @param {InfiniteViewer.OnDragEnd} - Parameters for the `dragEnd` event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         * ).on(\"dragEnd\", e => {\n         *   console.log(e.inputEvent);\n         * });\n         */\n        /**\n         * the `abortPinch` event fires when `pinch` event does not occur by dragging a certain area.\n         * @memberof InfiniteViewer\n         * @event abortPinch\n         * @param {InfiniteViewer.OnAbortPinch} - Parameters for the abortPinch event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         *   {\n         *     usePinch: true,\n         *   }\n         * ).on(\"abortPinch\", e => {\n         *   console.log(e.inputEvent);\n         * });\n         */\n        /**\n         * the `pinch` event fires when two points pinch the viewer\n         * The pinchStart and abortPinch events do not occur when pinching through the wheel.\n         * @memberof InfiniteViewer\n         * @event pinch\n         * @param {InfiniteViewer.OnPinch} - Parameters for the `pinch` event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         *   {\n         *     usePinch: true,\n         *   }\n         * ).on(\"pinch\", e => {\n         *   console.log(e.zoom, e.inputEvent);\n         * });\n         */\n        this.gesto = new Gesto(containerElement, {\n            container: window,\n            events: [\"touch\", \"mouse\"],\n            preventWheelClick: this.options.preventWheelClick ?? true,\n        }).on(\"dragStart\", e => {\n            const {\n                inputEvent,\n                stop,\n                datas,\n            } = e;\n            if (!this.useMouseDrag && e.isMouseEvent) {\n                stop();\n                return;\n            }\n            this._pauseScrollAnimation();\n            this.dragFlag = false;\n            const result = this.trigger(\"dragStart\", e);\n\n            if (result === false) {\n                stop();\n                return;\n            }\n            inputEvent.preventDefault();\n            datas.startEvent = inputEvent;\n        }).on(\"drag\", e => {\n            if (!this.options.usePinch || e.isPinch || (this.useMouseDrag && e.isMouseEvent)) {\n                this.trigger(\"drag\", {\n                    ...e,\n                    inputEvent: e.inputEvent,\n                });\n                measureSpeed(e);\n                this.scrollBy(-e.deltaX / this.zoomX, -e.deltaY / this.zoomY);\n            } else if (!this.dragFlag && e.movement > options.pinchThreshold) {\n                this.dragFlag = true;\n\n                this.trigger(\"abortPinch\", {\n                    inputEvent: e.datas.startEvent || e.inputEvent,\n                });\n            }\n        }).on(\"dragEnd\", e => {\n            this.trigger(\"dragEnd\", {\n                isDrag: e.isDrag,\n                isDouble: e.isDouble,\n                inputEvent: e.inputEvent,\n            });\n            this._startScrollAnimationBySpeed(e.datas.speed);\n        }).on(\"pinchStart\", ({ inputEvent, datas, stop }) => {\n            inputEvent.preventDefault();\n            this._pauseScrollAnimation();\n            datas.startZoom = [this.zoomX, this.zoomY];\n\n            const result = this.trigger(\"pinchStart\", {\n                inputEvent,\n            });\n            if (result === false) {\n                stop();\n            }\n            this._setClientRect();\n        }).on(\"pinch\", e => {\n            const scale = e.scale;\n            const pinchDirection = this.options.pinchDirection;\n\n            this._triggerPinch({\n                rotation: e.rotation,\n                distance: e.distance,\n                scale: e.scale,\n                inputEvent: e.inputEvent,\n                isWheel: false,\n                zoom: e.datas.startZoom * scale,\n                zoomX: this.zoomX * (pinchDirection === \"vertical\" ? 1 : scale),\n                zoomY: this.zoomY * (pinchDirection === \"horizontal\" ? 1 : scale),\n                clientX: e.clientX,\n                clientY: e.clientY,\n                ratioX: 0,\n                ratioY: 0,\n            });\n        }).on(\"pinchEnd\", () => {\n            this._tempRect = null;\n        });\n\n        addEvent(wrapperElement, \"scroll\", this._onScroll);\n\n        if (options.useResizeObserver) {\n            const observer = new ResizeObserver(() => {\n                this.resize();\n            });\n\n            observer.observe(this._viewportElement);\n            observer.observe(this._containerElement);\n\n\n            this._onDestroys.push(() => {\n                observer.disconnect();\n            });\n        } else {\n            addEvent(window, \"resize\", this.resize);\n\n            this._onDestroys.push(() => {\n                removeEvent(window, \"resize\", this.resize);\n            })\n        }\n\n        if (options.useWheelPinch || options.useWheelScroll) {\n            addEvent(wheelContainerElement, \"wheel\", this.onWheel, {\n                passive: false,\n            });\n        }\n        if (options.useGesture) {\n            addEvent(containerElement, \"gesturestart\", this.onGestureStart, {\n                passive: false,\n            });\n            addEvent(containerElement, \"gesturechange\", this.onGestureChange, {\n                passive: false,\n            });\n        }\n        this.resize();\n    }\n    private render() {\n        const {\n            offsetX,\n            offsetY,\n            zoomX = DEFAULT_OPTIONS.zoomX,\n            zoomY = DEFAULT_OPTIONS.zoomY,\n            translateZ = 0,\n            rangeX,\n            rangeY,\n            containerWidth,\n            containerHeight,\n        } = this;\n        const {\n            useTransform = DEFAULT_OPTIONS.useTransform,\n        } = this.options;\n        let nextOffsetX = -offsetX * zoomX;\n        let nextOffsetY = -offsetY * zoomY;\n\n        this.scrollAreaElement.style.cssText\n            = `width:calc(100% + ${this.getScrollAreaWidth()}px);`\n            + `height:calc(100% + ${this.getScrollAreaHeight()}px);`;\n\n        const viewportStyle = this._viewportElement.style;\n\n        if (useTransform === false) {\n            viewportStyle.cssText += `position: relative; left: ${nextOffsetX}px; top: ${nextOffsetY}px; `;\n\n            // if (restrictOffsetX || restrictOffsetY) {\n            //     viewportStyle.cssText += `position: relative; left: ${restrictOffsetX}px; top: ${restrictOffsetY}px`;\n            // }\n        } else {\n            viewportStyle.cssText += `transform-origin: 0 0;`\n                + `transform:translate3d(${nextOffsetX}px, ${nextOffsetY}px, ${translateZ}px) scale(${zoomX}, ${zoomY});`;\n\n            // if (restrictOffsetX || restrictOffsetY) {\n            //     viewportStyle.cssText += `transform:translate3d(${restrictOffsetX}px, ${restrictOffsetY}px, 0px)`;\n            // }\n        }\n        this.renderScroll();\n    }\n    private renderScroll() {\n        const {\n            containerWidth,\n            containerHeight,\n            zoomX,\n            zoomY,\n        } = this;\n\n        this.horizontalScrollbar.render(\n            this.displayHorizontalScroll,\n            containerWidth / zoomX,\n            this._getScrollRangeX(),\n        );\n        this.verticalScrollbar.render(\n            this.displayVerticalScroll,\n            containerHeight / zoomY,\n            this._getScrollRangeY(),\n        );\n    }\n    private move(scrollLeft: number, scrollTop: number) {\n        const wrapperElement = this.wrapperElement;\n\n        wrapperElement.scrollLeft = scrollLeft;\n        wrapperElement.scrollTop = scrollTop;\n    }\n    private _onScroll = () => {\n        const { scrollLeft, scrollTop } = this.wrapperElement;\n        const {\n            zoom = DEFAULT_OPTIONS.zoom,\n        } = this;\n        const deltaX = scrollLeft - this.scrollLeft;\n        const deltaY = scrollTop - this.scrollTop;\n        const viewerScrollLeft = this.getScrollLeft();\n        const viewerScrollTop = this.getScrollTop();\n\n        if (this.isLoop) {\n            this.isLoop = false;\n        }\n        this.scrollLeft = scrollLeft;\n        this.scrollTop = scrollTop;\n        this.scrollTo(\n            viewerScrollLeft + deltaX / zoom,\n            viewerScrollTop + deltaY / zoom,\n        );\n    }\n    private onWheel = (e: WheelEvent) => {\n        const options = this.options;\n        const pinchDirection = options.pinchDirection;\n        const maxPinchWheel = options.maxPinchWheel || Infinity;\n\n        const isKeydown = e[`${this.wheelPinchKey}Key`] || e.ctrlKey;\n\n        if (options.useWheelPinch && isKeydown) {\n            let deltaY = e.deltaY;\n            const sign = deltaY >= 0 ? 1 : -1;\n            const distance = Math.min(maxPinchWheel, Math.abs(deltaY));\n\n\n            deltaY = sign * distance;\n            const delta = -deltaY;\n            const scale = Math.max(1 + delta * (options.wheelScale || 0.01), TINY_NUM);\n\n            clearTimeout(this._tempRectTimer);\n            this._tempRectTimer = window.setTimeout(() => {\n                this._tempRect = null;\n            }, 100);\n            this._triggerPinch({\n                distance,\n                scale,\n                rotation: 0,\n                zoom: this.zoom * scale,\n                zoomX: this.zoomX * (pinchDirection === \"vertical\" ? 1 : scale),\n                zoomY: this.zoomY * (pinchDirection === \"horizontal\" ? 1 : scale),\n                inputEvent: e,\n                isWheel: true,\n                clientX: e.clientX,\n                clientY: e.clientY,\n                ratioX: 0,\n                ratioY: 0,\n            });\n        } else if (options.useWheelScroll) {\n            let deltaX = e.deltaX;\n            let deltaY = e.deltaY;\n\n            if (e.shiftKey && !deltaX) {\n                deltaX = deltaY;\n                deltaY = 0;\n            }\n            this.scrollBy(deltaX / this.zoomX, deltaY / this.zoomY);\n        } else {\n            return;\n        }\n        e.preventDefault();\n    }\n    private onGestureStart = (e: any) => {\n        this._tempScale = [this.zoomX, this.zoomY];\n        this._setClientRect();\n        e.preventDefault();\n    }\n    private onGestureChange = (e: any) => {\n        e.preventDefault();\n        if (this.gesto.isFlag() || !this._tempScale) {\n            this._tempScale =  [1, 1];\n            return;\n        }\n        const scale = e.scale;\n        const zoomX = this._tempScale[0];\n        const zoomY = this._tempScale[1];\n        const pinchDirection = this.options.pinchDirection;\n\n        this._triggerPinch({\n            distance: 0,\n            scale,\n            rotation: e.rotation,\n            inputEvent: e,\n            isWheel: true,\n            zoom: (zoomX + zoomY) * scale / 2,\n            zoomX: zoomX * (pinchDirection === \"vertical\" ? 1 : scale),\n            zoomY: zoomY * (pinchDirection === \"horizontal\" ? 1 : scale),\n            clientX: e.clientX,\n            clientY: e.clientY,\n            ratioX: 0,\n            ratioY: 0,\n        });\n    }\n    private onGestureEnd = () => {\n\n    }\n    private _startZoomAnimation(dest: number[], options: ZoomOptions) {\n        if (!dest) {\n            return;\n        }\n        const duration = options.duration;\n        const easing = options.easing || DEFAULT_EASING;\n\n        startAnimation(\n            distRatio => this._setZoom(\n                [\n                    this.zoomX + dest[0] * distRatio,\n                    this.zoomY + dest[1] * distRatio,\n                ],\n                options,\n            ),\n            next => {\n                this._zoomTimer = requestAnimationFrame(next);\n            },\n            {\n                easing,\n                duration,\n            },\n        );\n    }\n    private _startScrollAnimation(dest: number[], options: AnimationOptions) {\n        if (!dest[0] && !dest[1]) {\n            return;\n        }\n        const duration = options.duration;\n        const easing = options.easing || DEFAULT_EASING;\n\n        startAnimation(\n            distRatio => this._scrollBy(\n                dest[0] * distRatio,\n                dest[1] * distRatio,\n                options,\n            ),\n            next => {\n                this._scrollTimer = requestAnimationFrame(next);\n            },\n            {\n                easing,\n                duration,\n            },\n        );\n    }\n    private _startScrollAnimationBySpeed(speed: number[]) {\n        if (!speed || (!speed[0] && !speed[1])) {\n            return;\n        }\n        const a = -0.0006;\n        const duration = getDuration(speed, a);\n        const destPos = getDestPos(speed, a);\n\n        return this._startScrollAnimation(destPos, {\n            duration,\n        })\n\n    }\n    private _pauseScrollAnimation() {\n        cancelAnimationFrame(this._scrollTimer);\n        this._scrollTimer = 0;\n    }\n    private _pauseZoomAnimation() {\n        cancelAnimationFrame(this._zoomTimer);\n        this._zoomTimer = 0;\n    }\n    private getScrollAreaWidth() {\n        const [min, max] = this.getRangeX(true);\n        return min || max ? this.margin * 2 : 0;\n    }\n    private getScrollAreaHeight() {\n        const [min, max] = this.getRangeY(true);\n        return min || max ? this.margin * 2 : 0;\n    }\n    private _triggerPinch(event: OnPinch) {\n        const {\n            clientX,\n            clientY,\n            zoomX,\n            zoomY,\n        } = event;\n        if (this.useAutoZoom) {\n            this._zoomByClient([zoomX, zoomY], clientX, clientY);\n        }\n        if (!this._tempRect) {\n            this._setClientRect();\n        }\n        const zoomRange = this.zoomRange;\n        const {\n            left,\n            top,\n            width,\n            height,\n        } = this._tempRect;\n        const ratioX = (clientX - left) / width * 100;\n        const ratioY = (clientY - top) / height * 100;\n\n        this.trigger(\"pinch\", {\n            ...event,\n            zoom: between((zoomX + zoomY) / 2, zoomRange[0], zoomRange[1]),\n            zoomX: between(zoomX, zoomRange[0], zoomRange[1]),\n            zoomY: between(zoomY, zoomRange[0], zoomRange[1]),\n            ratioX,\n            ratioY,\n        });\n    }\n    private _setClientRect() {\n        const rect = this.getContainer().getBoundingClientRect();\n        this._tempRect = {\n            left: rect.left,\n            top: rect.top,\n            width: rect.width,\n            height: rect.height,\n        };\n    }\n    private _zoomByClient(zoom: number[], clientX: number, clientY: number) {\n        if (!this._tempRect) {\n            this._setClientRect();\n        }\n        const {\n            left,\n            top,\n            width,\n            height,\n        } = this._tempRect;\n        const options = this.options;;\n\n        const originalZoomOffsetX = options.zoomOffsetX;\n        const originalZoomOffsetY = options.zoomOffsetY;\n\n        options.zoomOffsetX = `${(clientX - left) / width * 100}%`;\n        options.zoomOffsetY = `${(clientY - top) / height * 100}%`;\n\n        this._setZoom(zoom, {\n            zoomBase: \"screen\",\n        });\n\n        options.zoomOffsetX = originalZoomOffsetX;\n        options.zoomOffsetY = originalZoomOffsetY;\n    }\n    private _setZoom(\n        zoom: number | number[],\n        zoomOptions: ZoomOptions = {},\n    ) {\n        const zoomBase = zoomOptions.zoomBase;\n        const {\n            containerWidth,\n            containerHeight,\n            zoomX: prevZoomX,\n            zoomY: prevZoomY,\n            zoomRange\n        } = this;\n        let {\n            zoomOffsetX = DEFAULT_OPTIONS.zoomOffsetX,\n            zoomOffsetY = DEFAULT_OPTIONS.zoomOffsetY,\n        } = this;\n        if (\"zoomOffsetX\" in zoomOptions) {\n            zoomOffsetX = zoomOptions.zoomOffsetX;\n        }\n        if (\"zoomOffsetY\" in zoomOptions) {\n            zoomOffsetY = zoomOptions.zoomOffsetY;\n        }\n\n        const scrollLeft = this.getScrollLeft();\n        const scrollTop = this.getScrollTop();\n\n        const [zoomX, zoomY] = isArray(zoom) ? zoom : [zoom, zoom];\n        const nextZoomX = between(zoomX, zoomRange[0], zoomRange[1]);\n        const nextZoomY = between(zoomY, zoomRange[0], zoomRange[1]);\n        const options = this.options;\n\n        options.zoomX = nextZoomX;\n        options.zoomY = nextZoomY;\n        options.zoom = (nextZoomX + nextZoomY) / 2;\n\n        const nextScrollLeft = this.getScrollLeft();\n        const nextScrollTop = this.getScrollTop();\n\n\n        let zoomXPos = 0;\n        let zoomYPos = 0;\n\n        if (zoomBase === \"fixed\") {\n            zoomXPos = convertUnitSize(`${zoomOffsetX}`, this.viewportWidth);\n            zoomYPos = convertUnitSize(`${zoomOffsetY}`, this.viewportHeight);\n        } else if (zoomBase === \"viewport\") {\n            zoomXPos = (-scrollLeft + convertUnitSize(`${zoomOffsetX}`, this.viewportWidth)) * prevZoomX;\n            zoomYPos = (-scrollTop + convertUnitSize(`${zoomOffsetY}`, this.viewportHeight)) * prevZoomY;\n        } else {\n            zoomXPos = convertUnitSize(`${zoomOffsetX}`, containerWidth);\n            zoomYPos = convertUnitSize(`${zoomOffsetY}`, containerHeight);\n        }\n\n        const centerX = scrollLeft + zoomXPos / prevZoomX;\n        const centerY = scrollTop + zoomYPos / prevZoomY;\n\n        const nextCenterX = nextScrollLeft + zoomXPos / nextZoomX;\n        const nextCenterY = nextScrollTop + zoomYPos / nextZoomY;\n\n        this._scrollBy(\n            centerX - nextCenterX,\n            centerY - nextCenterY,\n            {\n                zoom: !!(nextZoomX - prevZoomX || nextZoomY - prevZoomY),\n            },\n        );\n        this.render();\n    }\n    private _scrollBy(deltaX: number, deltaY: number, options?: InnerScrollOptions) {\n        let scrollLeft = this.getScrollLeft();\n        let scrollTop = this.getScrollTop();\n\n        if (options?.absolute) {\n            scrollLeft *= this.zoomX;\n            scrollTop *= this.zoomY;\n        }\n        return this._scrollTo(scrollLeft + deltaX, scrollTop + deltaY, options);\n    }\n    private _scrollTo(x: number, y: number, options?: InnerScrollOptions) {\n        const {\n            scrollLeft: prevScrollLeft,\n            scrollTop: prevScrollTop,\n        } = this;\n\n        const isAbsolute = options?.absolute;\n        this._scrollToType(\"horizontal\", x, isAbsolute);\n        this._scrollToType(\"vertical\", y, isAbsolute);\n\n        const scrollLeft = this.scrollLeft;\n        const scrollTop = this.scrollTop;\n        this.render();\n        const nextScrollAbsoluteLeft = this.getScrollLeft();\n        const nextScrollAbsoluteTop = this.getScrollTop();\n\n        this._emitScrollEvent(nextScrollAbsoluteLeft, nextScrollAbsoluteTop, options?.zoom);\n\n        if (Math.round(prevScrollLeft) !== scrollLeft || Math.round(prevScrollTop) !== scrollTop) {\n            this.isLoop = true;\n            this.move(scrollLeft, scrollTop);\n            requestAnimationFrame(() => {\n                if (!this.isLoop) {\n                    return;\n                }\n                this.isLoop = false;\n                const {\n                    scrollLeft: requestScrollLeft,\n                    scrollTop: requestScrollTop,\n                } = this.wrapperElement;\n\n                this.scrollLeft = requestScrollLeft;\n                this.scrollTop = requestScrollTop;\n\n                if (\n                    scrollLeft !== Math.round(requestScrollLeft)\n                    || scrollTop !== Math.round(requestScrollTop)\n                ) {\n                    this._scrollTo(nextScrollAbsoluteLeft, nextScrollAbsoluteTop);\n                }\n            });\n            return false;\n        }\n        return true;\n    }\n    private _scrollToType(type: \"horizontal\" | \"vertical\", coord: number, isAbsolute?: boolean) {\n        const names = NAMES[type];\n        const {\n            margin = DEFAULT_OPTIONS.margin,\n            threshold = DEFAULT_OPTIONS.threshold,\n        } = this;\n        const prevScrollPos = this[`scroll${names.pos}`];\n        const [minCoord, maxCoord] = this[`getRange${names.coord}`](true, true);\n\n        let scrollPos = Math.round(prevScrollPos);\n\n        const scrollAreaSize = this[`getScrollArea${names.size}`]();\n        const zoom = this[`zoom${names.coord}`];\n\n        if (isAbsolute) {\n            coord = coord / zoom;\n        }\n        const zoomCoord = coord * zoom;\n\n        if (minCoord === maxCoord) {\n            scrollPos = minCoord;\n            coord = minCoord / zoom;\n        } else if (zoomCoord - threshold <= minCoord) {\n            const minThreshold = Math.max(0, zoomCoord - minCoord);\n\n            scrollPos = minThreshold;\n            coord = (minCoord + minThreshold) / zoom;\n        } else if (zoomCoord + threshold >= maxCoord) {\n            const maxThreshold = Math.max(0, maxCoord - zoomCoord);\n\n            scrollPos = scrollAreaSize - maxThreshold;\n            coord = (maxCoord - maxThreshold) / zoom;\n        } else if (scrollPos < threshold) {\n            scrollPos += margin;\n        } else if (scrollPos > scrollAreaSize - threshold) {\n            scrollPos -= margin;\n        }\n\n        scrollPos = Math.round(scrollPos);\n\n        this[`scroll${names.pos}`] = scrollPos;\n        this[`offset${names.coord}`] = coord - scrollPos / zoom;\n    }\n    private _getRangeCoord(type: \"vertical\" | \"horizontal\", isZoom?: boolean, isReal?: boolean) {\n        const {\n            margin = DEFAULT_OPTIONS.margin,\n            threshold,\n        } = this;\n\n        const names = NAMES[type];\n        const rangeCoord = checkDefault(\n            this[`range${names.coord}`],\n            DEFAULT_OPTIONS[`range${names.coord}`],\n        );\n        const rangeOffsetCoord = checkDefault(\n            this[`rangeOffset${names.coord}`],\n            DEFAULT_OPTIONS[`rangeOffset${names.coord}`],\n        );\n        const zoom = this[`zoom${names.coord}`];\n        const range = getRange(\n            this[`getScroll${names.pos}`](),\n            margin,\n            rangeCoord,\n            threshold,\n            isReal,\n        );\n\n        if (!isZoom) {\n            return [\n                range[0] + rangeOffsetCoord[0],\n                range[1] + rangeOffsetCoord[1],\n            ];\n        }\n        return [\n            range[0] * zoom + rangeOffsetCoord[0],\n            range[1] * zoom + rangeOffsetCoord[1],\n            // Math.max(this[`viewport${names.size}`] * zoom - this[`container${names.size}`], range[1] * zoom + rangeOffsetCoord[1]),\n        ];\n    }\n    private _emitScrollEvent(scrollLeft: number, scrollTop: number, zoom?: boolean) {\n        const prevScrollLeft = this._asLeft;\n        const prevScrollTop = this._asTop;\n\n        if (!zoom && prevScrollLeft === scrollLeft && prevScrollTop === scrollTop) {\n            return;\n        }\n        this._asLeft = scrollLeft;\n        this._asTop = scrollTop;\n\n        /**\n         * The `scroll` event fires when the document view or an element has been scrolled.\n         * @memberof InfiniteViewer\n         * @event scroll\n         * @param {InfiniteViewer.OnScroll} - Parameters for the scroll event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         * ).on(\"scroll\", () => {\n         *   console.log(viewer.getScrollLeft(), viewer.getScrollTop());\n         * });\n         */\n        this.trigger(\"scroll\", {\n            scrollLeft,\n            scrollTop,\n            zoomX: this.zoomX,\n            zoomY: this.zoomY,\n        });\n    }\n    private _getScrollRangeX() {\n        const pos = this.getScrollLeft();\n        const startMargin =  Math.min(0, pos);\n        const endMargin = Math.max(0, pos);\n        const viewportSize = this.viewportScrollWidth;\n        const margin = Math.max(this.containerWidth / this.zoomX, viewportSize) - viewportSize;\n        const startSizeOffset = Math.min(0, margin + startMargin);\n\n        return [\n            startSizeOffset,\n            endMargin,\n        ];\n    }\n    private _getScrollRangeY() {\n        const pos = this.getScrollTop();\n        const startMargin =  Math.min(0, pos);\n        const endMargin = Math.max(0, pos);\n        const viewportSize = this.viewportScrollHeight;\n        const margin = Math.max(this.containerHeight / this.zoomY, viewportSize) - viewportSize;\n        const startSizeOffset = Math.min(0, margin + startMargin);\n\n        return [\n            startSizeOffset,\n            endMargin,\n        ];\n    }\n}\n\ninterface InfiniteViewer extends InfiniteViewerProperties { }\n\nexport default InfiniteViewer;\n","import InfiniteViewerManager from \"./InfiniteViewerManager\";\n\nexport default class InfiniteViewer extends InfiniteViewerManager {}\n","import InfiniteViewer, * as modules from \"./index\";\n\nfor (const name in modules) {\n    (InfiniteViewer as any)[name] = modules[name];\n}\n\nexport default InfiniteViewer;\n"],"names":["agent","getAgent","IS_SAFARI","browser","name","PREFIX","WRAPPER_CLASS_NAME","SCROLL_AREA_CLASS_NAME","SCROLL_BAR_CLASS_NAME","HORIZONTAL_SCROLL_BAR_CLASS_NAME","VERTICAL_SCROLL_BAR_CLASS_NAME","SCROLL_THUMB_CLASS_NAME","injector","styled","prefixCSS","DEFAULT_OPTIONS","margin","threshold","zoom","zoomX","zoomY","rangeX","Infinity","rangeY","rangeOffsetX","rangeOffsetY","wrapperElement","scrollAreaElement","horizontalScrollElement","verticalScrollElement","usePinch","useAutoZoom","useMouseDrag","pinchThreshold","cspNonce","maxPinchWheel","wheelScale","displayHorizontalScroll","displayVerticalScroll","useTransform","useWheelPinch","zoomRange","wheelPinchKey","useWheelScroll","zoomOffsetX","zoomOffsetY","translateZ","useGesture","useResizeObserver","pinchDirection","preventWheelClick","DEFAULT_EASING","x","Math","pow","NAMES","horizontal","pos","coord","size","vertical","CLASS_NAME","className","PROPERTIES","OPTIONS","__spreadArray","EVENTS","METHODS","TINY_NUM","measureSpeed","e","deltaX","deltaY","datas","time","Date","now","prevSpeed","speed","dt","getDuration","a","normalSpeed","sqrt","abs","getDestPos","duration","v","getRange","range","isReal","min","isFinite","floor","max","ceil","checkDefault","value","defaultValue","startAnimation","callback","timerCallback","options","easing","startTime","prevTime","next","t","ratio","prevRatio","__extends","type","container","_super","_this","delta","isHorizontal","preventDefault","trigger","thumbElement","barElement","document","createElement","insertBefore","isAppend","querySelector","addClass","gesto","Gesto","window","on","target","inputEvent","isThumb","setTimeout","requestAnimationFrame","thumbRect","getBoundingClientRect","pos1","thumbSize","pos2","clientPos","endPos","startPos","clientScrollWidth","scrollSize","scrollBy","stopPropagation","addEvent","onWheel","passive","isAbsolute","isDisplay","containerSize","scrollRange","startMargin","endMargin","scrollSizeOffset","throttle","opacity","_a","dirName1","sizeName","thumbPos","style","cssText","removeEvent","off","EventEmitter","_containerElement","viewportElement","containerWidth","containerHeight","_b","_viewportElement","viewportWidth","viewportHeight","viewportScrollWidth","viewportScrollHeight","render","_scrollBy","scrollLeft","scrollTop","viewerScrollLeft","getScrollLeft","viewerScrollTop","getScrollTop","isLoop","scrollTo","isKeydown","ctrlKey","sign","distance","scale","clearTimeout","_tempRectTimer","_tempRect","_triggerPinch","rotation","isWheel","clientX","clientY","ratioX","ratioY","shiftKey","_tempScale","_setClientRect","isFlag","Element","children","init","_wheelContainerElement","unset","verticalScrollbar","destroy","horizontalScrollbar","injectResult","containerElement","_onDestroys","forEach","_onScroll","onGestureStart","onGestureChange","onGestureEnd","absolute","isObject","offsetY","getRangeY","offsetX","getRangeX","isZoom","_getScrollRangeX","_getScrollRangeY","resize","left","top","y","_c","getZoomX","getZoomY","_d","prevZoomX","prevZoomY","_e","_f","_g","_h","isArray","nextZoomX","between","nextZoomY","zoomXPos","convertUnitSize","zoomYPos","setZoom","zoomBase","setTo","_pauseScrollAnimation","_scrollTo","_startScrollAnimation","deltaZoom","_pauseZoomAnimation","_setZoom","_startZoomAnimation","_getRangeCoord","firstChild","ScrollBar","inject","nonce","wheelContainerOption","wheelContainer","wheelContainerElement","isString","Node","current","events","stop","isMouseEvent","dragFlag","result","startEvent","isPinch","movement","isDrag","isDouble","_startScrollAnimationBySpeed","startZoom","observer_1","ResizeObserver","observe","push","disconnect","nextOffsetX","nextOffsetY","getScrollAreaWidth","getScrollAreaHeight","viewportStyle","renderScroll","dest","distRatio","_zoomTimer","_scrollTimer","destPos","cancelAnimationFrame","event","_zoomByClient","width","height","rect","getContainer","originalZoomOffsetX","originalZoomOffsetY","zoomOptions","nextScrollLeft","nextScrollTop","centerX","centerY","nextCenterX","nextCenterY","prevScrollLeft","prevScrollTop","_scrollToType","nextScrollAbsoluteLeft","nextScrollAbsoluteTop","_emitScrollEvent","round","move","requestScrollLeft","requestScrollTop","names","prevScrollPos","minCoord","maxCoord","scrollPos","scrollAreaSize","zoomCoord","minThreshold","maxThreshold","rangeCoord","rangeOffsetCoord","_asLeft","_asTop","viewportSize","startSizeOffset","InfiniteViewer","Properties","prototype","property","attributes","enumerable","configurable","get","setter","camelize","set","Object","defineProperty","InfiniteViewerManager","modules"],"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"}