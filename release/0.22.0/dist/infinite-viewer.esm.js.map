{"version":3,"file":"infinite-viewer.esm.js","sources":["../src/consts.ts","../src/utils.ts","../src/ScrollBar.ts","../src/InfiniteViewerManager.tsx","../src/InfiniteViewer.tsx"],"sourcesContent":["import styled from \"css-styled\";\nimport { InfiniteViewerOptions } from \"./types\";\nimport getAgent from \"@egjs/agent\";\nimport { prefixCSS } from \"framework-utils\";\n\nexport const agent = getAgent();\nexport const IS_SAFARI = agent.browser.name === \"safari\";\n\nexport const PREFIX = \"infinite-viewer-\";\n\nexport const WRAPPER_CLASS_NAME = `${PREFIX}wrapper`;\nexport const RESTRICT_WRAPPER_CLASS_NAME = `${PREFIX}restrict-wrapper`;\nexport const SCROLL_AREA_CLASS_NAME = `${PREFIX}scroll-area`;\n\nexport const SCROLL_BAR_CLASS_NAME = `${PREFIX}scroll-bar`;\nexport const HORIZONTAL_SCROLL_BAR_CLASS_NAME = `${PREFIX}horizontal-scroll-bar`;\nexport const VERTICAL_SCROLL_BAR_CLASS_NAME = `${PREFIX}vertical-scroll-bar`;\nexport const SCROLL_THUMB_CLASS_NAME = `${PREFIX}scroll-thumb`;\n\nexport const injector = styled(prefixCSS(PREFIX, `\n{\n    position: relative;\n    overscroll-behavior: none;\n}\n.wrapper {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    top: 0;\n    left: 0;\n    will-change: scroll-position;\n}\n.restrict-wrapper {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n}\n.wrapper::-webkit-scrollbar {\n    display: none;\n}\n.scroll-area {\n    position:absolute;\n    top:0;\n    left:0;\n    transform-origin: 0 0;\n}\n.scroll-bar {\n    position:absolute;\n    width: 10px;\n    height: 10px;\n    box-sizing: border-box;\n    right: 0;\n    bottom: 0;\n    overflow: hidden;\n}\n.horizontal-scroll-bar {\n    width: 100%;\n    height: 14px;\n}\n.vertical-scroll-bar {\n    height: 100%;\n    width: 14px;\n}\n.scroll-thumb {\n    position:relative;\n    opacity: 0.7;\n    background: #333;\n    border-radius: 3px;\n    left: 0px;\n    top: 0px;\n    z-index: 10;\n    width: 6px;\n    height: 6px;\n    transition: all ease 0.2s;\n}\n.horizontal-scroll-bar .scroll-thumb {\n    margin: 4px 0px;\n    transition-property: margin, height, border-radius;\n}\n.vertical-scroll-bar .scroll-thumb {\n    margin: 0px 4px;\n    transition-property: margin, width, border-radius;\n}\n.horizontal-scroll-bar:hover .scroll-thumb {\n    height: 10px;\n    margin: 2px 0px;\n    border-radius: 5px;\n}\n.vertical-scroll-bar:hover .scroll-thumb {\n    width: 10px;\n    margin: 0px 2px;\n    border-radius: 5px;\n}\n`));\n\nexport const DEFAULT_OPTIONS = {\n    margin: 500,\n    threshold: 100,\n    zoom: 1,\n    zoomX: 1,\n    zoomY: 1,\n    rangeX: [-Infinity, Infinity],\n    rangeY: [-Infinity, Infinity],\n    rangeOffsetX: [0, 0],\n    rangeOffsetY: [0, 0],\n    wrapperElement: null,\n    scrollAreaElement: null,\n    horizontalScrollElement: null,\n    verticalScrollElement: null,\n    usePinch: false,\n    useAutoZoom: false,\n    useMouseDrag: false,\n    pinchThreshold: 30,\n    cspNonce: \"\",\n    maxPinchWheel: Infinity,\n    wheelScale: 0.01,\n    displayHorizontalScroll: true,\n    displayVerticalScroll: true,\n    useTransform: true,\n    useWheelPinch: true,\n    zoomRange: [0.001, Infinity],\n    wheelPinchKey: \"ctrl\" as const,\n    useWheelScroll: IS_SAFARI,\n    zoomOffsetX: \"50%\",\n    zoomOffsetY: \"50%\",\n    translateZ: 0,\n    useGesture: true,\n    useResizeObserver: false,\n    pinchDirection: \"all\" as const,\n    preventWheelClick: true,\n};\n\nexport const DEFAULT_EASING = (x: number) => 1 - Math.pow(1 - x, 3);\nexport const NAMES = {\n    horizontal: {\n        pos: \"Left\",\n        coord: \"X\",\n        size: \"Width\",\n    },\n    vertical: {\n        pos: \"Top\",\n        coord: \"Y\",\n        size: \"Height\",\n    },\n} as const;\n/**\n * @memberof InfiniteViewer\n */\nexport const CLASS_NAME = injector.className;\n\n/**\n * @memberof InfiniteViewer\n */\nexport const PROPERTIES = [\n    \"margin\",\n    \"threshold\",\n    \"zoomOffsetX\",\n    \"zoomOffsetY\",\n    \"zoom\",\n    \"zoomX\",\n    \"zoomY\",\n    \"rangeX\",\n    \"rangeY\",\n    \"rangeOffsetX\",\n    \"rangeOffsetY\",\n    \"usePinch\",\n    \"useMouseDrag\",\n    \"pinchThreshold\",\n    \"maxPinchWheel\",\n    \"wheelScale\",\n    \"displayVerticalScroll\",\n    \"displayHorizontalScroll\",\n    \"useWheelScroll\",\n    \"translateZ\",\n    \"useAutoZoom\",\n    \"wheelPinchKey\",\n    \"zoomRange\",\n    \"pinchDirection\",\n] as const;\n\n/**\n * @memberof InfiniteViewer\n */\nexport const OPTIONS = [\n    // ignore target, container,\n    ...PROPERTIES,\n    \"preventWheelClick\",\n    \"useWheel\",\n    \"useGesture\",\n    \"cspNonce\",\n    \"wrapperElement\",\n    \"scrollAreaElement\",\n    \"verticalScrollElement\",\n    \"horizontalScrollElement\",\n    \"useResizeObserver\",\n] as const;\n\n/**\n * @memberof InfiniteViewer\n */\nexport const EVENTS = [\n    \"scroll\",\n    \"abortPinch\",\n    \"dragStart\",\n    \"dragEnd\",\n    \"pinchStart\",\n    \"pinch\",\n] as const;\n\n/**\n * @memberof InfiniteViewer\n */\nexport const METHODS = [\n    \"getScrollLeft\",\n    \"getScrollTop\",\n    \"getScrollWidth\",\n    \"getScrollHeight\",\n    \"scrollTo\",\n    \"scrollBy\",\n    \"zoomBy\",\n    \"scrollCenter\",\n    \"getContainer\",\n    \"getViewport\",\n    \"getWrapper\",\n    \"setZoom\",\n    \"getRangeX\",\n    \"getRangeY\",\n    \"resize\",\n    \"getZoom\",\n    \"getZoomX\",\n    \"getZoomY\",\n] as const;\n\nexport const TINY_NUM = 0.000001;\n","import { OnDrag } from \"gesto\";\nimport { TINY_NUM } from \"./consts\";\nimport { AnimationOptions } from \"./types\";\n\nexport function measureSpeed(e: OnDrag) {\n    const { deltaX, deltaY, datas } = e;\n    const time = Date.now();\n    const prevSpeed = datas.speed;\n\n    if (!prevSpeed) {\n        datas.speed = [0, 0];\n        datas.time = time;\n        return;\n    }\n    const dt = time - datas.time;\n    datas.speed = [prevSpeed[0] / 2 + deltaX / dt, prevSpeed[1] / 2 + deltaY / dt];\n}\n\nexport function getDuration(speed: number[], a: number) {\n    const normalSpeed = Math.sqrt(speed[0] * speed[0] + speed[1] * speed[1]);\n\n    return Math.abs(normalSpeed / a);\n}\nexport function getDestPos(speed: number[], a: number) {\n    const duration = getDuration(speed, a);\n\n    return [\n        -speed[0] / 2 * duration,\n        -speed[1] / 2 * duration,\n    ];\n}\nexport function minmax(value: number, min: number, max: number) {\n    return Math.min(max, Math.max(min, value));\n}\n\nexport function abs(v: number) {\n    return Math.abs(v);\n}\n\nexport function getRange(\n    pos: number,\n    margin: number,\n    range: number[],\n    threshold: number,\n    isReal: boolean,\n) {\n    const min = isReal || isFinite(range[0])\n        ? range[0]\n        : Math.min(-1, Math.floor(pos / margin)) * margin - threshold;\n    const max = isReal || isFinite(range[1])\n        ? range[1]\n        : Math.max(1, Math.ceil(pos / margin)) * margin + threshold;\n\n    return [min, max];\n}\n\nexport function throttle(value: number) {\n    return Math.round(value / TINY_NUM) * TINY_NUM;\n}\n\n\nexport function checkDefault<T>(value: T | undefined | null, defaultValue: T): T {\n    return value != null ? value : defaultValue;\n}\n\n\n\nexport function startAnimation(\n    callback: (ratioDist: number) => void,\n    timerCallback: (next: () => void) => void,\n    options: AnimationOptions,\n) {\n    const duration = options.duration;\n    const easing = options.easing || ((x: number) => 1 - Math.pow(1 - x, 3));\n    const startTime = Date.now();\n    let prevTime = startTime;\n\n    const next = () => {\n        const now = Date.now();\n        let t = now - startTime;\n\n        if (duration < t) {\n            t = duration;\n        }\n        const ratio = easing(t / duration);\n        const prevRatio = easing((prevTime - startTime) / duration);\n\n        prevTime = now;\n\n        callback(ratio - prevRatio);\n\n        if (t >= duration) {\n            return;\n        }\n        timerCallback(next);\n    };\n    timerCallback(next);\n}\n","import Gesto from \"gesto\";\nimport {\n    SCROLL_BAR_CLASS_NAME, SCROLL_THUMB_CLASS_NAME,\n    HORIZONTAL_SCROLL_BAR_CLASS_NAME, VERTICAL_SCROLL_BAR_CLASS_NAME\n} from \"./consts\";\nimport { addClass, removeEvent, addEvent, throttle } from \"@daybrush/utils\";\nimport EventEmitter from \"@scena/event-emitter\";\nimport { abs } from \"./utils\";\n\nexport default class ScrollBar extends EventEmitter {\n    public isAppend: boolean = false;\n    public thumbElement!: HTMLElement;\n    public barElement!: HTMLElement;\n    private gesto!: Gesto;\n    private size: number = 0;\n    private scrollSize: number = 0;\n    private isHorizontal = false;\n\n    constructor(\n        private type: \"horizontal\" | \"vertical\",\n        container?: HTMLElement,\n    ) {\n        super();\n        const isHorizontal = type === \"horizontal\";\n        let thumbElement: HTMLElement;\n        let barElement: HTMLElement = container;\n\n        if (!container) {\n            barElement = document.createElement(\"div\");\n            thumbElement = document.createElement(\"div\");\n\n            barElement.insertBefore(thumbElement, null);\n            this.isAppend = true;\n        } else {\n            thumbElement = container.querySelector(`.${SCROLL_THUMB_CLASS_NAME}`);\n        }\n        addClass(\n            barElement,\n            isHorizontal ? HORIZONTAL_SCROLL_BAR_CLASS_NAME\n                : VERTICAL_SCROLL_BAR_CLASS_NAME,\n        );\n        addClass(barElement, SCROLL_BAR_CLASS_NAME);\n        addClass(thumbElement, SCROLL_THUMB_CLASS_NAME);\n\n        this.thumbElement = thumbElement;\n        this.barElement = barElement;\n        this.isHorizontal = isHorizontal;\n        this.gesto = new Gesto(barElement, {\n            container: window,\n        }).on(\"dragStart\", e => {\n            const target = e.inputEvent.target;\n            const datas = e.datas;\n            const isThumb = this.thumbElement === target;\n\n            if (!isThumb) {\n                setTimeout(() => {\n                    requestAnimationFrame(() => {\n                        const thumbRect = this.thumbElement.getBoundingClientRect();\n                        const pos1 = thumbRect[isHorizontal ? \"left\" : \"top\"];\n                        const thumbSize = thumbRect[isHorizontal ? \"width\" : \"height\"];\n                        const pos2 = pos1 + thumbSize;\n                        const clientPos = e[isHorizontal ? \"clientX\" : \"clientY\"];\n\n                        const endPos = clientPos - pos2;\n                        const startPos = clientPos - pos1;\n\n                        if (0 <= startPos && endPos <= 0) {\n                            return;\n                        }\n                        // thumbSize === containerSize\n                        // scrollWidth =\n                        this.scrollSize\n                        const clientScrollWidth = thumbSize / this.size * this.scrollSize;\n                        const pos = (0 < endPos ? endPos : startPos) / clientScrollWidth;\n                        const delta = pos * this.size;\n\n                        console.log(this.scrollSize, pos, delta);\n\n                        this.scrollBy(delta);\n                    });\n                }, 100);\n\n            }\n            datas.isThumb = isThumb;\n            e.inputEvent.stopPropagation();\n            e.inputEvent.preventDefault();\n        }).on(\"drag\", e => {\n            if (!e.datas.isThumb) {\n                return;\n            }\n            this.scrollBy(this.isHorizontal ? e.deltaX : e.deltaY);\n        });\n        addEvent(this.barElement, \"wheel\", this.onWheel, {\n            passive: false,\n        });\n    }\n    public scrollBy(delta: number) {\n        const ratio = delta / this.size;\n\n        this.trigger(\"scroll\", {\n            delta: this.scrollSize * ratio,\n        });\n    }\n    public render(\n        isDisplay: boolean,\n        containerSize: number,\n        scrollRange: number[],\n    ) {\n        const [startMargin, endMargin] = scrollRange;\n        const scrollSizeOffset = throttle(abs(startMargin) + endMargin, 0.001);\n        const scrollSize = containerSize + scrollSizeOffset;\n        const display = isDisplay && scrollSizeOffset ? \"block\" : \"none\";\n        const [dirName1, sizeName] = this.isHorizontal ? [\"X\", \"width\"] : [\"Y\", \"height\"];\n        const thumbSize = containerSize / scrollSize;\n        const thumbPos = endMargin / scrollSize / thumbSize;\n\n        this.size = containerSize;\n        this.scrollSize = scrollSize;\n        this.barElement.style.cssText = `display: ${display};`;\n        this.thumbElement.style.cssText\n            += `${sizeName}: ${thumbSize * 100}%;`\n            + `transform: translate${dirName1}(${thumbPos * 100}%)`;\n    }\n    public destroy() {\n        removeEvent(this.barElement, \"wheel\", this.onWheel);\n        this.gesto.off();\n        this.off();\n    }\n    private onWheel = (e: WheelEvent) => {\n        const delta = this.isHorizontal ? e.deltaX : e.deltaY;\n\n        if (delta) {\n            e.preventDefault();\n        }\n        this.trigger(\"scroll\", {\n            delta,\n        });\n    }\n}\n","import EventEmitter from \"@scena/event-emitter\";\nimport Gesto from \"gesto\";\nimport { InjectResult } from \"css-styled\";\nimport { Properties } from \"framework-utils\";\nimport { camelize, IObject, addEvent, removeEvent, addClass, convertUnitSize, between, isObject, isArray } from \"@daybrush/utils\";\nimport { InfiniteViewerOptions, InfiniteViewerProperties, InfiniteViewerEvents, OnPinch, AnimationOptions, ScrollOptions, ZoomOptions, GetScollPosOptions, InnerScrollOptions } from \"./types\";\nimport {\n    PROPERTIES, injector, CLASS_NAME, TINY_NUM,\n    DEFAULT_OPTIONS,\n    WRAPPER_CLASS_NAME, SCROLL_AREA_CLASS_NAME,\n    HORIZONTAL_SCROLL_BAR_CLASS_NAME, VERTICAL_SCROLL_BAR_CLASS_NAME, NAMES, DEFAULT_EASING, RESTRICT_WRAPPER_CLASS_NAME\n} from \"./consts\";\nimport { measureSpeed, getDuration, getDestPos, abs, getRange, checkDefault, startAnimation } from \"./utils\";\nimport ScrollBar from \"./ScrollBar\";\n\n@Properties(PROPERTIES as any, (prototype, property) => {\n    const attributes: IObject<any> = {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this.options[property];\n        },\n    };\n    const setter = camelize(`set ${property}`);\n    if (prototype[setter]) {\n        attributes.set = function (value) {\n            this[setter](value);\n        };\n    } else {\n        attributes.set = function (value) {\n            this.options[property] = value;\n        };\n    }\n    Object.defineProperty(prototype, property, attributes);\n})\n/**\n * @sort 1\n */\nclass InfiniteViewer extends EventEmitter<InfiniteViewerEvents> {\n    public options: InfiniteViewerOptions;\n    private injectResult!: InjectResult;\n    private wrapperElement!: HTMLElement;\n    private scrollAreaElement!: HTMLElement;\n    private horizontalScrollbar: ScrollBar;\n    private verticalScrollbar: ScrollBar;\n    private gesto!: Gesto;\n    private offsetX: number = 0;\n    private offsetY: number = 0;\n    private containerWidth: number = 0;\n    private containerHeight: number = 0;\n    private viewportWidth: number = 0;\n    private viewportHeight: number = 0;\n    private viewportScrollWidth: number = 0;\n    private viewportScrollHeight: number = 0;\n    private scrollLeft: number = 0;\n    private scrollTop: number = 0;\n    private _scrollTimer = 0;\n    private _zoomTimer = 0;\n\n    private _viewportElement: HTMLElement | null = null;\n    private _restrictWrapperElement: HTMLElement | null = null;\n    private dragFlag: boolean = false;\n    private isLoop: boolean = false;\n    private _tempScale: number[] = [1, 1];\n    private _tempRect: { top: number, left: number, width: number, height: number } | null = null;\n    private _tempRectTimer: number | null = null;\n    private _onDestroys: Array<() => void> = [];\n    private _asLeft = 0;\n    private _asTop = 0;\n    /**\n     * @sort 1\n     */\n    constructor(\n        private _containerElement: HTMLElement,\n        viewportElement: HTMLElement | Partial<InfiniteViewerOptions> = {},\n        options: Partial<InfiniteViewerOptions> = {},\n    ) {\n        super();\n\n\n        if (viewportElement instanceof Element) {\n            this._viewportElement = viewportElement;\n            this.options = {\n                ...DEFAULT_OPTIONS,\n                ...options,\n            };\n        } else {\n            this._viewportElement = _containerElement.children[0] as HTMLElement;\n            this.options = {\n                ...DEFAULT_OPTIONS,\n                ...viewportElement,\n            };\n        }\n        this.init();\n    }\n    /**\n     * Get Container Element\n     */\n    public getContainer(): HTMLElement {\n        return this._containerElement;\n    }\n    /**\n     * Get Viewport Element\n     */\n    public getViewport(): HTMLElement {\n        return this._viewportElement;\n    }\n    /**\n     * Get Wrapper Element\n     */\n    public getWrapper(): HTMLElement {\n        return this.wrapperElement;\n    }\n    /**\n     * Get Scroll Area Element\n     */\n    public geScrollArea(): HTMLElement {\n        return this.scrollAreaElement;\n    }\n    /**\n     * Destroy elements, properties, and events.\n     */\n    public destroy(): void {\n        this.off();\n        this.gesto.unset();\n        this.verticalScrollbar.destroy();\n        this.horizontalScrollbar.destroy();\n        this.injectResult.destroy();\n        const containerElement = this._containerElement;\n\n        this._onDestroys.forEach(callback => {\n            callback();\n        });\n        removeEvent(this.wrapperElement, \"scroll\", this._onScroll);\n        removeEvent(containerElement, \"wheel\", this.onWheel);\n        removeEvent(containerElement, \"gesturestart\", this.onGestureStart);\n        removeEvent(containerElement, \"gesturechange\", this.onGestureChange);\n        removeEvent(containerElement, \"gesturesend\", this.onGestureEnd);\n\n        this.gesto = null;\n        this.injectResult = null;\n        this._containerElement = null;\n        this._viewportElement = null;\n        this.options = null;\n    }\n    /**\n     * Gets the number of pixels that an element's content is scrolled vertically.\n     */\n    public getScrollTop(options: GetScollPosOptions | boolean = {}) {\n        let range = false;\n        let absolute = false;\n\n        if (isObject(options)) {\n            range = options.range;\n            absolute = options.absolute;\n        } else {\n            range = options;\n        }\n        const zoom = this.zoomY;\n        const pos = this.scrollTop / zoom + this.offsetY\n            + (range ? abs(this.getRangeY()[0]) : 0);\n\n        return absolute ? pos * zoom : pos;\n    }\n    /**\n     * Gets the number of pixels that an element's content is scrolled vertically.\n     */\n    public getScrollLeft(options: GetScollPosOptions | boolean = {}) {\n        let range = false;\n        let absolute = false;\n\n        if (isObject(options)) {\n            range = options.range;\n            absolute = options.absolute;\n        } else {\n            range = options;\n        }\n        const zoom = this.zoomX;\n        const pos = this.scrollLeft / zoom + this.offsetX\n            + (range ? abs(this.getRangeX()[0]) : 0);\n\n        return absolute ? pos * zoom : pos;\n    }\n    /**\n     * Gets measurement of the width of an element's content with overflow\n     */\n    public getScrollWidth(isZoom?: boolean) {\n        const range = this._getScrollRangeX();\n        const zoom = this.zoomX;\n        const size = this.containerWidth / zoom + abs(range[0]) + range[1];\n\n        return isZoom ? size : size * zoom;\n    }\n    /**\n     * Gets measurement of the height of an element's content with overflow\n     */\n    public getScrollHeight(isZoom?: boolean) {\n        const range = this._getScrollRangeY();\n        const zoom = this.zoomY;\n        const size = this.containerHeight / zoom + abs(range[0]) + range[1];\n\n        return isZoom ? size : size * zoom;\n    }\n\n    /**\n     * Scroll the element to the center\n     */\n    public scrollCenter(options?: ScrollOptions) {\n        this.resize();\n\n        const zoomX = this.zoomX;\n        const zoomY = this.zoomY;\n\n        let left = -(this.containerWidth / zoomX - this.viewportWidth) / 2;\n        let top = -(this.containerHeight / zoomY - this.viewportHeight) / 2;\n\n        if (options?.absolute) {\n            left *= zoomX;\n            top *= zoomY;\n        }\n\n        return this.scrollTo(left, top, options);\n    }\n    /**\n     * Update Viewer Sizes\n     * @method\n     */\n    public resize = () => {\n        const {\n            offsetWidth: containerWidth,\n            offsetHeight: containerHeight,\n        } = this._containerElement;\n        const {\n            offsetWidth: viewportWidth,\n            offsetHeight: viewportHeight,\n            scrollWidth: viewportScrollWidth,\n            scrollHeight: viewportScrollHeight,\n        } = this._viewportElement;\n\n        this.containerWidth = containerWidth;\n        this.containerHeight = containerHeight;\n        this.viewportWidth = viewportWidth;\n        this.viewportHeight = viewportHeight;\n        this.viewportScrollWidth = Math.max(viewportWidth, viewportScrollWidth);\n        this.viewportScrollHeight = Math.max(viewportWidth, viewportScrollHeight);\n\n        this.render();\n        this._scrollBy(0, 0);\n    }\n    /**\n     * Scrolls the container by the given amount.\n     */\n    public scrollBy(deltaX: number, deltaY: number, options?: ScrollOptions) {\n        this._pauseScrollAnimation();\n        if (!options || !options.duration) {\n            let scrollLeft = this.getScrollLeft();\n            let scrollTop = this.getScrollTop();\n\n            if (options?.absolute) {\n                scrollLeft *= this.zoomX;\n                scrollTop *= this.zoomY;\n            }\n            return this._scrollTo(scrollLeft + deltaX, scrollTop + deltaY, options);\n        } else {\n            this._startScrollAnimation([deltaX, deltaY], options);\n            return true;\n        }\n    }\n    /**\n     * Scrolls the container to set of coordinates.\n     * @param scrollLeft\n     * @param scrollTop\n     */\n    public scrollTo(x: number, y: number, options?: ScrollOptions) {\n        this._pauseScrollAnimation();\n        if (!options || !options.duration) {\n            return this._scrollTo(x, y, options);\n        } else {\n            let scrollLeft = this.getScrollLeft();\n            let scrollTop = this.getScrollTop();\n\n            if (options?.absolute) {\n                scrollLeft *= this.zoomX;\n                scrollTop *= this.zoomY;\n            }\n            return this.scrollBy(x - scrollLeft, y - scrollTop, options);\n        }\n    }\n    /**\n     * Set viewer zoom by the given amount\n     */\n    public zoomBy(deltaZoom: number | number[], options?: ZoomOptions) {\n        this._pauseZoomAnimation();\n        const [deltaX, deltaY] = isArray(deltaZoom)\n        ? deltaZoom\n        : [deltaZoom, deltaZoom];\n\n        if (!options || !options.duration) {\n            this._setZoom([\n                this.zoomX + deltaX,\n                this.zoomY + deltaY,\n            ], options);\n        } else {\n            this._startZoomAnimation([deltaX, deltaY], options);\n        }\n    }\n    /**\n     * Set viewer zoom\n     */\n    public setZoom(zoom: number | number[], options?: ZoomOptions) {\n        this._pauseZoomAnimation();\n\n        if (!options || !options.duration) {\n            this._setZoom(zoom, options);\n        } else {\n            const [zoomX, zoomY] = isArray(zoom)\n            ? zoom\n            : [zoom, zoom];\n            this._startZoomAnimation([\n                zoomX - this.zoomX,\n                zoomY - this.zoomY,\n            ], options);\n        }\n    }\n    /**\n     * Get viewer zoom\n     */\n    public getZoom() {\n        return (this.zoomX + this.zoomY) / 2;\n    }\n    /**\n     * Get viewer zoomX\n     * @since 0.20.0\n     */\n    public getZoomX() {\n        return this.zoomX;\n    }\n    /**\n     * Get viewer zoom\n     * @since 0.20.0\n     */\n    public getZoomY() {\n        return this.zoomY;\n    }\n    /**\n     * get x ranges\n     */\n    public getRangeX(isZoom?: boolean, isReal?: boolean) {\n        return this._getRangeCoord(\"horizontal\", isZoom, isReal);\n    }\n    /**\n     * get y ranges\n     */\n    public getRangeY(isZoom?: boolean, isReal?: boolean) {\n        return this._getRangeCoord(\"vertical\", isZoom, isReal);\n    }\n\n    private init() {\n        // infinite-viewer(container)\n        // viewportㅌ\n        // children\n        const containerElement = this._containerElement;\n        const options = this.options;\n\n        // vanilla\n        let wrapperElement = options.wrapperElement\n            || containerElement.querySelector(`.${WRAPPER_CLASS_NAME}`);\n        let scrollAreaElement = options.scrollAreaElement\n            || containerElement.querySelector(`.${SCROLL_AREA_CLASS_NAME}`);\n        let restrictElement = containerElement.querySelector<HTMLElement>(`.${RESTRICT_WRAPPER_CLASS_NAME}`);\n        const horizontalScrollElement = options.horizontalScrollElement\n            || containerElement.querySelector(`.${HORIZONTAL_SCROLL_BAR_CLASS_NAME}`);\n        const verticalScrollElement = options.verticalScrollElement\n            || containerElement.querySelector(`.${VERTICAL_SCROLL_BAR_CLASS_NAME}`);\n\n        if (!wrapperElement) {\n            wrapperElement = document.createElement(\"div\");\n            // restrictElement = document.createElement(\"div\");\n\n            // restrictElement.insertBefore(this._viewportElement, null);\n            wrapperElement.insertBefore(this._viewportElement, null);\n            containerElement.insertBefore(wrapperElement, null);\n        }\n        this._restrictWrapperElement = restrictElement;\n        this.wrapperElement = wrapperElement;\n\n        if (!scrollAreaElement) {\n            scrollAreaElement = document.createElement(\"div\");\n\n            wrapperElement.insertBefore(scrollAreaElement, wrapperElement.firstChild);\n        }\n        this.scrollAreaElement = scrollAreaElement;\n\n        addClass(containerElement, CLASS_NAME);\n        addClass(wrapperElement, WRAPPER_CLASS_NAME);\n        // addClass(restrictElement, RESTRICT_WRAPPER_CLASS_NAME);\n        addClass(scrollAreaElement, SCROLL_AREA_CLASS_NAME);\n\n        this.horizontalScrollbar = new ScrollBar(\"horizontal\", horizontalScrollElement);\n        this.verticalScrollbar = new ScrollBar(\"vertical\", verticalScrollElement);\n\n        this.horizontalScrollbar.on(\"scroll\", e => {\n            this.scrollBy(e.delta / this.zoomX, 0);\n        });\n\n        this.verticalScrollbar.on(\"scroll\", e => {\n            this.scrollBy(0, e.delta / this.zoomY);\n        });\n\n        if (this.horizontalScrollbar.isAppend) {\n            containerElement.insertBefore(this.horizontalScrollbar.barElement, null);\n        }\n        if (this.verticalScrollbar.isAppend) {\n            containerElement.insertBefore(this.verticalScrollbar.barElement, null);\n        }\n        this.injectResult = injector.inject(containerElement, {\n            nonce: this.options.cspNonce,\n        });\n        /**\n         * the `dragStart` event fires when `touchstart` does occur.\n         * @memberof InfiniteViewer\n         * @event dragStart\n         * @param {InfiniteViewer.OnDragStart} - Parameters for the `dragStart` event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         * ).on(\"dragStart\", e => {\n         *   console.log(e.inputEvent);\n         * });\n         */\n        /**\n         * the `drag` event fires when `touch` does occur.\n         * @memberof InfiniteViewer\n         * @event drag\n         * @param {InfiniteViewer.OnDrag} - Parameters for the `drag` event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         * ).on(\"drag\", e => {\n         *   console.log(e.inputEvent);\n         * });\n         */\n        /**\n         * the `dragEnd` event fires when `touchend` does occur.\n         * @memberof InfiniteViewer\n         * @event dragEnd\n         * @param {InfiniteViewer.OnDragEnd} - Parameters for the `dragEnd` event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         * ).on(\"dragEnd\", e => {\n         *   console.log(e.inputEvent);\n         * });\n         */\n        /**\n         * the `abortPinch` event fires when `pinch` event does not occur by dragging a certain area.\n         * @memberof InfiniteViewer\n         * @event abortPinch\n         * @param {InfiniteViewer.OnAbortPinch} - Parameters for the abortPinch event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         *   {\n         *     usePinch: true,\n         *   }\n         * ).on(\"abortPinch\", e => {\n         *   console.log(e.inputEvent);\n         * });\n         */\n        /**\n         * the `pinch` event fires when two points pinch the viewer\n         * The pinchStart and abortPinch events do not occur when pinching through the wheel.\n         * @memberof InfiniteViewer\n         * @event pinch\n         * @param {InfiniteViewer.OnPinch} - Parameters for the `pinch` event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         *   {\n         *     usePinch: true,\n         *   }\n         * ).on(\"pinch\", e => {\n         *   console.log(e.zoom, e.inputEvent);\n         * });\n         */\n        this.gesto = new Gesto(containerElement, {\n            container: window,\n            events: [\"touch\", \"mouse\"],\n            preventWheelClick: this.options.preventWheelClick ?? true,\n        }).on(\"dragStart\", e => {\n            const {\n                inputEvent,\n                stop,\n                datas,\n            } = e;\n            if (!this.useMouseDrag && e.isMouseEvent) {\n                stop();\n                return;\n            }\n            this._pauseScrollAnimation();\n            this.dragFlag = false;\n            const result = this.trigger(\"dragStart\", e);\n\n            if (result === false) {\n                stop();\n                return;\n            }\n            inputEvent.preventDefault();\n            datas.startEvent = inputEvent;\n        }).on(\"drag\", e => {\n            if (!this.options.usePinch || e.isPinch || (this.useMouseDrag && e.isMouseEvent)) {\n                this.trigger(\"drag\", {\n                    ...e,\n                    inputEvent: e.inputEvent,\n                });\n                measureSpeed(e);\n                this.scrollBy(-e.deltaX / this.zoomX, -e.deltaY / this.zoomY);\n            } else if (!this.dragFlag && e.movement > options.pinchThreshold) {\n                this.dragFlag = true;\n\n                this.trigger(\"abortPinch\", {\n                    inputEvent: e.datas.startEvent || e.inputEvent,\n                });\n            }\n        }).on(\"dragEnd\", e => {\n            this.trigger(\"dragEnd\", {\n                isDrag: e.isDrag,\n                isDouble: e.isDouble,\n                inputEvent: e.inputEvent,\n            });\n            this._startScrollAnimationBySpeed(e.datas.speed);\n        }).on(\"pinchStart\", ({ inputEvent, datas, stop }) => {\n            inputEvent.preventDefault();\n            this._pauseScrollAnimation();\n            datas.startZoom = [this.zoomX, this.zoomY];\n\n            const result = this.trigger(\"pinchStart\", {\n                inputEvent,\n            });\n            if (result === false) {\n                stop();\n            }\n            this._setClientRect();\n        }).on(\"pinch\", e => {\n            const scale = e.scale;\n            const pinchDirection = this.options.pinchDirection;\n\n            this._triggerPinch({\n                rotation: e.rotation,\n                distance: e.distance,\n                scale: e.scale,\n                inputEvent: e.inputEvent,\n                isWheel: false,\n                zoom: e.datas.startZoom * scale,\n                zoomX: this.zoomX * (pinchDirection === \"vertical\" ? 1 : scale),\n                zoomY: this.zoomY * (pinchDirection === \"horizontal\" ? 1 : scale),\n                clientX: e.clientX,\n                clientY: e.clientY,\n                ratioX: 0,\n                ratioY: 0,\n            });\n        }).on(\"pinchEnd\", () => {\n            this._tempRect = null;\n        });\n\n        addEvent(wrapperElement, \"scroll\", this._onScroll);\n\n        if (options.useResizeObserver) {\n            const observer = new ResizeObserver(() => {\n                this.resize();\n            });\n\n            observer.observe(this._viewportElement);\n            observer.observe(this._containerElement);\n\n\n            this._onDestroys.push(() => {\n                observer.disconnect();\n            });\n        } else {\n            addEvent(window, \"resize\", this.resize);\n\n            this._onDestroys.push(() => {\n                removeEvent(window, \"resize\", this.resize);\n            })\n        }\n\n        if (options.useWheelPinch || options.useWheelScroll) {\n            addEvent(containerElement, \"wheel\", this.onWheel, {\n                passive: false,\n            });\n        }\n        if (options.useGesture) {\n            addEvent(containerElement, \"gesturestart\", this.onGestureStart, {\n                passive: false,\n            });\n            addEvent(containerElement, \"gesturechange\", this.onGestureChange, {\n                passive: false,\n            });\n        }\n        this.resize();\n    }\n    private render() {\n        const {\n            offsetX,\n            offsetY,\n            zoomX = DEFAULT_OPTIONS.zoomX,\n            zoomY = DEFAULT_OPTIONS.zoomY,\n            translateZ = 0,\n            rangeX,\n            rangeY,\n            containerWidth,\n            containerHeight,\n        } = this;\n        const {\n            useTransform = DEFAULT_OPTIONS.useTransform,\n        } = this.options;\n        let nextOffsetX = -offsetX * zoomX;\n        let nextOffsetY = -offsetY * zoomY;\n\n        this.scrollAreaElement.style.cssText\n            = `width:calc(100% + ${this.getScrollAreaWidth()}px);`\n            + `height:calc(100% + ${this.getScrollAreaHeight()}px);`;\n\n        // const wrapperStyle = this._restrictWrapperElement.style;\n        const viewportStyle = this._viewportElement.style;\n        // const restrictOffsetX = containerWidth > rangeX[1] ? containerWidth - rangeX[1]: 0;\n        // const restrictOffsetY = containerHeight > rangeY[1] ? containerHeight - rangeY[1] : 0;\n\n        // // wrapperStyle.overflowX = \"visible\";\n        // // wrapperStyle.overflowY = \"visible\";\n        // // wrapperStyle.overflowClipMargin = \"0px\";\n\n        // // if (restrictOffsetX) {\n        // //     wrapperStyle.overflowX = \"clip\";\n        // // }\n        // // if (restrictOffsetY) {\n        // //     wrapperStyle.overflowY = \"clip\";\n        // // }\n\n        // nextOffsetX -= restrictOffsetX;\n        // nextOffsetX -= restrictOffsetY;\n        if (useTransform === false) {\n            viewportStyle.cssText += `position: relative; left: ${nextOffsetX}px; top: ${nextOffsetY}px; `;\n\n            // if (restrictOffsetX || restrictOffsetY) {\n            //     viewportStyle.cssText += `position: relative; left: ${restrictOffsetX}px; top: ${restrictOffsetY}px`;\n            // }\n        } else {\n            viewportStyle.cssText += `transform-origin: 0 0;`\n                + `transform:translate3d(${nextOffsetX}px, ${nextOffsetY}px, ${translateZ}px) scale(${zoomX}, ${zoomY});`;\n\n            // if (restrictOffsetX || restrictOffsetY) {\n            //     viewportStyle.cssText += `transform:translate3d(${restrictOffsetX}px, ${restrictOffsetY}px, 0px)`;\n            // }\n        }\n        this.renderScroll();\n    }\n    private renderScroll() {\n        const {\n            containerWidth,\n            containerHeight,\n            zoomX,\n            zoomY,\n        } = this;\n\n        this.horizontalScrollbar.render(\n            this.displayHorizontalScroll,\n            containerWidth / zoomX,\n            this._getScrollRangeX(),\n        );\n        this.verticalScrollbar.render(\n            this.displayVerticalScroll,\n            containerHeight / zoomY,\n            this._getScrollRangeY(),\n        );\n    }\n    private move(scrollLeft: number, scrollTop: number) {\n        const wrapperElement = this.wrapperElement;\n\n        wrapperElement.scrollLeft = scrollLeft;\n        wrapperElement.scrollTop = scrollTop;\n    }\n    private _onScroll = () => {\n        const { scrollLeft, scrollTop } = this.wrapperElement;\n        const {\n            zoom = DEFAULT_OPTIONS.zoom,\n        } = this;\n        const deltaX = scrollLeft - this.scrollLeft;\n        const deltaY = scrollTop - this.scrollTop;\n        const viewerScrollLeft = this.getScrollLeft();\n        const viewerScrollTop = this.getScrollTop();\n\n        if (this.isLoop) {\n            this.isLoop = false;\n        }\n        this.scrollLeft = scrollLeft;\n        this.scrollTop = scrollTop;\n        this.scrollTo(\n            viewerScrollLeft + deltaX / zoom,\n            viewerScrollTop + deltaY / zoom,\n        );\n    }\n    private onWheel = (e: WheelEvent) => {\n        const options = this.options;\n        const pinchDirection = options.pinchDirection;\n        const maxPinchWheel = options.maxPinchWheel || Infinity;\n\n        const isKeydown = e[`${this.wheelPinchKey}Key`] || e.ctrlKey;\n\n        if (options.useWheelPinch && isKeydown) {\n            let deltaY = e.deltaY;\n            const sign = deltaY >= 0 ? 1 : -1;\n            const distance = Math.min(maxPinchWheel, Math.abs(deltaY));\n\n\n            deltaY = sign * distance;\n            const delta = -deltaY;\n            const scale = Math.max(1 + delta * (options.wheelScale || 0.01), TINY_NUM);\n\n            clearTimeout(this._tempRectTimer);\n            this._tempRectTimer = window.setTimeout(() => {\n                this._tempRect = null;\n            }, 100);\n            this._triggerPinch({\n                distance,\n                scale,\n                rotation: 0,\n                zoom: this.zoom * scale,\n                zoomX: this.zoomX * (pinchDirection === \"vertical\" ? 1 : scale),\n                zoomY: this.zoomY * (pinchDirection === \"horizontal\" ? 1 : scale),\n                inputEvent: e,\n                isWheel: true,\n                clientX: e.clientX,\n                clientY: e.clientY,\n                ratioX: 0,\n                ratioY: 0,\n            });\n        } else if (options.useWheelScroll) {\n            let deltaX = e.deltaX;\n            let deltaY = e.deltaY;\n\n            if (e.shiftKey && !deltaX) {\n                deltaX = deltaY;\n                deltaY = 0;\n            }\n            this.scrollBy(deltaX / this.zoomX, deltaY / this.zoomY);\n        } else {\n            return;\n        }\n        e.preventDefault();\n    }\n    private onGestureStart = (e: any) => {\n        this._tempScale = [this.zoomX, this.zoomY];\n        this._setClientRect();\n        e.preventDefault();\n    }\n    private onGestureChange = (e: any) => {\n        e.preventDefault();\n        if (this.gesto.isFlag() || !this._tempScale) {\n            this._tempScale =  [1, 1];\n            return;\n        }\n        const scale = e.scale;\n        const zoomX = this._tempScale[0];\n        const zoomY = this._tempScale[1];\n        const pinchDirection = this.options.pinchDirection;\n\n        this._triggerPinch({\n            distance: 0,\n            scale,\n            rotation: e.rotation,\n            inputEvent: e,\n            isWheel: true,\n            zoom: (zoomX + zoomY) * scale / 2,\n            zoomX: zoomX * (pinchDirection === \"vertical\" ? 1 : scale),\n            zoomY: zoomY * (pinchDirection === \"horizontal\" ? 1 : scale),\n            clientX: e.clientX,\n            clientY: e.clientY,\n            ratioX: 0,\n            ratioY: 0,\n        });\n    }\n    private onGestureEnd = () => {\n\n    }\n    private _startZoomAnimation(dest: number[], options: ZoomOptions) {\n        if (!dest) {\n            return;\n        }\n        const duration = options.duration;\n        const easing = options.easing || DEFAULT_EASING;\n\n        startAnimation(\n            distRatio => this._setZoom(\n                [\n                    this.zoomX + dest[0] * distRatio,\n                    this.zoomY + dest[1] * distRatio,\n                ],\n                options,\n            ),\n            next => {\n                this._zoomTimer = requestAnimationFrame(next);\n            },\n            {\n                easing,\n                duration,\n            },\n        );\n    }\n    private _startScrollAnimation(dest: number[], options: AnimationOptions) {\n        if (!dest[0] && !dest[1]) {\n            return;\n        }\n        const duration = options.duration;\n        const easing = options.easing || DEFAULT_EASING;\n\n        startAnimation(\n            distRatio => this._scrollBy(\n                dest[0] * distRatio,\n                dest[1] * distRatio,\n                options,\n            ),\n            next => {\n                this._scrollTimer = requestAnimationFrame(next);\n            },\n            {\n                easing,\n                duration,\n            },\n        );\n    }\n    private _startScrollAnimationBySpeed(speed: number[]) {\n        if (!speed || (!speed[0] && !speed[1])) {\n            return;\n        }\n        const a = -0.0006;\n        const duration = getDuration(speed, a);\n        const destPos = getDestPos(speed, a);\n\n        return this._startScrollAnimation(destPos, {\n            duration,\n        })\n\n    }\n    private _pauseScrollAnimation() {\n        cancelAnimationFrame(this._scrollTimer);\n        this._scrollTimer = 0;\n    }\n    private _pauseZoomAnimation() {\n        cancelAnimationFrame(this._zoomTimer);\n        this._zoomTimer = 0;\n    }\n    private getScrollAreaWidth() {\n        const [min, max] = this.getRangeX(true);\n        return min || max ? this.margin * 2 : 0;\n    }\n    private getScrollAreaHeight() {\n        const [min, max] = this.getRangeY(true);\n        return min || max ? this.margin * 2 : 0;\n    }\n    private _triggerPinch(event: OnPinch) {\n        const {\n            clientX,\n            clientY,\n            zoomX,\n            zoomY,\n        } = event;\n        if (this.useAutoZoom) {\n            this._zoomByClient([zoomX, zoomY], clientX, clientY);\n        }\n        if (!this._tempRect) {\n            this._setClientRect();\n        }\n        const zoomRange = this.zoomRange;\n        const {\n            left,\n            top,\n            width,\n            height,\n        } = this._tempRect;\n        const ratioX = (clientX - left) / width * 100;\n        const ratioY = (clientY - top) / height * 100;\n\n        this.trigger(\"pinch\", {\n            ...event,\n            zoom: between((zoomX + zoomY) / 2, zoomRange[0], zoomRange[1]),\n            zoomX: between(zoomX, zoomRange[0], zoomRange[1]),\n            zoomY: between(zoomY, zoomRange[0], zoomRange[1]),\n            ratioX,\n            ratioY,\n        });\n    }\n    private _setClientRect() {\n        const rect = this.getContainer().getBoundingClientRect();\n        this._tempRect = {\n            left: rect.left,\n            top: rect.top,\n            width: rect.width,\n            height: rect.height,\n        };\n    }\n    private _zoomByClient(zoom: number[], clientX: number, clientY: number) {\n        if (!this._tempRect) {\n            this._setClientRect();\n        }\n        const {\n            left,\n            top,\n            width,\n            height,\n        } = this._tempRect;\n        const options = this.options;;\n\n        const originalZoomOffsetX = options.zoomOffsetX;\n        const originalZoomOffsetY = options.zoomOffsetY;\n\n        options.zoomOffsetX = `${(clientX - left) / width * 100}%`;\n        options.zoomOffsetY = `${(clientY - top) / height * 100}%`;\n\n        this._setZoom(zoom, {\n            zoomBase: \"screen\",\n        });\n\n        options.zoomOffsetX = originalZoomOffsetX;\n        options.zoomOffsetY = originalZoomOffsetY;\n    }\n    private _setZoom(\n        zoom: number | number[],\n        zoomOptions: ZoomOptions = {},\n    ) {\n        const zoomBase = zoomOptions.zoomBase;\n        const {\n            containerWidth,\n            containerHeight,\n            zoomX: prevZoomX,\n            zoomY: prevZoomY,\n            zoomRange\n        } = this;\n        let {\n            zoomOffsetX = DEFAULT_OPTIONS.zoomOffsetX,\n            zoomOffsetY = DEFAULT_OPTIONS.zoomOffsetY,\n        } = this;\n        if (\"zoomOffsetX\" in zoomOptions) {\n            zoomOffsetX = zoomOptions.zoomOffsetX;\n        }\n        if (\"zoomOffsetY\" in zoomOptions) {\n            zoomOffsetY = zoomOptions.zoomOffsetY;\n        }\n\n        const scrollLeft = this.getScrollLeft();\n        const scrollTop = this.getScrollTop();\n\n        const [zoomX, zoomY] = isArray(zoom) ? zoom : [zoom, zoom];\n        const nextZoomX = between(zoomX, zoomRange[0], zoomRange[1]);\n        const nextZoomY = between(zoomY, zoomRange[0], zoomRange[1]);\n        const options = this.options;\n\n        options.zoomX = nextZoomX;\n        options.zoomY = nextZoomY;\n        options.zoom = (nextZoomX + nextZoomY) / 2;\n\n        const nextScrollLeft = this.getScrollLeft();\n        const nextScrollTop = this.getScrollTop();\n\n\n        let zoomXPos = 0;\n        let zoomYPos = 0;\n\n        if (zoomBase === \"viewport\") {\n            zoomXPos = (-scrollLeft + convertUnitSize(`${zoomOffsetX}`, this.viewportWidth)) * prevZoomX;\n            zoomYPos = (-scrollTop + convertUnitSize(`${zoomOffsetY}`, this.viewportHeight)) * prevZoomY;\n        } else {\n            zoomXPos = convertUnitSize(`${zoomOffsetX}`, containerWidth);\n            zoomYPos = convertUnitSize(`${zoomOffsetY}`, containerHeight);\n        }\n\n        const centerX = scrollLeft + zoomXPos / prevZoomX;\n        const centerY = scrollTop + zoomYPos / prevZoomY;\n\n        const nextCenterX = nextScrollLeft + zoomXPos / nextZoomX;\n        const nextCenterY = nextScrollTop + zoomYPos / nextZoomY;\n\n        this._scrollBy(centerX - nextCenterX, centerY - nextCenterY, {\n            zoom: !!(nextZoomX - prevZoomX || nextZoomY - prevZoomY),\n        });\n        this.render();\n    }\n    private _scrollBy(deltaX: number, deltaY: number, options?: InnerScrollOptions) {\n        let scrollLeft = this.getScrollLeft();\n        let scrollTop = this.getScrollTop();\n\n        if (options?.absolute) {\n            scrollLeft *= this.zoomX;\n            scrollTop *= this.zoomY;\n        }\n        return this._scrollTo(scrollLeft + deltaX, scrollTop + deltaY, options);\n    }\n    private _scrollTo(x: number, y: number, options?: InnerScrollOptions) {\n        const {\n            scrollLeft: prevScrollLeft,\n            scrollTop: prevScrollTop,\n        } = this;\n\n        const isAbsolute = options?.absolute;\n        this._scrollToType(\"horizontal\", x, isAbsolute);\n        this._scrollToType(\"vertical\", y, isAbsolute);\n\n        const scrollLeft = this.scrollLeft;\n        const scrollTop = this.scrollTop;\n        this.render();\n        const nextScrollAbsoluteLeft = this.getScrollLeft();\n        const nextScrollAbsoluteTop = this.getScrollTop();\n\n        this._emitScrollEvent(nextScrollAbsoluteLeft, nextScrollAbsoluteTop, options?.zoom);\n\n        if (Math.round(prevScrollLeft) !== scrollLeft || Math.round(prevScrollTop) !== scrollTop) {\n            this.isLoop = true;\n            this.move(scrollLeft, scrollTop);\n            requestAnimationFrame(() => {\n                if (!this.isLoop) {\n                    return;\n                }\n                this.isLoop = false;\n                const {\n                    scrollLeft: requestScrollLeft,\n                    scrollTop: requestScrollTop,\n                } = this.wrapperElement;\n\n                this.scrollLeft = requestScrollLeft;\n                this.scrollTop = requestScrollTop;\n\n                if (\n                    scrollLeft !== Math.round(requestScrollLeft)\n                    || scrollTop !== Math.round(requestScrollTop)\n                ) {\n                    this._scrollTo(nextScrollAbsoluteLeft, nextScrollAbsoluteTop);\n                }\n            });\n            return false;\n        }\n        return true;\n    }\n    private _scrollToType(type: \"horizontal\" | \"vertical\", coord: number, isAbsolute?: boolean) {\n        const names = NAMES[type];\n        const {\n            margin = DEFAULT_OPTIONS.margin,\n            threshold = DEFAULT_OPTIONS.threshold,\n        } = this;\n        const prevScrollPos = this[`scroll${names.pos}`];\n        const [minCoord, maxCoord] = this[`getRange${names.coord}`](true, true);\n\n        let scrollPos = Math.round(prevScrollPos);\n\n        const scrollAreaSize = this[`getScrollArea${names.size}`]();\n        const zoom = this[`zoom${names.coord}`];\n\n        if (isAbsolute) {\n            coord = coord / zoom;\n        }\n        const zoomCoord = coord * zoom;\n\n        if (minCoord === maxCoord) {\n            scrollPos = minCoord;\n            coord = minCoord / zoom;\n        } else if (zoomCoord - threshold <= minCoord) {\n            const minThreshold = Math.max(0, zoomCoord - minCoord);\n\n            scrollPos = minThreshold;\n            coord = (minCoord + minThreshold) / zoom;\n        } else if (zoomCoord + threshold >= maxCoord) {\n            const maxThreshold = Math.max(0, maxCoord - zoomCoord);\n\n            scrollPos = scrollAreaSize - maxThreshold;\n            coord = (maxCoord - maxThreshold) / zoom;\n        } else if (scrollPos < threshold) {\n            scrollPos += margin;\n        } else if (scrollPos > scrollAreaSize - threshold) {\n            scrollPos -= margin;\n        }\n\n        scrollPos = Math.round(scrollPos);\n\n        this[`scroll${names.pos}`] = scrollPos;\n        this[`offset${names.coord}`] = coord - scrollPos / zoom;\n    }\n    private _getRangeCoord(type: \"vertical\" | \"horizontal\", isZoom?: boolean, isReal?: boolean) {\n        const {\n            margin = DEFAULT_OPTIONS.margin,\n            threshold,\n        } = this;\n\n        const names = NAMES[type];\n        const rangeCoord = checkDefault(\n            this[`range${names.coord}`],\n            DEFAULT_OPTIONS[`range${names.coord}`],\n        );\n        const rangeOffsetCoord = checkDefault(\n            this[`rangeOffset${names.coord}`],\n            DEFAULT_OPTIONS[`rangeOffset${names.coord}`],\n        );\n        const zoom = this[`zoom${names.coord}`];\n        const range = getRange(\n            this[`getScroll${names.pos}`](),\n            margin,\n            rangeCoord,\n            threshold,\n            isReal,\n        );\n\n        if (!isZoom) {\n            return [\n                range[0] + rangeOffsetCoord[0],\n                range[1] + rangeOffsetCoord[1],\n            ];\n        }\n        return [\n            range[0] * zoom + rangeOffsetCoord[0],\n            range[1] * zoom + rangeOffsetCoord[1],\n            // Math.max(this[`viewport${names.size}`] * zoom - this[`container${names.size}`], range[1] * zoom + rangeOffsetCoord[1]),\n        ];\n    }\n    private _emitScrollEvent(scrollLeft: number, scrollTop: number, zoom?: boolean) {\n        const prevScrollLeft = this._asLeft;\n        const prevScrollTop = this._asTop;\n\n        if (!zoom && prevScrollLeft === scrollLeft && prevScrollTop === scrollTop) {\n            return;\n        }\n        this._asLeft = scrollLeft;\n        this._asTop = scrollTop;\n\n        /**\n         * The `scroll` event fires when the document view or an element has been scrolled.\n         * @memberof InfiniteViewer\n         * @event scroll\n         * @param {InfiniteViewer.OnScroll} - Parameters for the scroll event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         * ).on(\"scroll\", () => {\n         *   console.log(viewer.getScrollLeft(), viewer.getScrollTop());\n         * });\n         */\n        this.trigger(\"scroll\", {\n            scrollLeft,\n            scrollTop,\n            zoomX: this.zoomX,\n            zoomY: this.zoomY,\n        });\n    }\n    private _getScrollRangeX() {\n        const pos = this.getScrollLeft();\n        const startMargin =  Math.min(0, pos);\n        const endMargin = Math.max(0, pos);\n        const viewportSize = this.viewportScrollWidth;\n        const margin = Math.max(this.containerWidth / this.zoomX, viewportSize) - viewportSize;\n        const startSizeOffset = Math.min(0, margin + startMargin);\n\n        return [\n            startSizeOffset,\n            endMargin,\n        ];\n    }\n    private _getScrollRangeY() {\n        const pos = this.getScrollTop();\n        const startMargin =  Math.min(0, pos);\n        const endMargin = Math.max(0, pos);\n        const viewportSize = this.viewportScrollHeight;\n        const margin = Math.max(this.containerHeight / this.zoomY, viewportSize) - viewportSize;\n        const startSizeOffset = Math.min(0, margin + startMargin);\n\n        return [\n            startSizeOffset,\n            endMargin,\n        ];\n    }\n}\n\ninterface InfiniteViewer extends InfiniteViewerProperties { }\n\nexport default InfiniteViewer;\n","import InfiniteViewerManager from \"./InfiniteViewerManager\";\n\nexport default class InfiniteViewer extends InfiniteViewerManager {}\n"],"names":["agent","getAgent","IS_SAFARI","browser","name","PREFIX","WRAPPER_CLASS_NAME","RESTRICT_WRAPPER_CLASS_NAME","SCROLL_AREA_CLASS_NAME","SCROLL_BAR_CLASS_NAME","HORIZONTAL_SCROLL_BAR_CLASS_NAME","VERTICAL_SCROLL_BAR_CLASS_NAME","SCROLL_THUMB_CLASS_NAME","injector","styled","prefixCSS","DEFAULT_OPTIONS","margin","threshold","zoom","zoomX","zoomY","rangeX","Infinity","rangeY","rangeOffsetX","rangeOffsetY","wrapperElement","scrollAreaElement","horizontalScrollElement","verticalScrollElement","usePinch","useAutoZoom","useMouseDrag","pinchThreshold","cspNonce","maxPinchWheel","wheelScale","displayHorizontalScroll","displayVerticalScroll","useTransform","useWheelPinch","zoomRange","wheelPinchKey","useWheelScroll","zoomOffsetX","zoomOffsetY","translateZ","useGesture","useResizeObserver","pinchDirection","preventWheelClick","DEFAULT_EASING","x","Math","pow","NAMES","horizontal","pos","coord","size","vertical","CLASS_NAME","className","PROPERTIES","OPTIONS","__spreadArray","EVENTS","METHODS","TINY_NUM","measureSpeed","e","deltaX","deltaY","datas","time","Date","now","prevSpeed","speed","dt","getDuration","a","normalSpeed","sqrt","abs","getDestPos","duration","v","getRange","range","isReal","min","isFinite","floor","max","ceil","checkDefault","value","defaultValue","startAnimation","callback","timerCallback","options","easing","startTime","prevTime","next","t","ratio","prevRatio","__extends","type","container","_super","_this","delta","isHorizontal","preventDefault","trigger","thumbElement","barElement","document","createElement","insertBefore","isAppend","querySelector","addClass","gesto","Gesto","window","on","target","inputEvent","isThumb","setTimeout","requestAnimationFrame","thumbRect","getBoundingClientRect","pos1","thumbSize","pos2","clientPos","endPos","startPos","scrollSize","clientScrollWidth","console","log","scrollBy","stopPropagation","addEvent","onWheel","passive","isDisplay","containerSize","scrollRange","startMargin","endMargin","scrollSizeOffset","throttle","display","_a","dirName1","sizeName","thumbPos","style","cssText","removeEvent","off","EventEmitter","_containerElement","viewportElement","containerWidth","containerHeight","_b","_viewportElement","viewportWidth","viewportHeight","viewportScrollWidth","viewportScrollHeight","render","_scrollBy","scrollLeft","scrollTop","viewerScrollLeft","getScrollLeft","viewerScrollTop","getScrollTop","isLoop","scrollTo","isKeydown","ctrlKey","sign","distance","scale","clearTimeout","_tempRectTimer","_tempRect","_triggerPinch","rotation","isWheel","clientX","clientY","ratioX","ratioY","shiftKey","_tempScale","_setClientRect","isFlag","Element","children","init","unset","verticalScrollbar","destroy","horizontalScrollbar","injectResult","containerElement","_onDestroys","forEach","_onScroll","onGestureStart","onGestureChange","onGestureEnd","absolute","isObject","offsetY","getRangeY","offsetX","getRangeX","isZoom","_getScrollRangeX","_getScrollRangeY","resize","left","top","_pauseScrollAnimation","_scrollTo","_startScrollAnimation","y","deltaZoom","_pauseZoomAnimation","isArray","_setZoom","_startZoomAnimation","_getRangeCoord","restrictElement","_restrictWrapperElement","firstChild","ScrollBar","inject","nonce","events","stop","isMouseEvent","dragFlag","result","startEvent","isPinch","movement","isDrag","isDouble","_startScrollAnimationBySpeed","startZoom","observer_1","ResizeObserver","observe","push","disconnect","_c","_d","_e","nextOffsetX","nextOffsetY","getScrollAreaWidth","getScrollAreaHeight","viewportStyle","renderScroll","dest","distRatio","_zoomTimer","_scrollTimer","destPos","cancelAnimationFrame","event","_zoomByClient","width","height","between","rect","getContainer","originalZoomOffsetX","originalZoomOffsetY","zoomBase","zoomOptions","prevZoomX","prevZoomY","nextZoomX","nextZoomY","nextScrollLeft","nextScrollTop","zoomXPos","zoomYPos","convertUnitSize","centerX","centerY","nextCenterX","nextCenterY","prevScrollLeft","prevScrollTop","isAbsolute","_scrollToType","nextScrollAbsoluteLeft","nextScrollAbsoluteTop","_emitScrollEvent","round","move","requestScrollLeft","requestScrollTop","names","prevScrollPos","minCoord","maxCoord","scrollPos","scrollAreaSize","zoomCoord","minThreshold","maxThreshold","rangeCoord","rangeOffsetCoord","_asLeft","_asTop","viewportSize","startSizeOffset","InfiniteViewer","Properties","prototype","property","attributes","enumerable","configurable","get","setter","camelize","set","Object","defineProperty","InfiniteViewerManager"],"mappings":"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"}