{"version":3,"file":"infinite-viewer.esm.js","sources":["../src/consts.ts","../src/utils.ts","../src/ScrollBar.ts","../src/InfiniteViewerManager.tsx","../src/InfiniteViewer.tsx"],"sourcesContent":["import styled from \"css-styled\";\nimport { InfiniteViewerOptions } from \"./types\";\nimport getAgent from \"@egjs/agent\";\nimport { prefixCSS } from \"framework-utils\";\n\nexport const agent = getAgent();\nexport const IS_SAFARI = agent.browser.name === \"safari\";\n\nexport const PREFIX = \"infinite-viewer-\";\n\nexport const WRAPPER_CLASS_NAME = `${PREFIX}wrapper`;\nexport const SCROLL_AREA_CLASS_NAME = `${PREFIX}scroll-area`;\n\nexport const SCROLL_BAR_CLASS_NAME = `${PREFIX}scroll-bar`;\nexport const HORIZONTAL_SCROLL_BAR_CLASS_NAME = `${PREFIX}horizontal-scroll-bar`;\nexport const VERTICAL_SCROLL_BAR_CLASS_NAME = `${PREFIX}vertical-scroll-bar`;\nexport const SCROLL_THUMB_CLASS_NAME = `${PREFIX}scroll-thumb`;\n\nexport const injector = styled(prefixCSS(PREFIX, `\n{\n    position: relative;\n    overscroll-behavior: none;\n}\n.wrapper {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    top: 0;\n    left: 0;\n    will-change: scroll-position;\n}\n.wrapper::-webkit-scrollbar {\n    display: none;\n}\n.scroll-area {\n    position:absolute;\n    top:0;\n    left:0;\n    transform-origin: 0 0;\n}\n.scroll-bar {\n    position:absolute;\n    width: 10px;\n    height: 10px;\n    box-sizing: border-box;\n    right: 0;\n    bottom: 0;\n    overflow: hidden;\n}\n.horizontal-scroll-bar {\n    width: 100%;\n    height: 14px;\n}\n.vertical-scroll-bar {\n    height: 100%;\n    width: 14px;\n}\n.scroll-thumb {\n    position:relative;\n    opacity: 0.7;\n    background: #333;\n    border-radius: 3px;\n    left: 0px;\n    top: 0px;\n    z-index: 10;\n    width: 6px;\n    height: 6px;\n    transition: all ease 0.2s;\n}\n.horizontal-scroll-bar .scroll-thumb {\n    margin: 4px 0px;\n    transition-property: margin, height, border-radius;\n}\n.vertical-scroll-bar .scroll-thumb {\n    margin: 0px 4px;\n    transition-property: margin, width, border-radius;\n}\n.horizontal-scroll-bar:hover .scroll-thumb {\n    height: 10px;\n    margin: 2px 0px;\n    border-radius: 5px;\n}\n.vertical-scroll-bar:hover .scroll-thumb {\n    width: 10px;\n    margin: 0px 2px;\n    border-radius: 5px;\n}\n`));\n\nexport const DEFAULT_OPTIONS = {\n    margin: 500,\n    threshold: 100,\n    zoom: 1,\n    rangeX: [-Infinity, Infinity],\n    rangeY: [-Infinity, Infinity],\n    rangeOffsetX: [0, 0],\n    rangeOffsetY: [0, 0],\n    wrapperElement: null,\n    scrollAreaElement: null,\n    horizontalScrollElement: null,\n    verticalScrollElement: null,\n    usePinch: false,\n    pinchThreshold: 30,\n    cspNonce: \"\",\n    maxPinchWheel: Infinity,\n    wheelScale: 0.01,\n    displayHorizontalScroll: true,\n    displayVerticalScroll: true,\n    useTransform: true,\n    useWheelPinch: true,\n    useWheelScroll: IS_SAFARI,\n    zoomOffsetX: \"50%\",\n    zoomOffsetY: \"50%\",\n    translateZ: 0,\n    useGesture: true,\n};\n/**\n * @memberof InfiniteViewer\n */\nexport const CLASS_NAME = injector.className;\n\n/**\n * @memberof InfiniteViewer\n */\nexport const PROPERTIES = [\n    \"margin\",\n    \"threshold\",\n    \"zoomOffsetX\",\n    \"zoomOffsetY\",\n    \"zoom\",\n    \"rangeX\",\n    \"rangeY\",\n    \"rangeOffsetX\",\n    \"rangeOffsetY\",\n    \"usePinch\",\n    \"pinchThreshold\",\n    \"maxPinchWheel\",\n    \"wheelScale\",\n    \"displayVerticalScroll\",\n    \"displayHorizontalScroll\",\n    \"useWheelScroll\",\n    \"translateZ\",\n] as const;\n\n/**\n * @memberof InfiniteViewer\n */\nexport const OPTIONS = [\n    // ignore target, container,\n    ...PROPERTIES,\n    \"useWheel\",\n    \"useGesture\",\n    \"cspNonce\",\n    \"wrapperElement\",\n    \"scrollAreaElement\",\n    \"verticalScrollElement\",\n    \"horizontalScrollElement\",\n] as const;\nexport const OPTION_TYPES: { [key in keyof InfiniteViewerOptions]: any } = {\n    margin: Number,\n    threshold: Number,\n    zoomOffsetX: String,\n    zoomOffsetY: String,\n    zoom: Number,\n    translateZ: Number,\n    wrapperElement: Object,\n    scrollAreaElement: Object,\n    verticalScrollElement: Object,\n    horizontalScrollElement: Object,\n    rangeX: Array,\n    rangeY: Array,\n    rangeOffsetX: Array,\n    rangeOffsetY: Array,\n    pinchThreshold: Number,\n    usePinch: Boolean,\n    useWheelScroll: Boolean,\n    cspNonce: String,\n    maxPinchWheel: Number,\n    wheelScale: Number,\n    displayHorizontalScroll: Boolean,\n    displayVerticalScroll: Boolean,\n    useTransform: Boolean,\n    useWheelPinch: Boolean,\n    useGesture: Boolean,\n};\n\n/**\n * @memberof InfiniteViewer\n */\nexport const EVENTS = [\n    \"scroll\",\n    \"abortPinch\",\n    \"dragStart\",\n    \"dragEnd\",\n    \"pinchStart\",\n    \"pinch\",\n] as const;\n\n/**\n * @memberof InfiniteViewer\n */\nexport const METHODS = [\n    \"getScrollLeft\",\n    \"getScrollTop\",\n    \"getScrollWidth\",\n    \"getScrollHeight\",\n    \"scrollTo\",\n    \"scrollBy\",\n    \"scrollCenter\",\n    \"getContainer\",\n    \"getViewport\",\n    \"getWrapper\",\n    \"setZoom\",\n    \"getRangeX\",\n    \"getRangeY\",\n] as const;\n\nexport const TINY_NUM = 0.000001;\n","import { OnDrag } from \"gesto\";\nimport { TINY_NUM } from \"./consts\";\n\nexport function measureSpeed(e: OnDrag) {\n    const { deltaX, deltaY, datas } = e;\n    const time = Date.now();\n    const prevSpeed = datas.speed;\n\n    if (!prevSpeed) {\n        datas.speed = [0, 0];\n        datas.time = time;\n        return;\n    }\n    const dt = time - datas.time;\n    datas.speed = [prevSpeed[0] / 2 + deltaX / dt, prevSpeed[1] / 2 + deltaY / dt];\n}\n\nexport function getDuration(speed: number[], a: number) {\n    const normalSpeed = Math.sqrt(speed[0] * speed[0] + speed[1] * speed[1]);\n\n    return Math.abs(normalSpeed / a);\n}\nexport function getDestPos(speed: number[], a: number) {\n    const duration = getDuration(speed, a);\n\n    return [\n        speed[0] / 2 * duration,\n        speed[1] / 2 * duration,\n    ];\n}\nexport function minmax(value: number, min: number, max: number) {\n    return Math.min(max, Math.max(min, value));\n}\n\nexport function abs(v: number) {\n    return Math.abs(v);\n}\n\nexport function getRange(\n    pos: number,\n    margin: number,\n    range: number[],\n    threshold: number,\n    isReal: boolean,\n) {\n    const min = isReal || isFinite(range[0])\n        ? range[0]\n        : Math.min(-1, Math.floor(pos / margin)) * margin - threshold;\n    const max = isReal || isFinite(range[1])\n        ? range[1]\n        : Math.max(1, Math.ceil(pos / margin)) * margin + threshold;\n\n    return [min, max];\n}\n\nexport function throttle(value: number) {\n    return Math.round(value / TINY_NUM) * TINY_NUM;\n}\n","import Gesto from \"gesto\";\nimport {\n    SCROLL_BAR_CLASS_NAME, SCROLL_THUMB_CLASS_NAME,\n    HORIZONTAL_SCROLL_BAR_CLASS_NAME, VERTICAL_SCROLL_BAR_CLASS_NAME\n} from \"./consts\";\nimport { addClass, removeEvent, addEvent } from \"@daybrush/utils\";\nimport EventEmitter from \"@scena/event-emitter\";\n\nexport default class ScrollBar extends EventEmitter {\n    public isAppend: boolean = false;\n    public thumbElement!: HTMLElement;\n    public barElement!: HTMLElement;\n    private gesto!: Gesto;\n    private pos: number = 0;\n    private size: number = 0;\n    private scrollSize: number = 0;\n    private isHorizontal = false;\n\n    constructor(\n        private type: \"horizontal\" | \"vertical\",\n        container?: HTMLElement,\n    ) {\n        super();\n        const isHorizontal = type === \"horizontal\";\n        let thumbElement: HTMLElement;\n        let barElement: HTMLElement = container;\n\n        if (!container) {\n            barElement = document.createElement(\"div\");\n            thumbElement = document.createElement(\"div\");\n\n            barElement.insertBefore(thumbElement, null);\n            this.isAppend = true;\n        } else {\n            thumbElement = container.querySelector(`.${SCROLL_THUMB_CLASS_NAME}`);\n        }\n        addClass(\n            barElement,\n            isHorizontal ? HORIZONTAL_SCROLL_BAR_CLASS_NAME\n                : VERTICAL_SCROLL_BAR_CLASS_NAME,\n        );\n        addClass(barElement, SCROLL_BAR_CLASS_NAME);\n        addClass(thumbElement, SCROLL_THUMB_CLASS_NAME);\n\n        this.thumbElement = thumbElement;\n        this.barElement = barElement;\n        this.isHorizontal = isHorizontal;\n        this.gesto = new Gesto(barElement, {\n            container: window,\n        }).on(\"dragStart\", e => {\n            const target = e.inputEvent.target;\n            const datas = e.datas;\n            const isThumb = this.thumbElement === target;\n\n            if (!isThumb) {\n                setTimeout(() => {\n                    requestAnimationFrame(() => {\n                        const thumbRect = this.thumbElement.getBoundingClientRect();\n                        const pos1 = thumbRect[isHorizontal ? \"left\" : \"top\"];\n                        const thumbSize = thumbRect[isHorizontal ? \"width\" : \"height\"];\n                        const pos2 = pos1 + thumbSize;\n                        const clientPos = e[isHorizontal ? \"clientX\" : \"clientY\"];\n\n                        if (pos1 <= clientPos && clientPos <= pos2) {\n                            return;\n                        }\n                        const size = this.size;\n                        const delta = size * size / this.scrollSize;\n\n                        this.scrollBy(pos1 < clientPos ? delta : -delta);\n                    });\n                }, 100);\n\n            }\n            datas.isThumb = isThumb;\n            e.inputEvent.stopPropagation();\n            e.inputEvent.preventDefault();\n        }).on(\"drag\", e => {\n            if (!e.datas.isThumb) {\n                return;\n            }\n            this.scrollBy(this.isHorizontal ? e.deltaX : e.deltaY);\n        });\n        addEvent(this.barElement, \"wheel\", this.onWheel, {\n            passive: false,\n        });\n    }\n    public scrollBy(delta: number) {\n        const ratio = delta / this.size;\n\n        this.trigger(\"scroll\", {\n            delta: this.scrollSize * ratio,\n        });\n    }\n    public render(isDisplay: boolean, pos: number, size: number, scrollSize: number) {\n        this.pos = pos;\n        this.size = size;\n        this.scrollSize = scrollSize;\n\n        const display = isDisplay && (scrollSize > size) ? \"block\" : \"none\";\n        const [dirName1, sizeName] = this.isHorizontal ? [\"X\", \"width\"] : [\"Y\", \"height\"];\n\n        this.barElement.style.cssText = `display: ${display};`;\n        this.thumbElement.style.cssText\n            += `${sizeName}: ${size * size / scrollSize}px;`\n            + `transform: translate${dirName1}(${pos / scrollSize * size}px)`;\n    }\n    public destroy() {\n        removeEvent(this.barElement, \"wheel\", this.onWheel);\n        this.gesto.off();\n        this.off();\n    }\n    private onWheel = (e: WheelEvent) => {\n        const delta = this.isHorizontal ? e.deltaX : e.deltaY;\n\n        if (delta) {\n            e.preventDefault();\n        }\n        this.trigger(\"scroll\", {\n            delta,\n        });\n    }\n}\n","import EventEmitter from \"@scena/event-emitter\";\nimport Gesto from \"gesto\";\nimport { InjectResult } from \"css-styled\";\nimport { Properties } from \"framework-utils\";\nimport { camelize, IObject, addEvent, removeEvent, addClass, convertUnitSize } from \"@daybrush/utils\";\nimport { InfiniteViewerOptions, InfiniteViewerProperties, InfiniteViewerEvents } from \"./types\";\nimport {\n    PROPERTIES, injector, CLASS_NAME, TINY_NUM,\n    IS_SAFARI, DEFAULT_OPTIONS,\n    WRAPPER_CLASS_NAME, SCROLL_AREA_CLASS_NAME,\n    HORIZONTAL_SCROLL_BAR_CLASS_NAME, VERTICAL_SCROLL_BAR_CLASS_NAME\n} from \"./consts\";\nimport { measureSpeed, getDuration, getDestPos, abs, getRange } from \"./utils\";\nimport ScrollBar from \"./ScrollBar\";\n\n@Properties(PROPERTIES as any, (prototype, property) => {\n    const attributes: IObject<any> = {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this.options[property];\n        },\n    };\n    const setter = camelize(`set ${property}`);\n    if (prototype[setter]) {\n        attributes.set = function (value) {\n            this[setter](value);\n        };\n    } else {\n        attributes.set = function (value) {\n            this.options[property] = value;\n        };\n    }\n    Object.defineProperty(prototype, property, attributes);\n})\n/**\n * @sort 1\n */\nclass InfiniteViewer extends EventEmitter<InfiniteViewerEvents> {\n    public options: InfiniteViewerOptions;\n    private injectResult!: InjectResult;\n    private wrapperElement!: HTMLElement;\n    private scrollAreaElement!: HTMLElement;\n    private horizontalScrollbar: ScrollBar;\n    private verticalScrollbar: ScrollBar;\n    private gesto!: Gesto;\n    private offsetX: number = 0;\n    private offsetY: number = 0;\n    private containerWidth: number = 0;\n    private containerHeight: number = 0;\n    private viewportWidth: number = 0;\n    private viewportHeight: number = 0;\n    private scrollLeft: number = 0;\n    private scrollTop: number = 0;\n    private timer: number = 0;\n    private tempScale: number = 1;\n    private dragFlag: boolean = false;\n    private isLoop: boolean = false;\n    /**\n     * @sort 1\n     */\n    constructor(\n        private containerElement: HTMLElement,\n        private viewportElement: HTMLElement,\n        options: Partial<InfiniteViewerOptions> = {},\n    ) {\n        super();\n        this.options = {\n            ...DEFAULT_OPTIONS,\n            ...options,\n        };\n        this.init();\n    }\n    /**\n     * Get Container Element\n     */\n    public getContainer(): HTMLElement {\n        return this.containerElement;\n    }\n    /**\n     * Get Viewport Element\n     */\n    public getViewport(): HTMLElement {\n        return this.viewportElement;\n    }\n    /**\n     * Get Wrapper Element\n     */\n    public getWrapper(): HTMLElement {\n        return this.wrapperElement;\n    }\n    /**\n     * Get Scroll Area Element\n     */\n     public geScrollArea(): HTMLElement {\n        return this.scrollAreaElement;\n    }\n    /**\n     * Destroy elements, properties, and events.\n     */\n    public destroy(): void {\n        this.off();\n        this.gesto.unset();\n        this.verticalScrollbar.destroy();\n        this.horizontalScrollbar.destroy();\n        this.injectResult.destroy();\n        const containerElement = this.containerElement;\n\n        removeEvent(window, \"resize\", this.resize);\n        removeEvent(this.wrapperElement, \"scroll\", this.onScroll);\n        removeEvent(containerElement, \"wheel\", this.onWheel);\n        removeEvent(containerElement, \"tgesturestart\", this.onGestureStart);\n        removeEvent(containerElement, \"gesturechange\", this.onGestureChange);\n\n        this.gesto = null;\n        this.injectResult = null;\n        this.containerElement = null;\n        this.viewportElement = null;\n        this.options = null;\n    }\n    /**\n     * Gets the number of pixels that an element's content is scrolled vertically.\n     * @param - Get absolute top position\n     */\n    public getScrollTop(isAbsolute?: boolean) {\n        return this.scrollTop / this.zoom + this.offsetY\n            + (isAbsolute ? abs(this.getRangeY()[0]) : 0);\n    }\n    /**\n     * Gets the number of pixels that an element's content is scrolled vertically.\n     * @param - Get absolute left position\n     */\n    public getScrollLeft(isAbsolute?: boolean) {\n        return this.scrollLeft / this.zoom + this.offsetX\n            + (isAbsolute ? abs(this.getRangeX()[0]) : 0);\n    }\n    /**\n     * Gets measurement of the width of an element's content with overflow\n     */\n    public getScrollWidth(isZoom?: boolean) {\n        const range = this.getRangeX(isZoom);\n\n        return this.containerWidth + abs(range[0]) + abs(range[1]);\n    }\n    /**\n     * Gets measurement of the height of an element's content with overflow\n     */\n    public getScrollHeight(isZoom?: boolean) {\n        const range = this.getRangeY(isZoom);\n\n        return this.containerHeight + abs(range[0]) + abs(range[1]);\n    }\n\n    /**\n     * Scroll the element to the center\n     */\n    public scrollCenter() {\n        this.resize();\n\n        const zoom = this.zoom;\n        const left = -(this.containerWidth / zoom - this.viewportWidth) / 2;\n        const top = -(this.containerHeight / zoom - this.viewportHeight) / 2;\n\n        return this.scrollTo(left, top);\n    }\n    /**\n     * Update Viewer Sizes\n     * @method\n     */\n    public resize = () => {\n        const {\n            offsetWidth: containerWidth,\n            offsetHeight: containerHeight,\n        } = this.containerElement;\n        const {\n            offsetWidth: viewportWidth,\n            offsetHeight: viewportHeight,\n        } = this.viewportElement;\n\n        this.containerWidth = containerWidth;\n        this.containerHeight = containerHeight;\n        this.viewportWidth = viewportWidth;\n        this.viewportHeight = viewportHeight;\n    }\n    /**\n     * Scrolls the container by the given amount.\n     */\n    public scrollBy(deltaX: number, deltaY: number) {\n        return this.scrollTo(this.getScrollLeft() + deltaX, this.getScrollTop() + deltaY);\n    }\n    /**\n     * Scrolls the container to set of coordinates.\n     * @param scrollLeft\n     * @param scrollTop\n     */\n    public scrollTo(x: number, y: number) {\n        const {\n            zoom = DEFAULT_OPTIONS.zoom,\n            margin = DEFAULT_OPTIONS.margin,\n            threshold = DEFAULT_OPTIONS.threshold,\n            scrollLeft: prevScrollLeft,\n            scrollTop: prevScrollTop,\n        } = this;\n\n        const [minX, maxX] = this.getRangeX(true, true);\n        const [minY, maxY] = this.getRangeY(true, true);\n\n        let scrollLeft = Math.round(prevScrollLeft);\n        let scrollTop = Math.round(prevScrollTop);\n\n        const scrollAreaWidth = this.getScrollAreaWidth();\n        const scrollAreaHeight = this.getScrollAreaHeight();\n        const zoomX = x * zoom;\n        const zoomY = y * zoom;\n\n        if (zoomX - threshold <= minX) {\n            const minThreshold = Math.max(0, zoomX - minX);\n\n            scrollLeft = minThreshold;\n            x = (minX + minThreshold) / zoom;\n        } else if (zoomX + threshold >= maxX) {\n            const maxThreshold = Math.max(0, maxX - zoomX);\n\n            scrollLeft = scrollAreaWidth - maxThreshold;\n            x = (maxX - maxThreshold) / zoom;\n        } else if (scrollLeft < threshold) {\n            scrollLeft += margin;\n        } else if (scrollLeft > scrollAreaWidth - threshold) {\n            scrollLeft -= margin;\n        }\n\n        if (zoomY - threshold <= minY) {\n            const minThreshold = Math.max(0, zoomY - minY);\n\n            scrollTop = minThreshold;\n            y = (minY + minThreshold) / zoom;\n        } else if (zoomY + threshold >= maxY) {\n            const maxThreshold = Math.max(0, maxY - zoomY);\n\n            scrollTop = scrollAreaHeight - maxThreshold;\n            y = (maxY - maxThreshold) / zoom;\n        } else if (scrollTop < threshold) {\n            scrollTop += margin;\n        } else if (scrollTop > scrollAreaHeight - threshold) {\n            scrollTop -= margin;\n        }\n        scrollLeft = Math.round(scrollLeft);\n        scrollTop = Math.round(scrollTop);\n\n        this.scrollLeft = scrollLeft;\n        this.scrollTop = scrollTop;\n\n        this.offsetX = Math.round(x - scrollLeft / zoom);\n        this.offsetY = Math.round(y - scrollTop / zoom);\n\n        this.render();\n        const nextX = this.getScrollLeft();\n        const nextY = this.getScrollTop();\n\n        /**\n         * The `scroll` event fires when the document view or an element has been scrolled.\n         * @memberof InfiniteViewer\n         * @event scroll\n         * @param {InfiniteViewer.OnScroll} - Parameters for the scroll event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         * ).on(\"scroll\", () => {\n         *   console.log(viewer.getScrollLeft(), viewer.getScrollTop());\n         * });\n         */\n        this.trigger(\"scroll\", {\n            scrollLeft: nextX,\n            scrollTop: nextY,\n        });\n\n        if (Math.round(prevScrollLeft) !== scrollLeft || Math.round(prevScrollTop) !== scrollTop) {\n            this.isLoop = true;\n            this.move(scrollLeft, scrollTop);\n            requestAnimationFrame(() => {\n                if (!this.isLoop) {\n                    return;\n                }\n                this.isLoop = false;\n                const {\n                    scrollLeft: requestScrollLeft,\n                    scrollTop: requestScrollTop,\n                } = this.wrapperElement;\n\n                this.scrollLeft = requestScrollLeft;\n                this.scrollTop = requestScrollTop;\n\n                if (scrollLeft !== Math.round(requestScrollLeft) || scrollTop !== Math.round(requestScrollTop)) {\n                    this.scrollTo(nextX, nextY);\n                }\n            });\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Set viewer zoom\n     */\n    public setZoom(zoom: number) {\n        const {\n            containerWidth,\n            containerHeight,\n            zoomOffsetX = DEFAULT_OPTIONS.zoomOffsetX,\n            zoomOffsetY = DEFAULT_OPTIONS.zoomOffsetY,\n            zoom: prevZoom,\n        } = this;\n\n        const scrollLeft = this.getScrollLeft();\n        const scrollTop = this.getScrollTop();\n\n        this.options.zoom = zoom;\n\n        const nextScrollLeft = this.getScrollLeft();\n        const nextScrollTop = this.getScrollTop();\n\n        const zoomX = convertUnitSize(`${zoomOffsetX}`, containerWidth);\n        const zoomY = convertUnitSize(`${zoomOffsetY}`, containerHeight);\n        const centerX = scrollLeft + zoomX / prevZoom;\n        const centerY = scrollTop + zoomY / prevZoom;\n\n        const nextCenterX = nextScrollLeft + zoomX / zoom;\n        const nextCenterY = nextScrollTop + zoomY / zoom;\n\n        this.scrollBy(centerX - nextCenterX, centerY - nextCenterY);\n        this.render();\n    }\n    /**\n     * get x ranges\n     */\n    public getRangeX(isZoom?: boolean, isReal?: boolean) {\n        const {\n            rangeX = DEFAULT_OPTIONS.rangeX,\n            rangeOffsetX = DEFAULT_OPTIONS.rangeOffsetX,\n            margin = DEFAULT_OPTIONS.margin,\n            zoom = DEFAULT_OPTIONS.zoom,\n            threshold,\n        } = this;\n\n        const range = getRange(\n            this.getScrollLeft(),\n            margin,\n            rangeX,\n            threshold,\n            isReal,\n        );\n\n        if (!isZoom) {\n            return [range[0] + rangeOffsetX[0], range[1] + rangeOffsetX[1]];\n        }\n        return [\n            range[0] * zoom + rangeOffsetX[0],\n            Math.max(this.viewportWidth * zoom - this.containerWidth, range[1] * zoom + rangeOffsetX[1]),\n        ];\n    }\n    /**\n     * get y ranges\n     */\n    public getRangeY(isZoom?: boolean, isReal?: boolean) {\n        const {\n            rangeY = DEFAULT_OPTIONS.rangeY,\n            margin = DEFAULT_OPTIONS.margin,\n            zoom = DEFAULT_OPTIONS.zoom,\n            threshold,\n        } = this;\n\n        const range = getRange(\n            this.getScrollTop(),\n            margin,\n            rangeY,\n            threshold,\n            isReal,\n        );\n        if (!isZoom) {\n            return range;\n        }\n        return [\n            range[0] * zoom,\n            Math.max(this.viewportHeight * zoom - this.containerHeight, range[1] * zoom),\n        ];\n    }\n    private init() {\n        // infinite-viewer(container)\n        // viewport\n        // children\n        const containerElement = this.containerElement;\n        const options = this.options;\n\n        // vanilla\n        let wrapperElement = options.wrapperElement\n            || containerElement.querySelector(`.${WRAPPER_CLASS_NAME}`);\n        let scrollAreaElement = options.scrollAreaElement\n            || containerElement.querySelector(`.${SCROLL_AREA_CLASS_NAME}`);\n        const horizontalScrollElement = options.horizontalScrollElement\n            || containerElement.querySelector(`.${HORIZONTAL_SCROLL_BAR_CLASS_NAME}`);\n        const verticalScrollElement = options.verticalScrollElement\n            || containerElement.querySelector(`.${VERTICAL_SCROLL_BAR_CLASS_NAME}`);\n\n        if (wrapperElement) {\n            this.wrapperElement = wrapperElement;\n        } else {\n            wrapperElement = document.createElement(\"div\");\n            wrapperElement.insertBefore(this.viewportElement, null);\n            containerElement.insertBefore(wrapperElement, null);\n\n            this.wrapperElement = wrapperElement;\n        }\n\n        if (scrollAreaElement) {\n            this.scrollAreaElement = scrollAreaElement;\n        } else {\n            scrollAreaElement = document.createElement(\"div\");\n\n            wrapperElement.insertBefore(scrollAreaElement, wrapperElement.firstChild);\n\n            this.scrollAreaElement = scrollAreaElement;\n        }\n        addClass(containerElement, CLASS_NAME);\n        addClass(wrapperElement, WRAPPER_CLASS_NAME);\n        addClass(scrollAreaElement, SCROLL_AREA_CLASS_NAME);\n\n        this.horizontalScrollbar = new ScrollBar(\"horizontal\", horizontalScrollElement);\n        this.verticalScrollbar = new ScrollBar(\"vertical\", verticalScrollElement);\n\n        this.horizontalScrollbar.on(\"scroll\", e => {\n            this.scrollBy(e.delta / this.zoom, 0);\n        });\n\n        this.verticalScrollbar.on(\"scroll\", e => {\n            this.scrollBy(0, e.delta / this.zoom);\n        });\n\n        if (this.horizontalScrollbar.isAppend) {\n            containerElement.insertBefore(this.horizontalScrollbar.barElement, null);\n        }\n        if (this.verticalScrollbar.isAppend) {\n            containerElement.insertBefore(this.verticalScrollbar.barElement, null);\n        }\n        this.injectResult = injector.inject(containerElement, {\n            nonce: this.options.cspNonce,\n        });\n        /**\n         * the `dragStart` event fires when `touchstart` does occur.\n         * @memberof InfiniteViewer\n         * @event dragStart\n         * @param {InfiniteViewer.OnDragStart} - Parameters for the `dragStart` event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         * ).on(\"dragStart\", e => {\n         *   console.log(e.inputEvent);\n         * });\n         */\n        /**\n         * the `drag` event fires when `touch` does occur.\n         * @memberof InfiniteViewer\n         * @event drag\n         * @param {InfiniteViewer.OnDrag} - Parameters for the `drag` event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         * ).on(\"drag\", e => {\n         *   console.log(e.inputEvent);\n         * });\n         */\n        /**\n         * the `dragEnd` event fires when `touchend` does occur.\n         * @memberof InfiniteViewer\n         * @event dragEnd\n         * @param {InfiniteViewer.OnDragEnd} - Parameters for the `dragEnd` event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         * ).on(\"dragEnd\", e => {\n         *   console.log(e.inputEvent);\n         * });\n         */\n        /**\n         * the `abortPinch` event fires when `pinch` event does not occur by dragging a certain area.\n         * @memberof InfiniteViewer\n         * @event abortPinch\n         * @param {InfiniteViewer.OnAbortPinch} - Parameters for the abortPinch event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         *   {\n         *     usePinch: true,\n         *   }\n         * ).on(\"abortPinch\", e => {\n         *   console.log(e.inputEvent);\n         * });\n         */\n        /**\n         * the `pinch` event fires when two points pinch the viewer\n         * The pinchStart and abortPinch events do not occur when pinching through the wheel.\n         * @memberof InfiniteViewer\n         * @event pinch\n         * @param {InfiniteViewer.OnPinch} - Parameters for the `pinch` event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         *   {\n         *     usePinch: true,\n         *   }\n         * ).on(\"pinch\", e => {\n         *   console.log(e.zoom, e.inputEvent);\n         * });\n         */\n        this.gesto = new Gesto(containerElement, {\n            container: document.body,\n            events: [\"touch\"],\n        }).on(\"dragStart\", ({ inputEvent, datas, stop }) => {\n            this.pauseAnimation();\n            this.dragFlag = false;\n            const result = this.trigger(\"dragStart\", {\n                inputEvent,\n            });\n            if (result === false) {\n                stop();\n                return;\n            }\n\n            inputEvent.preventDefault();\n\n            datas.startEvent = inputEvent;\n        }).on(\"drag\", e => {\n            if (!this.options.usePinch || e.isPinch) {\n                this.trigger(\"drag\", {\n                    ...e,\n                    inputEvent: e.inputEvent,\n                });\n                measureSpeed(e);\n                const zoom = this.zoom;\n                this.scrollBy(-e.deltaX / zoom, -e.deltaY / zoom);\n            } else if (!this.dragFlag && e.movement > options.pinchThreshold) {\n                this.dragFlag = true;\n\n                this.trigger(\"abortPinch\", {\n                    inputEvent: e.datas.startEvent || e.inputEvent,\n                });\n            }\n        }).on(\"dragEnd\", e => {\n            this.trigger(\"dragEnd\", {\n                isDrag: e.isDrag,\n                isDouble: e.isDouble,\n                inputEvent: e.inputEvent,\n            });\n            this.startAnimation(e.datas.speed);\n        }).on(\"pinchStart\", ({ inputEvent, datas, stop }) => {\n            inputEvent.preventDefault();\n            this.pauseAnimation();\n            datas.startZoom = this.zoom;\n\n            const result = this.trigger(\"pinchStart\", {\n                inputEvent,\n            });\n            if (result === false) {\n                stop();\n            }\n        }).on(\"pinch\", e => {\n            // e.distance;\n            // e.scale\n            this.trigger(\"pinch\", {\n                rotation: e.rotation,\n                distance: e.distance,\n                scale: e.scale,\n                zoom: e.datas.startZoom * e.scale,\n                inputEvent: e.inputEvent,\n                isWheel: false,\n            });\n        });\n\n        addEvent(wrapperElement, \"scroll\", this.onScroll);\n        addEvent(window, \"resize\", this.resize);\n\n        if (options.useWheelPinch || options.useWheelScroll) {\n            addEvent(containerElement, \"wheel\", this.onWheel, {\n                passive: false,\n            });\n        }\n        if (options.useGesture) {\n            addEvent(containerElement, \"gesturestart\", this.onGestureStart, {\n                passive: false,\n            });\n            addEvent(containerElement, \"gesturechange\", this.onGestureChange, {\n                passive: false,\n            });\n        }\n        this.resize();\n        this.render();\n        this.scrollTo(0, 0);\n    }\n    private render() {\n        const {\n            offsetX,\n            offsetY,\n            zoom = DEFAULT_OPTIONS.zoom,\n            translateZ = 0,\n        } = this;\n        const {\n            useTransform = DEFAULT_OPTIONS.useTransform,\n        } = this.options;\n        const nextOffsetX = -offsetX * zoom;\n        const nextOffsetY = -offsetY * zoom;\n\n        this.scrollAreaElement.style.cssText\n            = `width:calc(100% + ${this.getScrollAreaWidth()}px);`\n            + `height:calc(100% + ${this.getScrollAreaHeight()}px);`;\n\n        const viewportStyle = this.viewportElement.style;\n\n        if (useTransform === false) {\n            viewportStyle.cssText += `position: relative; top: ${nextOffsetY}px; left: ${nextOffsetX}px;`;\n        } else {\n            viewportStyle.cssText += `transform-origin: 0 0;transform:translate3d(${nextOffsetX}px, ${nextOffsetY}px, ${translateZ}px) scale(${zoom});`;\n        }\n        this.renderScroll();\n    }\n    private renderScroll() {\n        const {\n            containerWidth,\n            containerHeight,\n            zoom,\n        } = this;\n        const scrollLeft = this.getScrollLeft(true) * zoom;\n        const scrollTop = this.getScrollTop(true) * zoom;\n        const scrollWidth = this.getScrollWidth(true);\n        const scrollHeight = this.getScrollHeight(true);\n\n        this.horizontalScrollbar.render(\n            this.displayHorizontalScroll,\n            scrollLeft,\n            containerWidth,\n            scrollWidth,\n        );\n        this.verticalScrollbar.render(\n            this.displayVerticalScroll,\n            scrollTop,\n            containerHeight,\n            scrollHeight,\n        );\n    }\n    private move(scrollLeft: number, scrollTop: number) {\n        const wrapperElement = this.wrapperElement;\n\n        wrapperElement.scrollLeft = scrollLeft;\n        wrapperElement.scrollTop = scrollTop;\n    }\n    private onScroll = () => {\n        const { scrollLeft, scrollTop } = this.wrapperElement;\n        const {\n            zoom = DEFAULT_OPTIONS.zoom,\n        } = this;\n        const deltaX = scrollLeft - this.scrollLeft;\n        const deltaY = scrollTop - this.scrollTop;\n        const viewerScrollLeft = this.getScrollLeft();\n        const viewerScrollTop = this.getScrollTop();\n\n        if (this.isLoop) {\n            this.isLoop = false;\n        }\n        this.scrollLeft = scrollLeft;\n        this.scrollTop = scrollTop;\n        this.scrollTo(\n            viewerScrollLeft + deltaX / zoom,\n            viewerScrollTop + deltaY / zoom,\n        );\n    }\n    private onWheel = (e: WheelEvent) => {\n        const options = this.options;\n        const maxPinchWheel = options.maxPinchWheel || Infinity;\n\n        if (options.useWheelPinch && e.ctrlKey) {\n            let deltaY = e.deltaY;\n            const sign = deltaY >= 0 ? 1 : -1;\n            const distance = Math.min(maxPinchWheel, Math.abs(deltaY));\n\n\n            deltaY = sign * distance;\n            const delta = -deltaY;\n            const scale = Math.max(1 + delta * (options.wheelScale || 0.01), TINY_NUM);\n\n            this.trigger(\"pinch\", {\n                distance,\n                scale,\n                rotation: 0,\n                zoom: this.zoom * scale,\n                inputEvent: e,\n                isWheel: true,\n            });\n        } else if (options.useWheelScroll) {\n            const zoom = this.zoom;\n\n            let deltaX = e.deltaX;\n            let deltaY = e.deltaY;\n\n            if (e.shiftKey && !deltaX) {\n                deltaX = deltaY;\n                deltaY = 0;\n            }\n            this.scrollBy(deltaX / zoom, deltaY / zoom);\n        } else {\n            return;\n        }\n        e.preventDefault();\n    }\n    private onGestureStart = (e: any) => {\n        this.tempScale = this.zoom;\n        e.preventDefault();\n    }\n    private onGestureChange = (e: any) => {\n        e.preventDefault();\n        if (this.gesto.isFlag() || !this.tempScale) {\n            this.tempScale = 0;\n            return;\n        }\n        const scale = e.scale;\n\n        this.trigger(\"pinch\", {\n            distance: 0,\n            scale,\n            rotation: e.rotation,\n            zoom: this.tempScale * scale,\n            inputEvent: e,\n            isWheel: true,\n        });\n    }\n    private startAnimation(speed: number[]) {\n        if (!speed || (!speed[0] && !speed[1])) {\n            return;\n        }\n        const a = -0.0006;\n        const easing = x => 1 - Math.pow(1 - x, 3);\n        const duration = getDuration(speed, a);\n        const destPos = getDestPos(speed, a);\n        const startTime = Date.now();\n        let prevTime = startTime;\n\n        const next = () => {\n            const now = Date.now();\n            let t = now - startTime;\n\n            if (duration < t) {\n                t = duration;\n            }\n            const ratio = easing(t / duration);\n            const prevRatio = easing((prevTime - startTime) / duration);\n\n            prevTime = now;\n\n            this.scrollBy(\n                -destPos[0] * (ratio - prevRatio),\n                -destPos[1] * (ratio - prevRatio),\n            );\n\n            if (t >= duration) {\n                return;\n            }\n            this.timer = requestAnimationFrame(next);\n        };\n        this.timer = requestAnimationFrame(next);\n    }\n    private pauseAnimation() {\n        cancelAnimationFrame(this.timer);\n    }\n    private getScrollAreaWidth() {\n        const [min, max] = this.getRangeX(true);\n        return min || max ? this.margin * 2 : 0;\n    }\n    private getScrollAreaHeight() {\n        const [min, max] = this.getRangeY(true);\n        return min || max ? this.margin * 2 : 0;\n    }\n}\n\ninterface InfiniteViewer extends InfiniteViewerProperties {}\n\nexport default InfiniteViewer;\n","import InfiniteViewerManager from \"./InfiniteViewerManager\";\n\nexport default class InfiniteViewer extends InfiniteViewerManager {}\n"],"names":["agent","getAgent","IS_SAFARI","browser","name","PREFIX","WRAPPER_CLASS_NAME","SCROLL_AREA_CLASS_NAME","SCROLL_BAR_CLASS_NAME","HORIZONTAL_SCROLL_BAR_CLASS_NAME","VERTICAL_SCROLL_BAR_CLASS_NAME","SCROLL_THUMB_CLASS_NAME","injector","styled","prefixCSS","DEFAULT_OPTIONS","margin","threshold","zoom","rangeX","Infinity","rangeY","rangeOffsetX","rangeOffsetY","wrapperElement","scrollAreaElement","horizontalScrollElement","verticalScrollElement","usePinch","pinchThreshold","cspNonce","maxPinchWheel","wheelScale","displayHorizontalScroll","displayVerticalScroll","useTransform","useWheelPinch","useWheelScroll","zoomOffsetX","zoomOffsetY","translateZ","useGesture","CLASS_NAME","className","PROPERTIES","OPTIONS","__spreadArrays","OPTION_TYPES","Number","String","Object","Array","Boolean","EVENTS","METHODS","TINY_NUM","measureSpeed","e","deltaX","deltaY","datas","time","Date","now","prevSpeed","speed","dt","getDuration","a","normalSpeed","Math","sqrt","abs","getDestPos","duration","v","getRange","pos","range","isReal","min","isFinite","floor","max","ceil","__extends","type","container","_super","_this","delta","isHorizontal","preventDefault","trigger","thumbElement","barElement","document","createElement","insertBefore","isAppend","querySelector","addClass","gesto","Gesto","window","on","target","inputEvent","isThumb","setTimeout","requestAnimationFrame","thumbRect","getBoundingClientRect","pos1","thumbSize","pos2","clientPos","size","scrollSize","scrollBy","stopPropagation","addEvent","onWheel","passive","ratio","isDisplay","display","_a","dirName1","sizeName","style","cssText","removeEvent","off","EventEmitter","containerElement","viewportElement","options","containerWidth","containerHeight","_b","viewportWidth","viewportHeight","scrollLeft","scrollTop","viewerScrollLeft","getScrollLeft","viewerScrollTop","getScrollTop","isLoop","scrollTo","ctrlKey","sign","distance","scale","rotation","isWheel","shiftKey","tempScale","isFlag","init","unset","verticalScrollbar","destroy","horizontalScrollbar","injectResult","resize","onScroll","onGestureStart","onGestureChange","isAbsolute","offsetY","getRangeY","offsetX","getRangeX","isZoom","left","top","x","y","_c","_d","prevScrollLeft","prevScrollTop","_e","minX","maxX","_f","minY","maxY","round","scrollAreaWidth","getScrollAreaWidth","scrollAreaHeight","getScrollAreaHeight","zoomX","zoomY","minThreshold","maxThreshold","render","nextX","nextY","move","requestScrollLeft","requestScrollTop","prevZoom","nextScrollLeft","nextScrollTop","convertUnitSize","centerX","centerY","nextCenterX","nextCenterY","firstChild","ScrollBar","inject","nonce","body","events","stop","pauseAnimation","dragFlag","result","startEvent","isPinch","movement","isDrag","isDouble","startAnimation","startZoom","nextOffsetX","nextOffsetY","viewportStyle","renderScroll","scrollWidth","getScrollWidth","scrollHeight","getScrollHeight","easing","pow","destPos","startTime","prevTime","next","t","prevRatio","timer","cancelAnimationFrame","InfiniteViewer","Properties","prototype","property","attributes","enumerable","configurable","get","setter","camelize","set","value","defineProperty","InfiniteViewerManager"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKO,IAAMA,KAAK,GAAGC,QAAQ,EAAtB;AACA,IAAMC,SAAS,GAAGF,KAAK,CAACG,OAAN,CAAcC,IAAd,KAAuB,QAAzC;AAEA,IAAMC,MAAM,GAAG,kBAAf;AAEA,IAAMC,kBAAkB,GAAMD,MAAM,YAApC;AACA,IAAME,sBAAsB,GAAMF,MAAM,gBAAxC;AAEA,IAAMG,qBAAqB,GAAMH,MAAM,eAAvC;AACA,IAAMI,gCAAgC,GAAMJ,MAAM,0BAAlD;AACA,IAAMK,8BAA8B,GAAML,MAAM,wBAAhD;AACA,IAAMM,uBAAuB,GAAMN,MAAM,iBAAzC;AAEA,IAAMO,QAAQ,GAAGC,MAAM,CAACC,SAAS,CAACT,MAAD,EAAS,o1CAAT,CAAV,CAAvB;AAwEA,IAAMU,eAAe,GAAG;AAC3BC,EAAAA,MAAM,EAAE,GADmB;AAE3BC,EAAAA,SAAS,EAAE,GAFgB;AAG3BC,EAAAA,IAAI,EAAE,CAHqB;AAI3BC,EAAAA,MAAM,EAAE,CAAC,CAACC,QAAF,EAAYA,QAAZ,CAJmB;AAK3BC,EAAAA,MAAM,EAAE,CAAC,CAACD,QAAF,EAAYA,QAAZ,CALmB;AAM3BE,EAAAA,YAAY,EAAE,CAAC,CAAD,EAAI,CAAJ,CANa;AAO3BC,EAAAA,YAAY,EAAE,CAAC,CAAD,EAAI,CAAJ,CAPa;AAQ3BC,EAAAA,cAAc,EAAE,IARW;AAS3BC,EAAAA,iBAAiB,EAAE,IATQ;AAU3BC,EAAAA,uBAAuB,EAAE,IAVE;AAW3BC,EAAAA,qBAAqB,EAAE,IAXI;AAY3BC,EAAAA,QAAQ,EAAE,KAZiB;AAa3BC,EAAAA,cAAc,EAAE,EAbW;AAc3BC,EAAAA,QAAQ,EAAE,EAdiB;AAe3BC,EAAAA,aAAa,EAAEX,QAfY;AAgB3BY,EAAAA,UAAU,EAAE,IAhBe;AAiB3BC,EAAAA,uBAAuB,EAAE,IAjBE;AAkB3BC,EAAAA,qBAAqB,EAAE,IAlBI;AAmB3BC,EAAAA,YAAY,EAAE,IAnBa;AAoB3BC,EAAAA,aAAa,EAAE,IApBY;AAqB3BC,EAAAA,cAAc,EAAEnC,SArBW;AAsB3BoC,EAAAA,WAAW,EAAE,KAtBc;AAuB3BC,EAAAA,WAAW,EAAE,KAvBc;AAwB3BC,EAAAA,UAAU,EAAE,CAxBe;AAyB3BC,EAAAA,UAAU,EAAE;AAzBe,CAAxB;AA2BP;;;;IAGaC,UAAU,GAAG9B,QAAQ,CAAC+B;AAEnC;;;;IAGaC,UAAU,GAAG,CACtB,QADsB,EAEtB,WAFsB,EAGtB,aAHsB,EAItB,aAJsB,EAKtB,MALsB,EAMtB,QANsB,EAOtB,QAPsB,EAQtB,cARsB,EAStB,cATsB,EAUtB,UAVsB,EAWtB,gBAXsB,EAYtB,eAZsB,EAatB,YAbsB,EActB,uBAdsB,EAetB,yBAfsB,EAgBtB,gBAhBsB,EAiBtB,YAjBsB;AAoB1B;;;;IAGaC,OAAO,GAAGC,eAEhBF,aACH,YACA,cACA,YACA,kBACA,qBACA,yBACA;IAESG,YAAY,GAAkD;AACvE/B,EAAAA,MAAM,EAAEgC,MAD+D;AAEvE/B,EAAAA,SAAS,EAAE+B,MAF4D;AAGvEV,EAAAA,WAAW,EAAEW,MAH0D;AAIvEV,EAAAA,WAAW,EAAEU,MAJ0D;AAKvE/B,EAAAA,IAAI,EAAE8B,MALiE;AAMvER,EAAAA,UAAU,EAAEQ,MAN2D;AAOvExB,EAAAA,cAAc,EAAE0B,MAPuD;AAQvEzB,EAAAA,iBAAiB,EAAEyB,MARoD;AASvEvB,EAAAA,qBAAqB,EAAEuB,MATgD;AAUvExB,EAAAA,uBAAuB,EAAEwB,MAV8C;AAWvE/B,EAAAA,MAAM,EAAEgC,KAX+D;AAYvE9B,EAAAA,MAAM,EAAE8B,KAZ+D;AAavE7B,EAAAA,YAAY,EAAE6B,KAbyD;AAcvE5B,EAAAA,YAAY,EAAE4B,KAdyD;AAevEtB,EAAAA,cAAc,EAAEmB,MAfuD;AAgBvEpB,EAAAA,QAAQ,EAAEwB,OAhB6D;AAiBvEf,EAAAA,cAAc,EAAEe,OAjBuD;AAkBvEtB,EAAAA,QAAQ,EAAEmB,MAlB6D;AAmBvElB,EAAAA,aAAa,EAAEiB,MAnBwD;AAoBvEhB,EAAAA,UAAU,EAAEgB,MApB2D;AAqBvEf,EAAAA,uBAAuB,EAAEmB,OArB8C;AAsBvElB,EAAAA,qBAAqB,EAAEkB,OAtBgD;AAuBvEjB,EAAAA,YAAY,EAAEiB,OAvByD;AAwBvEhB,EAAAA,aAAa,EAAEgB,OAxBwD;AAyBvEX,EAAAA,UAAU,EAAEW;AAzB2D;AA4B3E;;;;IAGaC,MAAM,GAAG,CAClB,QADkB,EAElB,YAFkB,EAGlB,WAHkB,EAIlB,SAJkB,EAKlB,YALkB,EAMlB,OANkB;AAStB;;;;IAGaC,OAAO,GAAG,CACnB,eADmB,EAEnB,cAFmB,EAGnB,gBAHmB,EAInB,iBAJmB,EAKnB,UALmB,EAMnB,UANmB,EAOnB,cAPmB,EAQnB,cARmB,EASnB,aATmB,EAUnB,YAVmB,EAWnB,SAXmB,EAYnB,WAZmB,EAanB,WAbmB;AAgBhB,IAAMC,QAAQ,GAAG,QAAjB;;SCvNSC,aAAaC;AACjB,MAAAC,MAAM,GAAoBD,CAAC,OAA3B;AAAA,MAAQE,MAAM,GAAYF,CAAC,OAA3B;AAAA,MAAgBG,KAAK,GAAKH,CAAC,MAA3B;AACR,MAAMI,IAAI,GAAGC,IAAI,CAACC,GAAL,EAAb;AACA,MAAMC,SAAS,GAAGJ,KAAK,CAACK,KAAxB;;AAEA,MAAI,CAACD,SAAL,EAAgB;AACZJ,IAAAA,KAAK,CAACK,KAAN,GAAc,CAAC,CAAD,EAAI,CAAJ,CAAd;AACAL,IAAAA,KAAK,CAACC,IAAN,GAAaA,IAAb;AACA;AACH;;AACD,MAAMK,EAAE,GAAGL,IAAI,GAAGD,KAAK,CAACC,IAAxB;AACAD,EAAAA,KAAK,CAACK,KAAN,GAAc,CAACD,SAAS,CAAC,CAAD,CAAT,GAAe,CAAf,GAAmBN,MAAM,GAAGQ,EAA7B,EAAiCF,SAAS,CAAC,CAAD,CAAT,GAAe,CAAf,GAAmBL,MAAM,GAAGO,EAA7D,CAAd;AACH;AAED,SAAgBC,YAAYF,OAAiBG;AACzC,MAAMC,WAAW,GAAGC,IAAI,CAACC,IAAL,CAAUN,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAAhB,GAAsBA,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAAhD,CAApB;AAEA,SAAOK,IAAI,CAACE,GAAL,CAASH,WAAW,GAAGD,CAAvB,CAAP;AACH;AACD,SAAgBK,WAAWR,OAAiBG;AACxC,MAAMM,QAAQ,GAAGP,WAAW,CAACF,KAAD,EAAQG,CAAR,CAA5B;AAEA,SAAO,CACHH,KAAK,CAAC,CAAD,CAAL,GAAW,CAAX,GAAeS,QADZ,EAEHT,KAAK,CAAC,CAAD,CAAL,GAAW,CAAX,GAAeS,QAFZ,CAAP;AAIH;AACD,SAIgBF,IAAIG;AAChB,SAAOL,IAAI,CAACE,GAAL,CAASG,CAAT,CAAP;AACH;AAED,SAAgBC,SACZC,KACA7D,QACA8D,OACA7D,WACA8D;AAEA,MAAMC,GAAG,GAAGD,MAAM,IAAIE,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,CAAlB,GACNA,KAAK,CAAC,CAAD,CADC,GAENR,IAAI,CAACU,GAAL,CAAS,CAAC,CAAV,EAAaV,IAAI,CAACY,KAAL,CAAWL,GAAG,GAAG7D,MAAjB,CAAb,IAAyCA,MAAzC,GAAkDC,SAFxD;AAGA,MAAMkE,GAAG,GAAGJ,MAAM,IAAIE,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,CAAlB,GACNA,KAAK,CAAC,CAAD,CADC,GAENR,IAAI,CAACa,GAAL,CAAS,CAAT,EAAYb,IAAI,CAACc,IAAL,CAAUP,GAAG,GAAG7D,MAAhB,CAAZ,IAAuCA,MAAvC,GAAgDC,SAFtD;AAIA,SAAO,CAAC+D,GAAD,EAAMG,GAAN,CAAP;AACH;;AC7CD;;;AAAuCE,EAAAA,4BAAA;;AAUnC,oBAAA,CACYC,IADZ,EAEIC,SAFJ;AAAA,gBAIIC,WAAA,KAAA,SAJJ;;AACYC,IAAAA,UAAA,GAAAH,IAAA;AAVLG,IAAAA,cAAA,GAAoB,KAApB;AAICA,IAAAA,SAAA,GAAc,CAAd;AACAA,IAAAA,UAAA,GAAe,CAAf;AACAA,IAAAA,gBAAA,GAAqB,CAArB;AACAA,IAAAA,kBAAA,GAAe,KAAf;;AAgGAA,IAAAA,aAAA,GAAU,UAAChC,CAAD;AACd,UAAMiC,KAAK,GAAGD,KAAI,CAACE,YAAL,GAAoBlC,CAAC,CAACC,MAAtB,GAA+BD,CAAC,CAACE,MAA/C;;AAEA,UAAI+B,KAAJ,EAAW;AACPjC,QAAAA,CAAC,CAACmC,cAAF;AACH;;AACDH,MAAAA,KAAI,CAACI,OAAL,CAAa,QAAb,EAAuB;AACnBH,QAAAA,KAAK;AADc,OAAvB;AAGH,KATO;;AAzFJ,QAAMC,YAAY,GAAGL,IAAI,KAAK,YAA9B;AACA,QAAIQ,YAAJ;AACA,QAAIC,UAAU,GAAgBR,SAA9B;;AAEA,QAAI,CAACA,SAAL,EAAgB;AACZQ,MAAAA,UAAU,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAb;AACAH,MAAAA,YAAY,GAAGE,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAf;AAEAF,MAAAA,UAAU,CAACG,YAAX,CAAwBJ,YAAxB,EAAsC,IAAtC;AACAL,MAAAA,KAAI,CAACU,QAAL,GAAgB,IAAhB;AACH,KAND,MAMO;AACHL,MAAAA,YAAY,GAAGP,SAAS,CAACa,aAAV,CAAwB,MAAIzF,uBAA5B,CAAf;AACH;;AACD0F,IAAAA,QAAQ,CACJN,UADI,EAEJJ,YAAY,GAAGlF,gCAAH,GACNC,8BAHF,CAAR;AAKA2F,IAAAA,QAAQ,CAACN,UAAD,EAAavF,qBAAb,CAAR;AACA6F,IAAAA,QAAQ,CAACP,YAAD,EAAenF,uBAAf,CAAR;AAEA8E,IAAAA,KAAI,CAACK,YAAL,GAAoBA,YAApB;AACAL,IAAAA,KAAI,CAACM,UAAL,GAAkBA,UAAlB;AACAN,IAAAA,KAAI,CAACE,YAAL,GAAoBA,YAApB;AACAF,IAAAA,KAAI,CAACa,KAAL,GAAa,IAAIC,KAAJ,CAAUR,UAAV,EAAsB;AAC/BR,MAAAA,SAAS,EAAEiB;AADoB,KAAtB,EAEVC,EAFU,CAEP,WAFO,EAEM,UAAAhD,CAAA;AACf,UAAMiD,MAAM,GAAGjD,CAAC,CAACkD,UAAF,CAAaD,MAA5B;AACA,UAAM9C,KAAK,GAAGH,CAAC,CAACG,KAAhB;AACA,UAAMgD,OAAO,GAAGnB,KAAI,CAACK,YAAL,KAAsBY,MAAtC;;AAEA,UAAI,CAACE,OAAL,EAAc;AACVC,QAAAA,UAAU,CAAC;AACPC,UAAAA,qBAAqB,CAAC;AAClB,gBAAMC,SAAS,GAAGtB,KAAI,CAACK,YAAL,CAAkBkB,qBAAlB,EAAlB;;AACA,gBAAMC,IAAI,GAAGF,SAAS,CAACpB,YAAY,GAAG,MAAH,GAAY,KAAzB,CAAtB;AACA,gBAAMuB,SAAS,GAAGH,SAAS,CAACpB,YAAY,GAAG,OAAH,GAAa,QAA1B,CAA3B;AACA,gBAAMwB,IAAI,GAAGF,IAAI,GAAGC,SAApB;AACA,gBAAME,SAAS,GAAG3D,CAAC,CAACkC,YAAY,GAAG,SAAH,GAAe,SAA5B,CAAnB;;AAEA,gBAAIsB,IAAI,IAAIG,SAAR,IAAqBA,SAAS,IAAID,IAAtC,EAA4C;AACxC;AACH;;AACD,gBAAME,IAAI,GAAG5B,KAAI,CAAC4B,IAAlB;AACA,gBAAM3B,KAAK,GAAG2B,IAAI,GAAGA,IAAP,GAAc5B,KAAI,CAAC6B,UAAjC;;AAEA7B,YAAAA,KAAI,CAAC8B,QAAL,CAAcN,IAAI,GAAGG,SAAP,GAAmB1B,KAAnB,GAA2B,CAACA,KAA1C;AACH,WAdoB,CAArB;AAeH,SAhBS,EAgBP,GAhBO,CAAV;AAkBH;;AACD9B,MAAAA,KAAK,CAACgD,OAAN,GAAgBA,OAAhB;AACAnD,MAAAA,CAAC,CAACkD,UAAF,CAAaa,eAAb;AACA/D,MAAAA,CAAC,CAACkD,UAAF,CAAaf,cAAb;AACH,KA9BY,EA8BVa,EA9BU,CA8BP,MA9BO,EA8BC,UAAAhD,CAAA;AACV,UAAI,CAACA,CAAC,CAACG,KAAF,CAAQgD,OAAb,EAAsB;AAClB;AACH;;AACDnB,MAAAA,KAAI,CAAC8B,QAAL,CAAc9B,KAAI,CAACE,YAAL,GAAoBlC,CAAC,CAACC,MAAtB,GAA+BD,CAAC,CAACE,MAA/C;AACH,KAnCY,CAAb;AAoCA8D,IAAAA,QAAQ,CAAChC,KAAI,CAACM,UAAN,EAAkB,OAAlB,EAA2BN,KAAI,CAACiC,OAAhC,EAAyC;AAC7CC,MAAAA,OAAO,EAAE;AADoC,KAAzC,CAAR;;AAGH;;;;AACM,kBAAA,GAAP,UAAgBjC,KAAhB;AACI,QAAMkC,KAAK,GAAGlC,KAAK,GAAG,KAAK2B,IAA3B;AAEA,SAAKxB,OAAL,CAAa,QAAb,EAAuB;AACnBH,MAAAA,KAAK,EAAE,KAAK4B,UAAL,GAAkBM;AADN,KAAvB;AAGH,GANM;;AAOA,gBAAA,GAAP,UAAcC,SAAd,EAAkChD,GAAlC,EAA+CwC,IAA/C,EAA6DC,UAA7D;AACI,SAAKzC,GAAL,GAAWA,GAAX;AACA,SAAKwC,IAAL,GAAYA,IAAZ;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AAEA,QAAMQ,OAAO,GAAGD,SAAS,IAAKP,UAAU,GAAGD,IAA3B,GAAmC,OAAnC,GAA6C,MAA7D;;AACM,QAAAU,KAAuB,KAAKpC,YAAL,GAAoB,CAAC,GAAD,EAAM,OAAN,CAApB,GAAqC,CAAC,GAAD,EAAM,QAAN,CAA5D;AAAA,QAACqC,QAAQ,QAAT;AAAA,QAAWC,QAAQ,QAAnB;;AAEN,SAAKlC,UAAL,CAAgBmC,KAAhB,CAAsBC,OAAtB,GAAgC,cAAYL,OAAZ,MAAhC;AACA,SAAKhC,YAAL,CAAkBoC,KAAlB,CAAwBC,OAAxB,IACUF,QAAQ,OAAR,GAAaZ,IAAI,GAAGA,IAAP,GAAcC,UAA3B,QAAA,IACJ,yBAAuBU,QAAvB,MAAA,GAAmCnD,GAAG,GAAGyC,UAAN,GAAmBD,IAAtD,QADI,CADV;AAGH,GAZM;;AAaA,iBAAA,GAAP;AACIe,IAAAA,WAAW,CAAC,KAAKrC,UAAN,EAAkB,OAAlB,EAA2B,KAAK2B,OAAhC,CAAX;AACA,SAAKpB,KAAL,CAAW+B,GAAX;AACA,SAAKA,GAAL;AACH,GAJM;;AAeX,kBAAA;AAlHA,EAAuCC,aAAvC;;AC8BA;;;AAA6BjD,EAAAA,iCAAA;AAoBzB;;;;;AAGA,yBAAA,CACYkD,gBADZ,EAEYC,eAFZ,EAGIC,OAHJ;AAGI,0BAAA,EAAA;AAAAA,MAAAA,YAAA;;;AAHJ,gBAKIjD,WAAA,KAAA,SALJ;;AACYC,IAAAA,sBAAA,GAAA8C,gBAAA;AACA9C,IAAAA,qBAAA,GAAA+C,eAAA;AAjBJ/C,IAAAA,aAAA,GAAkB,CAAlB;AACAA,IAAAA,aAAA,GAAkB,CAAlB;AACAA,IAAAA,oBAAA,GAAyB,CAAzB;AACAA,IAAAA,qBAAA,GAA0B,CAA1B;AACAA,IAAAA,mBAAA,GAAwB,CAAxB;AACAA,IAAAA,oBAAA,GAAyB,CAAzB;AACAA,IAAAA,gBAAA,GAAqB,CAArB;AACAA,IAAAA,eAAA,GAAoB,CAApB;AACAA,IAAAA,WAAA,GAAgB,CAAhB;AACAA,IAAAA,eAAA,GAAoB,CAApB;AACAA,IAAAA,cAAA,GAAoB,KAApB;AACAA,IAAAA,YAAA,GAAkB,KAAlB;AA4GR;;;;;AAIOA,IAAAA,YAAA,GAAS;AACN,UAAAsC,KAGFtC,KAAI,CAAC8C,gBAHH;AAAA,UACWG,cAAc,iBADzB;AAAA,UAEYC,eAAe,kBAF3B;AAIA,UAAAC,KAGFnD,KAAI,CAAC+C,eAHH;AAAA,UACWK,aAAa,iBADxB;AAAA,UAEYC,cAAc,kBAF1B;AAKNrD,MAAAA,KAAI,CAACiD,cAAL,GAAsBA,cAAtB;AACAjD,MAAAA,KAAI,CAACkD,eAAL,GAAuBA,eAAvB;AACAlD,MAAAA,KAAI,CAACoD,aAAL,GAAqBA,aAArB;AACApD,MAAAA,KAAI,CAACqD,cAAL,GAAsBA,cAAtB;AACH,KAdM;;AAqfCrD,IAAAA,cAAA,GAAW;AACT,UAAAsC,KAA4BtC,KAAI,CAACjE,cAAjC;AAAA,UAAEuH,UAAU,gBAAZ;AAAA,UAAcC,SAAS,eAAvB;AAEF,UAAAJ,KACAnD,KAAI,KADJ;AAAA,UAAAvE,IAAI,mBAAGH,eAAe,CAACG,SAAvB;AAEJ,UAAMwC,MAAM,GAAGqF,UAAU,GAAGtD,KAAI,CAACsD,UAAjC;AACA,UAAMpF,MAAM,GAAGqF,SAAS,GAAGvD,KAAI,CAACuD,SAAhC;;AACA,UAAMC,gBAAgB,GAAGxD,KAAI,CAACyD,aAAL,EAAzB;;AACA,UAAMC,eAAe,GAAG1D,KAAI,CAAC2D,YAAL,EAAxB;;AAEA,UAAI3D,KAAI,CAAC4D,MAAT,EAAiB;AACb5D,QAAAA,KAAI,CAAC4D,MAAL,GAAc,KAAd;AACH;;AACD5D,MAAAA,KAAI,CAACsD,UAAL,GAAkBA,UAAlB;AACAtD,MAAAA,KAAI,CAACuD,SAAL,GAAiBA,SAAjB;;AACAvD,MAAAA,KAAI,CAAC6D,QAAL,CACIL,gBAAgB,GAAGvF,MAAM,GAAGxC,IADhC,EAEIiI,eAAe,GAAGxF,MAAM,GAAGzC,IAF/B;AAIH,KAnBO;;AAoBAuE,IAAAA,aAAA,GAAU,UAAChC,CAAD;AACd,UAAMgF,OAAO,GAAGhD,KAAI,CAACgD,OAArB;AACA,UAAM1G,aAAa,GAAG0G,OAAO,CAAC1G,aAAR,IAAyBX,QAA/C;;AAEA,UAAIqH,OAAO,CAACrG,aAAR,IAAyBqB,CAAC,CAAC8F,OAA/B,EAAwC;AACpC,YAAI5F,MAAM,GAAGF,CAAC,CAACE,MAAf;AACA,YAAM6F,IAAI,GAAG7F,MAAM,IAAI,CAAV,GAAc,CAAd,GAAkB,CAAC,CAAhC;AACA,YAAM8F,QAAQ,GAAGnF,IAAI,CAACU,GAAL,CAASjD,aAAT,EAAwBuC,IAAI,CAACE,GAAL,CAASb,MAAT,CAAxB,CAAjB;AAGAA,QAAAA,MAAM,GAAG6F,IAAI,GAAGC,QAAhB;AACA,YAAM/D,KAAK,GAAG,CAAC/B,MAAf;AACA,YAAM+F,KAAK,GAAGpF,IAAI,CAACa,GAAL,CAAS,IAAIO,KAAK,IAAI+C,OAAO,CAACzG,UAAR,IAAsB,IAA1B,CAAlB,EAAmDuB,QAAnD,CAAd;;AAEAkC,QAAAA,KAAI,CAACI,OAAL,CAAa,OAAb,EAAsB;AAClB4D,UAAAA,QAAQ,UADU;AAElBC,UAAAA,KAAK,OAFa;AAGlBC,UAAAA,QAAQ,EAAE,CAHQ;AAIlBzI,UAAAA,IAAI,EAAEuE,KAAI,CAACvE,IAAL,GAAYwI,KAJA;AAKlB/C,UAAAA,UAAU,EAAElD,CALM;AAMlBmG,UAAAA,OAAO,EAAE;AANS,SAAtB;AAQH,OAlBD,MAkBO,IAAInB,OAAO,CAACpG,cAAZ,EAA4B;AAC/B,YAAMnB,IAAI,GAAGuE,KAAI,CAACvE,IAAlB;AAEA,YAAIwC,MAAM,GAAGD,CAAC,CAACC,MAAf;AACA,YAAIC,MAAM,GAAGF,CAAC,CAACE,MAAf;;AAEA,YAAIF,CAAC,CAACoG,QAAF,IAAc,CAACnG,MAAnB,EAA2B;AACvBA,UAAAA,MAAM,GAAGC,MAAT;AACAA,UAAAA,MAAM,GAAG,CAAT;AACH;;AACD8B,QAAAA,KAAI,CAAC8B,QAAL,CAAc7D,MAAM,GAAGxC,IAAvB,EAA6ByC,MAAM,GAAGzC,IAAtC;AACH,OAXM,MAWA;AACH;AACH;;AACDuC,MAAAA,CAAC,CAACmC,cAAF;AACH,KArCO;;AAsCAH,IAAAA,oBAAA,GAAiB,UAAChC,CAAD;AACrBgC,MAAAA,KAAI,CAACqE,SAAL,GAAiBrE,KAAI,CAACvE,IAAtB;AACAuC,MAAAA,CAAC,CAACmC,cAAF;AACH,KAHO;;AAIAH,IAAAA,qBAAA,GAAkB,UAAChC,CAAD;AACtBA,MAAAA,CAAC,CAACmC,cAAF;;AACA,UAAIH,KAAI,CAACa,KAAL,CAAWyD,MAAX,MAAuB,CAACtE,KAAI,CAACqE,SAAjC,EAA4C;AACxCrE,QAAAA,KAAI,CAACqE,SAAL,GAAiB,CAAjB;AACA;AACH;;AACD,UAAMJ,KAAK,GAAGjG,CAAC,CAACiG,KAAhB;;AAEAjE,MAAAA,KAAI,CAACI,OAAL,CAAa,OAAb,EAAsB;AAClB4D,QAAAA,QAAQ,EAAE,CADQ;AAElBC,QAAAA,KAAK,OAFa;AAGlBC,QAAAA,QAAQ,EAAElG,CAAC,CAACkG,QAHM;AAIlBzI,QAAAA,IAAI,EAAEuE,KAAI,CAACqE,SAAL,GAAiBJ,KAJL;AAKlB/C,QAAAA,UAAU,EAAElD,CALM;AAMlBmG,QAAAA,OAAO,EAAE;AANS,OAAtB;AAQH,KAhBO;;AAzpBJnE,IAAAA,KAAI,CAACgD,OAAL,yBACO1H,kBACA0H,QAFP;;AAIAhD,IAAAA,KAAI,CAACuE,IAAL;;;AACH;AACD;;;;;;;AAGO,sBAAA,GAAP;AACI,WAAO,KAAKzB,gBAAZ;AACH,GAFM;AAGP;;;;;AAGO,qBAAA,GAAP;AACI,WAAO,KAAKC,eAAZ;AACH,GAFM;AAGP;;;;;AAGO,oBAAA,GAAP;AACI,WAAO,KAAKhH,cAAZ;AACH,GAFM;AAGP;;;;;AAGQ,sBAAA,GAAP;AACG,WAAO,KAAKC,iBAAZ;AACH,GAFO;AAGR;;;;;AAGO,iBAAA,GAAP;AACI,SAAK4G,GAAL;AACA,SAAK/B,KAAL,CAAW2D,KAAX;AACA,SAAKC,iBAAL,CAAuBC,OAAvB;AACA,SAAKC,mBAAL,CAAyBD,OAAzB;AACA,SAAKE,YAAL,CAAkBF,OAAlB;AACA,QAAM5B,gBAAgB,GAAG,KAAKA,gBAA9B;AAEAH,IAAAA,WAAW,CAAC5B,MAAD,EAAS,QAAT,EAAmB,KAAK8D,MAAxB,CAAX;AACAlC,IAAAA,WAAW,CAAC,KAAK5G,cAAN,EAAsB,QAAtB,EAAgC,KAAK+I,QAArC,CAAX;AACAnC,IAAAA,WAAW,CAACG,gBAAD,EAAmB,OAAnB,EAA4B,KAAKb,OAAjC,CAAX;AACAU,IAAAA,WAAW,CAACG,gBAAD,EAAmB,eAAnB,EAAoC,KAAKiC,cAAzC,CAAX;AACApC,IAAAA,WAAW,CAACG,gBAAD,EAAmB,eAAnB,EAAoC,KAAKkC,eAAzC,CAAX;AAEA,SAAKnE,KAAL,GAAa,IAAb;AACA,SAAK+D,YAAL,GAAoB,IAApB;AACA,SAAK9B,gBAAL,GAAwB,IAAxB;AACA,SAAKC,eAAL,GAAuB,IAAvB;AACA,SAAKC,OAAL,GAAe,IAAf;AACH,GAnBM;AAoBP;;;;;;AAIO,sBAAA,GAAP,UAAoBiC,UAApB;AACI,WAAO,KAAK1B,SAAL,GAAiB,KAAK9H,IAAtB,GAA6B,KAAKyJ,OAAlC,IACAD,UAAU,GAAGlG,GAAG,CAAC,KAAKoG,SAAL,GAAiB,CAAjB,CAAD,CAAN,GAA8B,CADxC,CAAP;AAEH,GAHM;AAIP;;;;;;AAIO,uBAAA,GAAP,UAAqBF,UAArB;AACI,WAAO,KAAK3B,UAAL,GAAkB,KAAK7H,IAAvB,GAA8B,KAAK2J,OAAnC,IACAH,UAAU,GAAGlG,GAAG,CAAC,KAAKsG,SAAL,GAAiB,CAAjB,CAAD,CAAN,GAA8B,CADxC,CAAP;AAEH,GAHM;AAIP;;;;;AAGO,wBAAA,GAAP,UAAsBC,MAAtB;AACI,QAAMjG,KAAK,GAAG,KAAKgG,SAAL,CAAeC,MAAf,CAAd;AAEA,WAAO,KAAKrC,cAAL,GAAsBlE,GAAG,CAACM,KAAK,CAAC,CAAD,CAAN,CAAzB,GAAsCN,GAAG,CAACM,KAAK,CAAC,CAAD,CAAN,CAAhD;AACH,GAJM;AAKP;;;;;AAGO,yBAAA,GAAP,UAAuBiG,MAAvB;AACI,QAAMjG,KAAK,GAAG,KAAK8F,SAAL,CAAeG,MAAf,CAAd;AAEA,WAAO,KAAKpC,eAAL,GAAuBnE,GAAG,CAACM,KAAK,CAAC,CAAD,CAAN,CAA1B,GAAuCN,GAAG,CAACM,KAAK,CAAC,CAAD,CAAN,CAAjD;AACH,GAJM;AAMP;;;;;AAGO,sBAAA,GAAP;AACI,SAAKwF,MAAL;AAEA,QAAMpJ,IAAI,GAAG,KAAKA,IAAlB;AACA,QAAM8J,IAAI,GAAG,EAAE,KAAKtC,cAAL,GAAsBxH,IAAtB,GAA6B,KAAK2H,aAApC,IAAqD,CAAlE;AACA,QAAMoC,GAAG,GAAG,EAAE,KAAKtC,eAAL,GAAuBzH,IAAvB,GAA8B,KAAK4H,cAArC,IAAuD,CAAnE;AAEA,WAAO,KAAKQ,QAAL,CAAc0B,IAAd,EAAoBC,GAApB,CAAP;AACH,GARM;AA4BP;;;;;AAGO,kBAAA,GAAP,UAAgBvH,MAAhB,EAAgCC,MAAhC;AACI,WAAO,KAAK2F,QAAL,CAAc,KAAKJ,aAAL,KAAuBxF,MAArC,EAA6C,KAAK0F,YAAL,KAAsBzF,MAAnE,CAAP;AACH,GAFM;AAGP;;;;;;;AAKO,kBAAA,GAAP,UAAgBuH,CAAhB,EAA2BC,CAA3B;AAAA,oBAAA;;AACU,QAAApD,KAMF,IANE;AAAA,QACFa,YADE;AAAA,QACF1H,IAAI,mBAAGH,eAAe,CAACG,SADrB;AAAA,QAEFkK,cAFE;AAAA,QAEFpK,MAAM,mBAAGD,eAAe,CAACC,WAFvB;AAAA,QAGFqK,iBAHE;AAAA,QAGFpK,SAAS,mBAAGF,eAAe,CAACE,cAH1B;AAAA,QAIUqK,cAAc,gBAJxB;AAAA,QAKSC,aAAa,eALtB;;AAQA,QAAAC,KAAe,KAAKV,SAAL,CAAe,IAAf,EAAqB,IAArB,CAAf;AAAA,QAACW,IAAI,QAAL;AAAA,QAAOC,IAAI,QAAX;;AACA,QAAAC,KAAe,KAAKf,SAAL,CAAe,IAAf,EAAqB,IAArB,CAAf;AAAA,QAACgB,IAAI,QAAL;AAAA,QAAOC,IAAI,QAAX;;AAEN,QAAI9C,UAAU,GAAGzE,IAAI,CAACwH,KAAL,CAAWR,cAAX,CAAjB;AACA,QAAItC,SAAS,GAAG1E,IAAI,CAACwH,KAAL,CAAWP,aAAX,CAAhB;AAEA,QAAMQ,eAAe,GAAG,KAAKC,kBAAL,EAAxB;AACA,QAAMC,gBAAgB,GAAG,KAAKC,mBAAL,EAAzB;AACA,QAAMC,KAAK,GAAGjB,CAAC,GAAGhK,IAAlB;AACA,QAAMkL,KAAK,GAAGjB,CAAC,GAAGjK,IAAlB;;AAEA,QAAIiL,KAAK,GAAGlL,SAAR,IAAqBwK,IAAzB,EAA+B;AAC3B,UAAMY,YAAY,GAAG/H,IAAI,CAACa,GAAL,CAAS,CAAT,EAAYgH,KAAK,GAAGV,IAApB,CAArB;AAEA1C,MAAAA,UAAU,GAAGsD,YAAb;AACAnB,MAAAA,CAAC,GAAG,CAACO,IAAI,GAAGY,YAAR,IAAwBnL,IAA5B;AACH,KALD,MAKO,IAAIiL,KAAK,GAAGlL,SAAR,IAAqByK,IAAzB,EAA+B;AAClC,UAAMY,YAAY,GAAGhI,IAAI,CAACa,GAAL,CAAS,CAAT,EAAYuG,IAAI,GAAGS,KAAnB,CAArB;AAEApD,MAAAA,UAAU,GAAGgD,eAAe,GAAGO,YAA/B;AACApB,MAAAA,CAAC,GAAG,CAACQ,IAAI,GAAGY,YAAR,IAAwBpL,IAA5B;AACH,KALM,MAKA,IAAI6H,UAAU,GAAG9H,SAAjB,EAA4B;AAC/B8H,MAAAA,UAAU,IAAI/H,MAAd;AACH,KAFM,MAEA,IAAI+H,UAAU,GAAGgD,eAAe,GAAG9K,SAAnC,EAA8C;AACjD8H,MAAAA,UAAU,IAAI/H,MAAd;AACH;;AAED,QAAIoL,KAAK,GAAGnL,SAAR,IAAqB2K,IAAzB,EAA+B;AAC3B,UAAMS,YAAY,GAAG/H,IAAI,CAACa,GAAL,CAAS,CAAT,EAAYiH,KAAK,GAAGR,IAApB,CAArB;AAEA5C,MAAAA,SAAS,GAAGqD,YAAZ;AACAlB,MAAAA,CAAC,GAAG,CAACS,IAAI,GAAGS,YAAR,IAAwBnL,IAA5B;AACH,KALD,MAKO,IAAIkL,KAAK,GAAGnL,SAAR,IAAqB4K,IAAzB,EAA+B;AAClC,UAAMS,YAAY,GAAGhI,IAAI,CAACa,GAAL,CAAS,CAAT,EAAY0G,IAAI,GAAGO,KAAnB,CAArB;AAEApD,MAAAA,SAAS,GAAGiD,gBAAgB,GAAGK,YAA/B;AACAnB,MAAAA,CAAC,GAAG,CAACU,IAAI,GAAGS,YAAR,IAAwBpL,IAA5B;AACH,KALM,MAKA,IAAI8H,SAAS,GAAG/H,SAAhB,EAA2B;AAC9B+H,MAAAA,SAAS,IAAIhI,MAAb;AACH,KAFM,MAEA,IAAIgI,SAAS,GAAGiD,gBAAgB,GAAGhL,SAAnC,EAA8C;AACjD+H,MAAAA,SAAS,IAAIhI,MAAb;AACH;;AACD+H,IAAAA,UAAU,GAAGzE,IAAI,CAACwH,KAAL,CAAW/C,UAAX,CAAb;AACAC,IAAAA,SAAS,GAAG1E,IAAI,CAACwH,KAAL,CAAW9C,SAAX,CAAZ;AAEA,SAAKD,UAAL,GAAkBA,UAAlB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AAEA,SAAK6B,OAAL,GAAevG,IAAI,CAACwH,KAAL,CAAWZ,CAAC,GAAGnC,UAAU,GAAG7H,IAA5B,CAAf;AACA,SAAKyJ,OAAL,GAAerG,IAAI,CAACwH,KAAL,CAAWX,CAAC,GAAGnC,SAAS,GAAG9H,IAA3B,CAAf;AAEA,SAAKqL,MAAL;AACA,QAAMC,KAAK,GAAG,KAAKtD,aAAL,EAAd;AACA,QAAMuD,KAAK,GAAG,KAAKrD,YAAL,EAAd;AAEA;;;;;;;;;;;;;;;;AAeA,SAAKvD,OAAL,CAAa,QAAb,EAAuB;AACnBkD,MAAAA,UAAU,EAAEyD,KADO;AAEnBxD,MAAAA,SAAS,EAAEyD;AAFQ,KAAvB;;AAKA,QAAInI,IAAI,CAACwH,KAAL,CAAWR,cAAX,MAA+BvC,UAA/B,IAA6CzE,IAAI,CAACwH,KAAL,CAAWP,aAAX,MAA8BvC,SAA/E,EAA0F;AACtF,WAAKK,MAAL,GAAc,IAAd;AACA,WAAKqD,IAAL,CAAU3D,UAAV,EAAsBC,SAAtB;AACAlC,MAAAA,qBAAqB,CAAC;AAClB,YAAI,CAACrB,KAAI,CAAC4D,MAAV,EAAkB;AACd;AACH;;AACD5D,QAAAA,KAAI,CAAC4D,MAAL,GAAc,KAAd;AACM,YAAAtB,KAGFtC,KAAI,CAACjE,cAHH;AAAA,YACUmL,iBAAiB,gBAD3B;AAAA,YAESC,gBAAgB,eAFzB;AAKNnH,QAAAA,KAAI,CAACsD,UAAL,GAAkB4D,iBAAlB;AACAlH,QAAAA,KAAI,CAACuD,SAAL,GAAiB4D,gBAAjB;;AAEA,YAAI7D,UAAU,KAAKzE,IAAI,CAACwH,KAAL,CAAWa,iBAAX,CAAf,IAAgD3D,SAAS,KAAK1E,IAAI,CAACwH,KAAL,CAAWc,gBAAX,CAAlE,EAAgG;AAC5FnH,UAAAA,KAAI,CAAC6D,QAAL,CAAckD,KAAd,EAAqBC,KAArB;AACH;AACJ,OAhBoB,CAArB;AAiBA,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH,GA3GM;AA4GP;;;;;AAGO,iBAAA,GAAP,UAAevL,IAAf;AACU,QAAA6G,KAMF,IANE;AAAA,QACFW,cAAc,oBADZ;AAAA,QAEFC,eAAe,qBAFb;AAAA,QAGFC,mBAHE;AAAA,QAGFtG,WAAW,mBAAGvB,eAAe,CAACuB,gBAH5B;AAAA,QAIF8I,mBAJE;AAAA,QAIF7I,WAAW,mBAAGxB,eAAe,CAACwB,gBAJ5B;AAAA,QAKIsK,QAAQ,UALZ;;AAQN,QAAM9D,UAAU,GAAG,KAAKG,aAAL,EAAnB;AACA,QAAMF,SAAS,GAAG,KAAKI,YAAL,EAAlB;AAEA,SAAKX,OAAL,CAAavH,IAAb,GAAoBA,IAApB;AAEA,QAAM4L,cAAc,GAAG,KAAK5D,aAAL,EAAvB;AACA,QAAM6D,aAAa,GAAG,KAAK3D,YAAL,EAAtB;AAEA,QAAM+C,KAAK,GAAGa,eAAe,CAAC,KAAG1K,WAAJ,EAAmBoG,cAAnB,CAA7B;AACA,QAAM0D,KAAK,GAAGY,eAAe,CAAC,KAAGzK,WAAJ,EAAmBoG,eAAnB,CAA7B;AACA,QAAMsE,OAAO,GAAGlE,UAAU,GAAGoD,KAAK,GAAGU,QAArC;AACA,QAAMK,OAAO,GAAGlE,SAAS,GAAGoD,KAAK,GAAGS,QAApC;AAEA,QAAMM,WAAW,GAAGL,cAAc,GAAGX,KAAK,GAAGjL,IAA7C;AACA,QAAMkM,WAAW,GAAGL,aAAa,GAAGX,KAAK,GAAGlL,IAA5C;AAEA,SAAKqG,QAAL,CAAc0F,OAAO,GAAGE,WAAxB,EAAqCD,OAAO,GAAGE,WAA/C;AACA,SAAKb,MAAL;AACH,GA3BM;AA4BP;;;;;AAGO,mBAAA,GAAP,UAAiBxB,MAAjB,EAAmChG,MAAnC;AACU,QAAAgD,KAMF,IANE;AAAA,QACFa,cADE;AAAA,QACFzH,MAAM,mBAAGJ,eAAe,CAACI,WADvB;AAAA,QAEFiK,oBAFE;AAAA,QAEF9J,YAAY,mBAAGP,eAAe,CAACO,iBAF7B;AAAA,QAGF+J,cAHE;AAAA,QAGFrK,MAAM,mBAAGD,eAAe,CAACC,WAHvB;AAAA,QAIFwK,YAJE;AAAA,QAIFtK,IAAI,mBAAGH,eAAe,CAACG,SAJrB;AAAA,QAKFD,SAAS,eALP;;AAQN,QAAM6D,KAAK,GAAGF,QAAQ,CAClB,KAAKsE,aAAL,EADkB,EAElBlI,MAFkB,EAGlBG,MAHkB,EAIlBF,SAJkB,EAKlB8D,MALkB,CAAtB;;AAQA,QAAI,CAACgG,MAAL,EAAa;AACT,aAAO,CAACjG,KAAK,CAAC,CAAD,CAAL,GAAWxD,YAAY,CAAC,CAAD,CAAxB,EAA6BwD,KAAK,CAAC,CAAD,CAAL,GAAWxD,YAAY,CAAC,CAAD,CAApD,CAAP;AACH;;AACD,WAAO,CACHwD,KAAK,CAAC,CAAD,CAAL,GAAW5D,IAAX,GAAkBI,YAAY,CAAC,CAAD,CAD3B,EAEHgD,IAAI,CAACa,GAAL,CAAS,KAAK0D,aAAL,GAAqB3H,IAArB,GAA4B,KAAKwH,cAA1C,EAA0D5D,KAAK,CAAC,CAAD,CAAL,GAAW5D,IAAX,GAAkBI,YAAY,CAAC,CAAD,CAAxF,CAFG,CAAP;AAIH,GAxBM;AAyBP;;;;;AAGO,mBAAA,GAAP,UAAiByJ,MAAjB,EAAmChG,MAAnC;AACU,QAAAgD,KAKF,IALE;AAAA,QACFa,cADE;AAAA,QACFvH,MAAM,mBAAGN,eAAe,CAACM,WADvB;AAAA,QAEF+J,cAFE;AAAA,QAEFpK,MAAM,mBAAGD,eAAe,CAACC,WAFvB;AAAA,QAGFqK,YAHE;AAAA,QAGFnK,IAAI,mBAAGH,eAAe,CAACG,SAHrB;AAAA,QAIFD,SAAS,eAJP;;AAON,QAAM6D,KAAK,GAAGF,QAAQ,CAClB,KAAKwE,YAAL,EADkB,EAElBpI,MAFkB,EAGlBK,MAHkB,EAIlBJ,SAJkB,EAKlB8D,MALkB,CAAtB;;AAOA,QAAI,CAACgG,MAAL,EAAa;AACT,aAAOjG,KAAP;AACH;;AACD,WAAO,CACHA,KAAK,CAAC,CAAD,CAAL,GAAW5D,IADR,EAEHoD,IAAI,CAACa,GAAL,CAAS,KAAK2D,cAAL,GAAsB5H,IAAtB,GAA6B,KAAKyH,eAA3C,EAA4D7D,KAAK,CAAC,CAAD,CAAL,GAAW5D,IAAvE,CAFG,CAAP;AAIH,GAtBM;;AAuBC,cAAA,GAAR;AAAA,oBAAA;AAEI;AACA;;;AACA,QAAMqH,gBAAgB,GAAG,KAAKA,gBAA9B;AACA,QAAME,OAAO,GAAG,KAAKA,OAArB;;AAGA,QAAIjH,cAAc,GAAGiH,OAAO,CAACjH,cAAR,IACd+G,gBAAgB,CAACnC,aAAjB,CAA+B,MAAI9F,kBAAnC,CADP;AAEA,QAAImB,iBAAiB,GAAGgH,OAAO,CAAChH,iBAAR,IACjB8G,gBAAgB,CAACnC,aAAjB,CAA+B,MAAI7F,sBAAnC,CADP;AAEA,QAAMmB,uBAAuB,GAAG+G,OAAO,CAAC/G,uBAAR,IACzB6G,gBAAgB,CAACnC,aAAjB,CAA+B,MAAI3F,gCAAnC,CADP;AAEA,QAAMkB,qBAAqB,GAAG8G,OAAO,CAAC9G,qBAAR,IACvB4G,gBAAgB,CAACnC,aAAjB,CAA+B,MAAI1F,8BAAnC,CADP;;AAGA,QAAIc,cAAJ,EAAoB;AAChB,WAAKA,cAAL,GAAsBA,cAAtB;AACH,KAFD,MAEO;AACHA,MAAAA,cAAc,GAAGwE,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAjB;AACAzE,MAAAA,cAAc,CAAC0E,YAAf,CAA4B,KAAKsC,eAAjC,EAAkD,IAAlD;AACAD,MAAAA,gBAAgB,CAACrC,YAAjB,CAA8B1E,cAA9B,EAA8C,IAA9C;AAEA,WAAKA,cAAL,GAAsBA,cAAtB;AACH;;AAED,QAAIC,iBAAJ,EAAuB;AACnB,WAAKA,iBAAL,GAAyBA,iBAAzB;AACH,KAFD,MAEO;AACHA,MAAAA,iBAAiB,GAAGuE,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAApB;AAEAzE,MAAAA,cAAc,CAAC0E,YAAf,CAA4BzE,iBAA5B,EAA+CD,cAAc,CAAC6L,UAA9D;AAEA,WAAK5L,iBAAL,GAAyBA,iBAAzB;AACH;;AACD4E,IAAAA,QAAQ,CAACkC,gBAAD,EAAmB7F,UAAnB,CAAR;AACA2D,IAAAA,QAAQ,CAAC7E,cAAD,EAAiBlB,kBAAjB,CAAR;AACA+F,IAAAA,QAAQ,CAAC5E,iBAAD,EAAoBlB,sBAApB,CAAR;AAEA,SAAK6J,mBAAL,GAA2B,IAAIkD,SAAJ,CAAc,YAAd,EAA4B5L,uBAA5B,CAA3B;AACA,SAAKwI,iBAAL,GAAyB,IAAIoD,SAAJ,CAAc,UAAd,EAA0B3L,qBAA1B,CAAzB;AAEA,SAAKyI,mBAAL,CAAyB3D,EAAzB,CAA4B,QAA5B,EAAsC,UAAAhD,CAAA;AAClCgC,MAAAA,KAAI,CAAC8B,QAAL,CAAc9D,CAAC,CAACiC,KAAF,GAAUD,KAAI,CAACvE,IAA7B,EAAmC,CAAnC;AACH,KAFD;AAIA,SAAKgJ,iBAAL,CAAuBzD,EAAvB,CAA0B,QAA1B,EAAoC,UAAAhD,CAAA;AAChCgC,MAAAA,KAAI,CAAC8B,QAAL,CAAc,CAAd,EAAiB9D,CAAC,CAACiC,KAAF,GAAUD,KAAI,CAACvE,IAAhC;AACH,KAFD;;AAIA,QAAI,KAAKkJ,mBAAL,CAAyBjE,QAA7B,EAAuC;AACnCoC,MAAAA,gBAAgB,CAACrC,YAAjB,CAA8B,KAAKkE,mBAAL,CAAyBrE,UAAvD,EAAmE,IAAnE;AACH;;AACD,QAAI,KAAKmE,iBAAL,CAAuB/D,QAA3B,EAAqC;AACjCoC,MAAAA,gBAAgB,CAACrC,YAAjB,CAA8B,KAAKgE,iBAAL,CAAuBnE,UAArD,EAAiE,IAAjE;AACH;;AACD,SAAKsE,YAAL,GAAoBzJ,QAAQ,CAAC2M,MAAT,CAAgBhF,gBAAhB,EAAkC;AAClDiF,MAAAA,KAAK,EAAE,KAAK/E,OAAL,CAAa3G;AAD8B,KAAlC,CAApB;AAGA;;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;;;;;;;;;;;;AAmBA,SAAKwE,KAAL,GAAa,IAAIC,KAAJ,CAAUgC,gBAAV,EAA4B;AACrChD,MAAAA,SAAS,EAAES,QAAQ,CAACyH,IADiB;AAErCC,MAAAA,MAAM,EAAE,CAAC,OAAD;AAF6B,KAA5B,EAGVjH,EAHU,CAGP,WAHO,EAGM,UAACsB,EAAD;UAAGpB,UAAU;UAAE/C,KAAK;UAAE+J,IAAI;;AACzClI,MAAAA,KAAI,CAACmI,cAAL;;AACAnI,MAAAA,KAAI,CAACoI,QAAL,GAAgB,KAAhB;;AACA,UAAMC,MAAM,GAAGrI,KAAI,CAACI,OAAL,CAAa,WAAb,EAA0B;AACrCc,QAAAA,UAAU;AAD2B,OAA1B,CAAf;;AAGA,UAAImH,MAAM,KAAK,KAAf,EAAsB;AAClBH,QAAAA,IAAI;AACJ;AACH;;AAEDhH,MAAAA,UAAU,CAACf,cAAX;AAEAhC,MAAAA,KAAK,CAACmK,UAAN,GAAmBpH,UAAnB;AACH,KAjBY,EAiBVF,EAjBU,CAiBP,MAjBO,EAiBC,UAAAhD,CAAA;AACV,UAAI,CAACgC,KAAI,CAACgD,OAAL,CAAa7G,QAAd,IAA0B6B,CAAC,CAACuK,OAAhC,EAAyC;AACrCvI,QAAAA,KAAI,CAACI,OAAL,CAAa,MAAb,wBACOpC;AACHkD,UAAAA,UAAU,EAAElD,CAAC,CAACkD;UAFlB;;AAIAnD,QAAAA,YAAY,CAACC,CAAD,CAAZ;AACA,YAAMvC,IAAI,GAAGuE,KAAI,CAACvE,IAAlB;;AACAuE,QAAAA,KAAI,CAAC8B,QAAL,CAAc,CAAC9D,CAAC,CAACC,MAAH,GAAYxC,IAA1B,EAAgC,CAACuC,CAAC,CAACE,MAAH,GAAYzC,IAA5C;AACH,OARD,MAQO,IAAI,CAACuE,KAAI,CAACoI,QAAN,IAAkBpK,CAAC,CAACwK,QAAF,GAAaxF,OAAO,CAAC5G,cAA3C,EAA2D;AAC9D4D,QAAAA,KAAI,CAACoI,QAAL,GAAgB,IAAhB;;AAEApI,QAAAA,KAAI,CAACI,OAAL,CAAa,YAAb,EAA2B;AACvBc,UAAAA,UAAU,EAAElD,CAAC,CAACG,KAAF,CAAQmK,UAAR,IAAsBtK,CAAC,CAACkD;AADb,SAA3B;AAGH;AACJ,KAjCY,EAiCVF,EAjCU,CAiCP,SAjCO,EAiCI,UAAAhD,CAAA;AACbgC,MAAAA,KAAI,CAACI,OAAL,CAAa,SAAb,EAAwB;AACpBqI,QAAAA,MAAM,EAAEzK,CAAC,CAACyK,MADU;AAEpBC,QAAAA,QAAQ,EAAE1K,CAAC,CAAC0K,QAFQ;AAGpBxH,QAAAA,UAAU,EAAElD,CAAC,CAACkD;AAHM,OAAxB;;AAKAlB,MAAAA,KAAI,CAAC2I,cAAL,CAAoB3K,CAAC,CAACG,KAAF,CAAQK,KAA5B;AACH,KAxCY,EAwCVwC,EAxCU,CAwCP,YAxCO,EAwCO,UAACsB,EAAD;UAAGpB,UAAU;UAAE/C,KAAK;UAAE+J,IAAI;AAC1ChH,MAAAA,UAAU,CAACf,cAAX;;AACAH,MAAAA,KAAI,CAACmI,cAAL;;AACAhK,MAAAA,KAAK,CAACyK,SAAN,GAAkB5I,KAAI,CAACvE,IAAvB;;AAEA,UAAM4M,MAAM,GAAGrI,KAAI,CAACI,OAAL,CAAa,YAAb,EAA2B;AACtCc,QAAAA,UAAU;AAD4B,OAA3B,CAAf;;AAGA,UAAImH,MAAM,KAAK,KAAf,EAAsB;AAClBH,QAAAA,IAAI;AACP;AACJ,KAnDY,EAmDVlH,EAnDU,CAmDP,OAnDO,EAmDE,UAAAhD,CAAA;AACX;AACA;AACAgC,MAAAA,KAAI,CAACI,OAAL,CAAa,OAAb,EAAsB;AAClB8D,QAAAA,QAAQ,EAAElG,CAAC,CAACkG,QADM;AAElBF,QAAAA,QAAQ,EAAEhG,CAAC,CAACgG,QAFM;AAGlBC,QAAAA,KAAK,EAAEjG,CAAC,CAACiG,KAHS;AAIlBxI,QAAAA,IAAI,EAAEuC,CAAC,CAACG,KAAF,CAAQyK,SAAR,GAAoB5K,CAAC,CAACiG,KAJV;AAKlB/C,QAAAA,UAAU,EAAElD,CAAC,CAACkD,UALI;AAMlBiD,QAAAA,OAAO,EAAE;AANS,OAAtB;AAQH,KA9DY,CAAb;AAgEAnC,IAAAA,QAAQ,CAACjG,cAAD,EAAiB,QAAjB,EAA2B,KAAK+I,QAAhC,CAAR;AACA9C,IAAAA,QAAQ,CAACjB,MAAD,EAAS,QAAT,EAAmB,KAAK8D,MAAxB,CAAR;;AAEA,QAAI7B,OAAO,CAACrG,aAAR,IAAyBqG,OAAO,CAACpG,cAArC,EAAqD;AACjDoF,MAAAA,QAAQ,CAACc,gBAAD,EAAmB,OAAnB,EAA4B,KAAKb,OAAjC,EAA0C;AAC9CC,QAAAA,OAAO,EAAE;AADqC,OAA1C,CAAR;AAGH;;AACD,QAAIc,OAAO,CAAChG,UAAZ,EAAwB;AACpBgF,MAAAA,QAAQ,CAACc,gBAAD,EAAmB,cAAnB,EAAmC,KAAKiC,cAAxC,EAAwD;AAC5D7C,QAAAA,OAAO,EAAE;AADmD,OAAxD,CAAR;AAGAF,MAAAA,QAAQ,CAACc,gBAAD,EAAmB,eAAnB,EAAoC,KAAKkC,eAAzC,EAA0D;AAC9D9C,QAAAA,OAAO,EAAE;AADqD,OAA1D,CAAR;AAGH;;AACD,SAAK2C,MAAL;AACA,SAAKiC,MAAL;AACA,SAAKjD,QAAL,CAAc,CAAd,EAAiB,CAAjB;AACH,GAjOO;;AAkOA,gBAAA,GAAR;AACU,QAAAvB,KAKF,IALE;AAAA,QACF8C,OAAO,aADL;AAAA,QAEFF,OAAO,aAFL;AAAA,QAGF/B,YAHE;AAAA,QAGF1H,IAAI,mBAAGH,eAAe,CAACG,SAHrB;AAAA,QAIFkK,kBAJE;AAAA,QAIF5I,UAAU,mBAAG,MAJX;;AAOF,QAAA6I,KACA,KAAK5C,OAAL,aADA;AAAA,QAAAtG,YAAY,mBAAGpB,eAAe,CAACoB,iBAA/B;AAEJ,QAAMmM,WAAW,GAAG,CAACzD,OAAD,GAAW3J,IAA/B;AACA,QAAMqN,WAAW,GAAG,CAAC5D,OAAD,GAAWzJ,IAA/B;AAEA,SAAKO,iBAAL,CAAuByG,KAAvB,CAA6BC,OAA7B,GACM,uBAAqB,KAAK6D,kBAAL,EAArB,SAAA,IACA,wBAAsB,KAAKE,mBAAL,EAAtB,SADA,CADN;AAIA,QAAMsC,aAAa,GAAG,KAAKhG,eAAL,CAAqBN,KAA3C;;AAEA,QAAI/F,YAAY,KAAK,KAArB,EAA4B;AACxBqM,MAAAA,aAAa,CAACrG,OAAd,IAAyB,8BAA4BoG,WAA5B,eAAA,GAAoDD,WAApD,QAAzB;AACH,KAFD,MAEO;AACHE,MAAAA,aAAa,CAACrG,OAAd,IAAyB,iDAA+CmG,WAA/C,SAAA,GAAiEC,WAAjE,SAAA,GAAmF/L,UAAnF,eAAA,GAA0GtB,IAA1G,OAAzB;AACH;;AACD,SAAKuN,YAAL;AACH,GAzBO;;AA0BA,sBAAA,GAAR;AACU,QAAA1G,KAIF,IAJE;AAAA,QACFW,cAAc,oBADZ;AAAA,QAEFC,eAAe,qBAFb;AAAA,QAGFzH,IAAI,UAHF;;AAKN,QAAM6H,UAAU,GAAG,KAAKG,aAAL,CAAmB,IAAnB,IAA2BhI,IAA9C;AACA,QAAM8H,SAAS,GAAG,KAAKI,YAAL,CAAkB,IAAlB,IAA0BlI,IAA5C;AACA,QAAMwN,WAAW,GAAG,KAAKC,cAAL,CAAoB,IAApB,CAApB;AACA,QAAMC,YAAY,GAAG,KAAKC,eAAL,CAAqB,IAArB,CAArB;AAEA,SAAKzE,mBAAL,CAAyBmC,MAAzB,CACI,KAAKtK,uBADT,EAEI8G,UAFJ,EAGIL,cAHJ,EAIIgG,WAJJ;AAMA,SAAKxE,iBAAL,CAAuBqC,MAAvB,CACI,KAAKrK,qBADT,EAEI8G,SAFJ,EAGIL,eAHJ,EAIIiG,YAJJ;AAMH,GAvBO;;AAwBA,cAAA,GAAR,UAAa7F,UAAb,EAAiCC,SAAjC;AACI,QAAMxH,cAAc,GAAG,KAAKA,cAA5B;AAEAA,IAAAA,cAAc,CAACuH,UAAf,GAA4BA,UAA5B;AACAvH,IAAAA,cAAc,CAACwH,SAAf,GAA2BA,SAA3B;AACH,GALO;;AAqFA,wBAAA,GAAR,UAAuB/E,KAAvB;AAAA,oBAAA;;AACI,QAAI,CAACA,KAAD,IAAW,CAACA,KAAK,CAAC,CAAD,CAAN,IAAa,CAACA,KAAK,CAAC,CAAD,CAAlC,EAAwC;AACpC;AACH;;AACD,QAAMG,CAAC,GAAG,CAAC,MAAX;;AACA,QAAM0K,MAAM,GAAG,UAAA5D,CAAA;AAAK,aAAA,IAAI5G,IAAI,CAACyK,GAAL,CAAS,IAAI7D,CAAb,EAAgB,CAAhB,CAAJ;AAAsB,KAA1C;;AACA,QAAMxG,QAAQ,GAAGP,WAAW,CAACF,KAAD,EAAQG,CAAR,CAA5B;AACA,QAAM4K,OAAO,GAAGvK,UAAU,CAACR,KAAD,EAAQG,CAAR,CAA1B;AACA,QAAM6K,SAAS,GAAGnL,IAAI,CAACC,GAAL,EAAlB;AACA,QAAImL,QAAQ,GAAGD,SAAf;;AAEA,QAAME,IAAI,GAAG;AACT,UAAMpL,GAAG,GAAGD,IAAI,CAACC,GAAL,EAAZ;AACA,UAAIqL,CAAC,GAAGrL,GAAG,GAAGkL,SAAd;;AAEA,UAAIvK,QAAQ,GAAG0K,CAAf,EAAkB;AACdA,QAAAA,CAAC,GAAG1K,QAAJ;AACH;;AACD,UAAMkD,KAAK,GAAGkH,MAAM,CAACM,CAAC,GAAG1K,QAAL,CAApB;AACA,UAAM2K,SAAS,GAAGP,MAAM,CAAC,CAACI,QAAQ,GAAGD,SAAZ,IAAyBvK,QAA1B,CAAxB;AAEAwK,MAAAA,QAAQ,GAAGnL,GAAX;;AAEA0B,MAAAA,KAAI,CAAC8B,QAAL,CACI,CAACyH,OAAO,CAAC,CAAD,CAAR,IAAepH,KAAK,GAAGyH,SAAvB,CADJ,EAEI,CAACL,OAAO,CAAC,CAAD,CAAR,IAAepH,KAAK,GAAGyH,SAAvB,CAFJ;;AAKA,UAAID,CAAC,IAAI1K,QAAT,EAAmB;AACf;AACH;;AACDe,MAAAA,KAAI,CAAC6J,KAAL,GAAaxI,qBAAqB,CAACqI,IAAD,CAAlC;AACH,KArBD;;AAsBA,SAAKG,KAAL,GAAaxI,qBAAqB,CAACqI,IAAD,CAAlC;AACH,GAlCO;;AAmCA,wBAAA,GAAR;AACII,IAAAA,oBAAoB,CAAC,KAAKD,KAAN,CAApB;AACH,GAFO;;AAGA,4BAAA,GAAR;AACU,QAAAvH,KAAa,KAAK+C,SAAL,CAAe,IAAf,CAAb;AAAA,QAAC9F,GAAG,QAAJ;AAAA,QAAMG,GAAG,QAAT;;AACN,WAAOH,GAAG,IAAIG,GAAP,GAAa,KAAKnE,MAAL,GAAc,CAA3B,GAA+B,CAAtC;AACH,GAHO;;AAIA,6BAAA,GAAR;AACU,QAAA+G,KAAa,KAAK6C,SAAL,CAAe,IAAf,CAAb;AAAA,QAAC5F,GAAG,QAAJ;AAAA,QAAMG,GAAG,QAAT;;AACN,WAAOH,GAAG,IAAIG,GAAP,GAAa,KAAKnE,MAAL,GAAc,CAA3B,GAA+B,CAAtC;AACH,GAHO;;AAjvBNwO,EAAAA,cAAc,eAvBnBC,UAAU,CAAC7M,UAAD,EAAoB,UAAC8M,SAAD,EAAYC,QAAZ;AAC3B,QAAMC,UAAU,GAAiB;AAC7BC,MAAAA,UAAU,EAAE,IADiB;AAE7BC,MAAAA,YAAY,EAAE,IAFe;AAG7BC,MAAAA,GAAG;AACC,eAAO,KAAKtH,OAAL,CAAakH,QAAb,CAAP;AACH;AAL4B,KAAjC;AAOA,QAAMK,MAAM,GAAGC,QAAQ,CAAC,SAAON,QAAR,CAAvB;;AACA,QAAID,SAAS,CAACM,MAAD,CAAb,EAAuB;AACnBJ,MAAAA,UAAU,CAACM,GAAX,GAAiB,UAAUC,KAAV;AACb,aAAKH,MAAL,EAAaG,KAAb;AACH,OAFD;AAGH,KAJD,MAIO;AACHP,MAAAA,UAAU,CAACM,GAAX,GAAiB,UAAUC,KAAV;AACb,aAAK1H,OAAL,CAAakH,QAAb,IAAyBQ,KAAzB;AACH,OAFD;AAGH;;AACDjN,IAAAA,MAAM,CAACkN,cAAP,CAAsBV,SAAtB,EAAiCC,QAAjC,EAA2CC,UAA3C;AACH,GAnBU;AAoBX;;;KAGMJ,eAAA;AAqvBN,uBAAA;AAAC,EArvB4BlH,aAA7B;;ACpCA;;;AAA4CjD,EAAAA,iCAAA;;AAA5C,yBAAA;;AAAoE;;AAAD,uBAAA;AAAnE,EAA4CgL,eAA5C;;;;;"}